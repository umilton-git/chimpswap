{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ulyss\\\\chimpswap\\\\chimpswap-interface-main\\\\src\\\\index.tsx\";\nimport { createWeb3ReactRoot, Web3ReactProvider } from '@web3-react/core';\nimport 'inter-ui';\nimport React, { StrictMode } from 'react';\nimport { isMobile } from 'react-device-detect';\nimport ReactDOM from 'react-dom';\nimport ReactGA from 'react-ga';\nimport { Provider } from 'react-redux';\nimport { HashRouter } from 'react-router-dom';\nimport Blocklist from './components/Blocklist';\nimport { NetworkContextName } from './constants';\nimport './i18n';\nimport App from './pages/App';\nimport store from './state';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport ApplicationUpdater from './state/application/updater';\nimport ListsUpdater from './state/lists/updater';\nimport MulticallUpdater from './state/multicall/updater';\nimport TransactionUpdater from './state/transactions/updater';\nimport UserUpdater from './state/user/updater';\nimport ThemeProvider, { FixedGlobalStyle, ThemedGlobalStyle } from './theme';\nimport getLibrary from './utils/getLibrary';\nconst Web3ProviderNetwork = createWeb3ReactRoot(NetworkContextName);\n\nif (!!window.ethereum) {\n  window.ethereum.autoRefreshOnNetworkChange = false;\n}\n\nconst GOOGLE_ANALYTICS_ID = process.env.REACT_APP_GOOGLE_ANALYTICS_ID;\n\nif (typeof GOOGLE_ANALYTICS_ID === 'string') {\n  ReactGA.initialize(GOOGLE_ANALYTICS_ID, {\n    gaOptions: {\n      storage: 'none',\n      storeGac: false\n    }\n  });\n  ReactGA.set({\n    anonymizeIp: true,\n    customBrowserType: !isMobile ? 'desktop' : 'web3' in window || 'ethereum' in window ? 'mobileWeb3' : 'mobileRegular'\n  });\n} else {\n  ReactGA.initialize('test', {\n    testMode: true,\n    debug: true\n  });\n}\n\nwindow.addEventListener('error', error => {\n  ReactGA.exception({\n    description: `${error.message} @ ${error.filename}:${error.lineno}:${error.colno}`,\n    fatal: true\n  });\n});\n\nfunction Updaters() {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ListsUpdater, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(UserUpdater, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ApplicationUpdater, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(TransactionUpdater, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(MulticallUpdater, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }));\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(StrictMode, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(FixedGlobalStyle, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }\n}), /*#__PURE__*/React.createElement(Web3ReactProvider, {\n  getLibrary: getLibrary,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(Web3ProviderNetwork, {\n  getLibrary: getLibrary,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(Blocklist, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(Provider, {\n  store: store,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 11\n  }\n}, /*#__PURE__*/React.createElement(Updaters, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 13\n  }\n}), /*#__PURE__*/React.createElement(ThemeProvider, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 13\n  }\n}, /*#__PURE__*/React.createElement(ThemedGlobalStyle, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 15\n  }\n}), /*#__PURE__*/React.createElement(HashRouter, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 15\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 17\n  }\n})))))))), document.getElementById('root'));\nserviceWorkerRegistration.unregister();","map":{"version":3,"sources":["C:/Users/Ulyss/chimpswap/chimpswap-interface-main/src/index.tsx"],"names":["createWeb3ReactRoot","Web3ReactProvider","React","StrictMode","isMobile","ReactDOM","ReactGA","Provider","HashRouter","Blocklist","NetworkContextName","App","store","serviceWorkerRegistration","ApplicationUpdater","ListsUpdater","MulticallUpdater","TransactionUpdater","UserUpdater","ThemeProvider","FixedGlobalStyle","ThemedGlobalStyle","getLibrary","Web3ProviderNetwork","window","ethereum","autoRefreshOnNetworkChange","GOOGLE_ANALYTICS_ID","process","env","REACT_APP_GOOGLE_ANALYTICS_ID","initialize","gaOptions","storage","storeGac","set","anonymizeIp","customBrowserType","testMode","debug","addEventListener","error","exception","description","message","filename","lineno","colno","fatal","Updaters","render","document","getElementById","unregister"],"mappings":"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","sourcesContent":["import { createWeb3ReactRoot, Web3ReactProvider } from '@web3-react/core'\nimport 'inter-ui'\nimport React, { StrictMode } from 'react'\nimport { isMobile } from 'react-device-detect'\nimport ReactDOM from 'react-dom'\nimport ReactGA from 'react-ga'\nimport { Provider } from 'react-redux'\nimport { HashRouter } from 'react-router-dom'\nimport Blocklist from './components/Blocklist'\nimport { NetworkContextName } from './constants'\nimport './i18n'\nimport App from './pages/App'\nimport store from './state'\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration'\nimport ApplicationUpdater from './state/application/updater'\nimport ListsUpdater from './state/lists/updater'\nimport MulticallUpdater from './state/multicall/updater'\nimport TransactionUpdater from './state/transactions/updater'\nimport UserUpdater from './state/user/updater'\nimport ThemeProvider, { FixedGlobalStyle, ThemedGlobalStyle } from './theme'\nimport getLibrary from './utils/getLibrary'\n\nconst Web3ProviderNetwork = createWeb3ReactRoot(NetworkContextName)\n\nif (!!window.ethereum) {\n  window.ethereum.autoRefreshOnNetworkChange = false\n}\n\nconst GOOGLE_ANALYTICS_ID: string | undefined = process.env.REACT_APP_GOOGLE_ANALYTICS_ID\nif (typeof GOOGLE_ANALYTICS_ID === 'string') {\n  ReactGA.initialize(GOOGLE_ANALYTICS_ID, {\n    gaOptions: {\n      storage: 'none',\n      storeGac: false\n    }\n  })\n  ReactGA.set({\n    anonymizeIp: true,\n    customBrowserType: !isMobile ? 'desktop' : 'web3' in window || 'ethereum' in window ? 'mobileWeb3' : 'mobileRegular'\n  })\n} else {\n  ReactGA.initialize('test', { testMode: true, debug: true })\n}\n\nwindow.addEventListener('error', error => {\n  ReactGA.exception({\n    description: `${error.message} @ ${error.filename}:${error.lineno}:${error.colno}`,\n    fatal: true\n  })\n})\n\nfunction Updaters() {\n  return (\n    <>\n      <ListsUpdater />\n      <UserUpdater />\n      <ApplicationUpdater />\n      <TransactionUpdater />\n      <MulticallUpdater />\n    </>\n  )\n}\n\nReactDOM.render(\n  <StrictMode>\n    <FixedGlobalStyle />\n    <Web3ReactProvider getLibrary={getLibrary}>\n      <Web3ProviderNetwork getLibrary={getLibrary}>\n        <Blocklist>\n          <Provider store={store}>\n            <Updaters />\n            <ThemeProvider>\n              <ThemedGlobalStyle />\n              <HashRouter>\n                <App />\n              </HashRouter>\n            </ThemeProvider>\n          </Provider>\n        </Blocklist>\n      </Web3ProviderNetwork>\n    </Web3ReactProvider>\n  </StrictMode>,\n  document.getElementById('root')\n)\n\nserviceWorkerRegistration.unregister()\n"]},"metadata":{},"sourceType":"module"}