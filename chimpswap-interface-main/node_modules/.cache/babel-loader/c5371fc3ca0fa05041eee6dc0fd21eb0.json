{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ulyss\\\\chimpswap\\\\chimpswap-interface-main\\\\src\\\\components\\\\Toggle\\\\ListToggle.tsx\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { TYPE } from '../../theme';\nconst Wrapper = styled.button`\n  border-radius: 20px;\n  border: none;\n  background: ${({\n  theme\n}) => theme.bg1};\n  display: flex;\n  width: fit-content;\n  cursor: pointer;\n  outline: none;\n  padding: 0.4rem 0.4rem;\n  align-items: center;\n`;\nconst ToggleElement = styled.span`\n  border-radius: 50%;\n  height: 24px;\n  width: 24px;\n  background-color: ${({\n  isActive,\n  bgColor,\n  theme\n}) => isActive ? bgColor : theme.bg4};\n  :hover {\n    opacity: 0.8;\n  }\n`;\nconst StatusText = styled(TYPE.main)`\n  margin: 0 10px;\n  width: 24px;\n  color: ${({\n  theme,\n  isActive\n}) => isActive ? theme.text1 : theme.text3};\n`;\nexport default function ListToggle({\n  id,\n  isActive,\n  bgColor,\n  toggle\n}) {\n  return /*#__PURE__*/React.createElement(Wrapper, {\n    id: id,\n    isActive: isActive,\n    onClick: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, isActive && /*#__PURE__*/React.createElement(StatusText, {\n    fontWeight: \"600\",\n    margin: \"0 6px\",\n    isActive: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, \"ON\"), /*#__PURE__*/React.createElement(ToggleElement, {\n    isActive: isActive,\n    bgColor: bgColor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }), !isActive && /*#__PURE__*/React.createElement(StatusText, {\n    fontWeight: \"600\",\n    margin: \"0 6px\",\n    isActive: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, \"OFF\"));\n}","map":{"version":3,"sources":["C:/Users/Ulyss/chimpswap/chimpswap-interface-main/src/components/Toggle/ListToggle.tsx"],"names":["React","styled","TYPE","Wrapper","button","theme","bg1","ToggleElement","span","isActive","bgColor","bg4","StatusText","main","text1","text3","ListToggle","id","toggle"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,IAAT,QAAqB,aAArB;AAEA,MAAMC,OAAO,GAAGF,MAAM,CAACG,MAAwD;;;gBAG/D,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,GAAI;;;;;;;CAHzC;AAYA,MAAMC,aAAa,GAAGN,MAAM,CAACO,IAA+C;;;;sBAItD,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,OAAZ;AAAqBL,EAAAA;AAArB,CAAD,KAAmCI,QAAQ,GAAGC,OAAH,GAAaL,KAAK,CAACM,GAAK;;;;CAJzF;AAUA,MAAMC,UAAU,GAAGX,MAAM,CAACC,IAAI,CAACW,IAAN,CAAoC;;;WAGlD,CAAC;AAAER,EAAAA,KAAF;AAASI,EAAAA;AAAT,CAAD,KAA0BA,QAAQ,GAAGJ,KAAK,CAACS,KAAT,GAAiBT,KAAK,CAACU,KAAO;CAH3E;AAaA,eAAe,SAASC,UAAT,CAAoB;AAAEC,EAAAA,EAAF;AAAMR,EAAAA,QAAN;AAAgBC,EAAAA,OAAhB;AAAyBQ,EAAAA;AAAzB,CAApB,EAAoE;AACjF,sBACE,oBAAC,OAAD;AAAS,IAAA,EAAE,EAAED,EAAb;AAAiB,IAAA,QAAQ,EAAER,QAA3B;AAAqC,IAAA,OAAO,EAAES,MAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGT,QAAQ,iBACP,oBAAC,UAAD;AAAY,IAAA,UAAU,EAAC,KAAvB;AAA6B,IAAA,MAAM,EAAC,OAApC;AAA4C,IAAA,QAAQ,EAAE,IAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ,eAME,oBAAC,aAAD;AAAe,IAAA,QAAQ,EAAEA,QAAzB;AAAmC,IAAA,OAAO,EAAEC,OAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAOG,CAACD,QAAD,iBACC,oBAAC,UAAD;AAAY,IAAA,UAAU,EAAC,KAAvB;AAA6B,IAAA,MAAM,EAAC,OAApC;AAA4C,IAAA,QAAQ,EAAE,KAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WARJ,CADF;AAeD","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { TYPE } from '../../theme'\n\nconst Wrapper = styled.button<{ isActive?: boolean; activeElement?: boolean }>`\n  border-radius: 20px;\n  border: none;\n  background: ${({ theme }) => theme.bg1};\n  display: flex;\n  width: fit-content;\n  cursor: pointer;\n  outline: none;\n  padding: 0.4rem 0.4rem;\n  align-items: center;\n`\n\nconst ToggleElement = styled.span<{ isActive?: boolean; bgColor?: string }>`\n  border-radius: 50%;\n  height: 24px;\n  width: 24px;\n  background-color: ${({ isActive, bgColor, theme }) => (isActive ? bgColor : theme.bg4)};\n  :hover {\n    opacity: 0.8;\n  }\n`\n\nconst StatusText = styled(TYPE.main)<{ isActive?: boolean }>`\n  margin: 0 10px;\n  width: 24px;\n  color: ${({ theme, isActive }) => (isActive ? theme.text1 : theme.text3)};\n`\n\nexport interface ToggleProps {\n  id?: string\n  isActive: boolean\n  bgColor: string\n  toggle: () => void\n}\n\nexport default function ListToggle({ id, isActive, bgColor, toggle }: ToggleProps) {\n  return (\n    <Wrapper id={id} isActive={isActive} onClick={toggle}>\n      {isActive && (\n        <StatusText fontWeight=\"600\" margin=\"0 6px\" isActive={true}>\n          ON\n        </StatusText>\n      )}\n      <ToggleElement isActive={isActive} bgColor={bgColor} />\n      {!isActive && (\n        <StatusText fontWeight=\"600\" margin=\"0 6px\" isActive={false}>\n          OFF\n        </StatusText>\n      )}\n    </Wrapper>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}