{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ulyss\\\\chimpswap\\\\uniswap-interface-main\\\\src\\\\pages\\\\MigrateV1\\\\MigrateV1Exchange.tsx\";\nimport { AddressZero } from '@ethersproject/constants';\nimport { Currency, CurrencyAmount, Fraction, JSBI, Percent, Token, TokenAmount, WETH } from '@uniswap/sdk';\nimport React, { useCallback, useMemo, useState } from 'react';\nimport ReactGA from 'react-ga';\nimport { Redirect } from 'react-router';\nimport { Text } from 'rebass';\nimport { ButtonConfirmed } from '../../components/Button';\nimport { LightCard, PinkCard, YellowCard } from '../../components/Card';\nimport { AutoColumn } from '../../components/Column';\nimport CurrencyLogo from '../../components/CurrencyLogo';\nimport FormattedCurrencyAmount from '../../components/FormattedCurrencyAmount';\nimport QuestionHelper from '../../components/QuestionHelper';\nimport { AutoRow, RowBetween, RowFixed } from '../../components/Row';\nimport { Dots } from '../../components/swap/styleds';\nimport { DEFAULT_DEADLINE_FROM_NOW, INITIAL_ALLOWED_SLIPPAGE } from '../../constants';\nimport { MIGRATOR_ADDRESS } from '../../constants/abis/migrator';\nimport { PairState, usePair } from '../../data/Reserves';\nimport { useTotalSupply } from '../../data/TotalSupply';\nimport { useActiveWeb3React } from '../../hooks';\nimport { useToken } from '../../hooks/Tokens';\nimport { ApprovalState, useApproveCallback } from '../../hooks/useApproveCallback';\nimport { useV1ExchangeContract, useV2MigratorContract } from '../../hooks/useContract';\nimport { NEVER_RELOAD, useSingleCallResult } from '../../state/multicall/hooks';\nimport { useIsTransactionPending, useTransactionAdder } from '../../state/transactions/hooks';\nimport { useETHBalances, useTokenBalance } from '../../state/wallet/hooks';\nimport { BackArrow, ExternalLink, TYPE } from '../../theme';\nimport { getEtherscanLink, isAddress } from '../../utils';\nimport { BodyWrapper } from '../AppBody';\nimport { EmptyState } from './EmptyState';\nconst WEI_DENOM = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(18));\nconst ZERO = JSBI.BigInt(0);\nconst ONE = JSBI.BigInt(1);\nconst ZERO_FRACTION = new Fraction(ZERO, ONE);\nconst ALLOWED_OUTPUT_MIN_PERCENT = new Percent(JSBI.BigInt(10000 - INITIAL_ALLOWED_SLIPPAGE), JSBI.BigInt(10000));\nexport function V1LiquidityInfo({\n  token,\n  liquidityTokenAmount,\n  tokenWorth,\n  ethWorth\n}) {\n  const {\n    chainId\n  } = useActiveWeb3React();\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AutoRow, {\n    style: {\n      justifyContent: 'flex-start',\n      width: 'fit-content'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CurrencyLogo, {\n    size: \"24px\",\n    currency: token,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginLeft: '.75rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.mediumHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormattedCurrencyAmount, {\n    currencyAmount: liquidityTokenAmount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 14\n    }\n  }), ' ', chainId && token.equals(WETH[chainId]) ? 'WETH' : token.symbol, \"/ETH\"))), /*#__PURE__*/React.createElement(RowBetween, {\n    my: \"1rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    fontSize: 16,\n    fontWeight: 500,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, \"Pooled \", chainId && token.equals(WETH[chainId]) ? 'WETH' : token.symbol, \":\"), /*#__PURE__*/React.createElement(RowFixed, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    fontSize: 16,\n    fontWeight: 500,\n    marginLeft: '6px',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, tokenWorth.toSignificant(4)), /*#__PURE__*/React.createElement(CurrencyLogo, {\n    size: \"20px\",\n    style: {\n      marginLeft: '8px'\n    },\n    currency: token,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(RowBetween, {\n    mb: \"1rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    fontSize: 16,\n    fontWeight: 500,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, \"Pooled ETH:\"), /*#__PURE__*/React.createElement(RowFixed, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    fontSize: 16,\n    fontWeight: 500,\n    marginLeft: '6px',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormattedCurrencyAmount, {\n    currencyAmount: ethWorth,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(CurrencyLogo, {\n    size: \"20px\",\n    style: {\n      marginLeft: '8px'\n    },\n    currency: Currency.ETHER,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }))));\n}\n\nfunction V1PairMigration({\n  liquidityTokenAmount,\n  token\n}) {\n  var _useETHBalances, _v1SpotPrice$invert, _v2SpotPrice$invert, _v1SpotPrice$invert2;\n\n  const {\n    account,\n    chainId\n  } = useActiveWeb3React();\n  const totalSupply = useTotalSupply(liquidityTokenAmount.token);\n  const exchangeETHBalance = (_useETHBalances = useETHBalances([liquidityTokenAmount.token.address])) === null || _useETHBalances === void 0 ? void 0 : _useETHBalances[liquidityTokenAmount.token.address];\n  const exchangeTokenBalance = useTokenBalance(liquidityTokenAmount.token.address, token);\n  const [v2PairState, v2Pair] = usePair(chainId ? WETH[chainId] : undefined, token);\n  const isFirstLiquidityProvider = v2PairState === PairState.NOT_EXISTS;\n  const v2SpotPrice = chainId && v2Pair ? v2Pair.reserveOf(token).divide(v2Pair.reserveOf(WETH[chainId])) : undefined;\n  const [confirmingMigration, setConfirmingMigration] = useState(false);\n  const [pendingMigrationHash, setPendingMigrationHash] = useState(null);\n  const shareFraction = totalSupply ? new Percent(liquidityTokenAmount.raw, totalSupply.raw) : ZERO_FRACTION;\n  const ethWorth = exchangeETHBalance ? CurrencyAmount.ether(exchangeETHBalance.multiply(shareFraction).multiply(WEI_DENOM).quotient) : CurrencyAmount.ether(ZERO);\n  const tokenWorth = exchangeTokenBalance ? new TokenAmount(token, shareFraction.multiply(exchangeTokenBalance.raw).quotient) : new TokenAmount(token, ZERO);\n  const [approval, approve] = useApproveCallback(liquidityTokenAmount, MIGRATOR_ADDRESS);\n  const v1SpotPrice = exchangeTokenBalance && exchangeETHBalance ? exchangeTokenBalance.divide(new Fraction(exchangeETHBalance.raw, WEI_DENOM)) : null;\n  const priceDifferenceFraction = v1SpotPrice && v2SpotPrice ? v1SpotPrice.divide(v2SpotPrice).multiply('100').subtract('100') : undefined;\n  const priceDifferenceAbs = (priceDifferenceFraction === null || priceDifferenceFraction === void 0 ? void 0 : priceDifferenceFraction.lessThan(ZERO)) ? priceDifferenceFraction === null || priceDifferenceFraction === void 0 ? void 0 : priceDifferenceFraction.multiply('-1') : priceDifferenceFraction;\n  const minAmountETH = v2SpotPrice && tokenWorth ? tokenWorth.divide(v2SpotPrice).multiply(WEI_DENOM).multiply(ALLOWED_OUTPUT_MIN_PERCENT).quotient : ethWorth === null || ethWorth === void 0 ? void 0 : ethWorth.numerator;\n  const minAmountToken = v2SpotPrice && ethWorth ? ethWorth.multiply(v2SpotPrice).multiply(JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(token.decimals))).multiply(ALLOWED_OUTPUT_MIN_PERCENT).quotient : tokenWorth === null || tokenWorth === void 0 ? void 0 : tokenWorth.numerator;\n  const addTransaction = useTransactionAdder();\n  const isMigrationPending = useIsTransactionPending(pendingMigrationHash !== null && pendingMigrationHash !== void 0 ? pendingMigrationHash : undefined);\n  const migrator = useV2MigratorContract();\n  const migrate = useCallback(() => {\n    if (!minAmountToken || !minAmountETH || !migrator) return;\n    setConfirmingMigration(true);\n    migrator.migrate(token.address, minAmountToken.toString(), minAmountETH.toString(), account, Math.floor(new Date().getTime() / 1000) + DEFAULT_DEADLINE_FROM_NOW).then(response => {\n      ReactGA.event({\n        category: 'Migrate',\n        action: 'V1->V2',\n        label: token === null || token === void 0 ? void 0 : token.symbol\n      });\n      addTransaction(response, {\n        summary: `Migrate ${token.symbol} liquidity to V2`\n      });\n      setPendingMigrationHash(response.hash);\n    }).catch(() => {\n      setConfirmingMigration(false);\n    });\n  }, [minAmountToken, minAmountETH, migrator, token, account, addTransaction]);\n  const noLiquidityTokens = !!liquidityTokenAmount && liquidityTokenAmount.equalTo(ZERO);\n  const largePriceDifference = !!priceDifferenceAbs && !priceDifferenceAbs.lessThan(JSBI.BigInt(5));\n  const isSuccessfullyMigrated = !!pendingMigrationHash && noLiquidityTokens;\n  return /*#__PURE__*/React.createElement(AutoColumn, {\n    gap: \"20px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.body, {\n    my: 9,\n    style: {\n      fontWeight: 400\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }\n  }, \"This tool will safely migrate your V1 liquidity to V2 with minimal price risk. The process is completely trustless thanks to the\", ' ', chainId && /*#__PURE__*/React.createElement(ExternalLink, {\n    href: getEtherscanLink(chainId, MIGRATOR_ADDRESS, 'address'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.blue, {\n    display: \"inline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }\n  }, \"Uniswap migration contract\\u2197\")), \".\"), !isFirstLiquidityProvider && largePriceDifference ? /*#__PURE__*/React.createElement(YellowCard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.body, {\n    style: {\n      marginBottom: 8,\n      fontWeight: 400\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 11\n    }\n  }, \"It\", \"'\", \"s best to deposit liquidity into Uniswap V2 at a price you believe is correct. If the V2 price seems incorrect, you can either make a swap to move the price or wait for someone else to do so.\"), /*#__PURE__*/React.createElement(AutoColumn, {\n    gap: \"8px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(RowBetween, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 15\n    }\n  }, \"V1 Price:\"), /*#__PURE__*/React.createElement(TYPE.black, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 15\n    }\n  }, v1SpotPrice === null || v1SpotPrice === void 0 ? void 0 : v1SpotPrice.toSignificant(6), \" \", token.symbol, \"/ETH\")), /*#__PURE__*/React.createElement(RowBetween, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TYPE.black, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 15\n    }\n  }, v1SpotPrice === null || v1SpotPrice === void 0 ? void 0 : (_v1SpotPrice$invert = v1SpotPrice.invert()) === null || _v1SpotPrice$invert === void 0 ? void 0 : _v1SpotPrice$invert.toSignificant(6), \" ETH/\", token.symbol)), /*#__PURE__*/React.createElement(RowBetween, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 15\n    }\n  }, \"V2 Price:\"), /*#__PURE__*/React.createElement(TYPE.black, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 15\n    }\n  }, v2SpotPrice === null || v2SpotPrice === void 0 ? void 0 : v2SpotPrice.toSignificant(6), \" \", token.symbol, \"/ETH\")), /*#__PURE__*/React.createElement(RowBetween, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TYPE.black, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 15\n    }\n  }, v2SpotPrice === null || v2SpotPrice === void 0 ? void 0 : (_v2SpotPrice$invert = v2SpotPrice.invert()) === null || _v2SpotPrice$invert === void 0 ? void 0 : _v2SpotPrice$invert.toSignificant(6), \" ETH/\", token.symbol)), /*#__PURE__*/React.createElement(RowBetween, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.body, {\n    color: \"inherit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 15\n    }\n  }, \"Price Difference:\"), /*#__PURE__*/React.createElement(TYPE.black, {\n    color: \"inherit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 15\n    }\n  }, priceDifferenceAbs === null || priceDifferenceAbs === void 0 ? void 0 : priceDifferenceAbs.toSignificant(4), \"%\")))) : null, isFirstLiquidityProvider && /*#__PURE__*/React.createElement(PinkCard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.body, {\n    style: {\n      marginBottom: 8,\n      fontWeight: 400\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 11\n    }\n  }, \"You are the first liquidity provider for this pair on Uniswap V2. Your liquidity will be migrated at the current V1 price. Your transaction cost also includes the gas to create the pool.\"), /*#__PURE__*/React.createElement(AutoColumn, {\n    gap: \"8px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(RowBetween, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 15\n    }\n  }, \"V1 Price:\"), /*#__PURE__*/React.createElement(TYPE.black, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 15\n    }\n  }, v1SpotPrice === null || v1SpotPrice === void 0 ? void 0 : v1SpotPrice.toSignificant(6), \" \", token.symbol, \"/ETH\")), /*#__PURE__*/React.createElement(RowBetween, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TYPE.black, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 15\n    }\n  }, v1SpotPrice === null || v1SpotPrice === void 0 ? void 0 : (_v1SpotPrice$invert2 = v1SpotPrice.invert()) === null || _v1SpotPrice$invert2 === void 0 ? void 0 : _v1SpotPrice$invert2.toSignificant(6), \" ETH/\", token.symbol)))), /*#__PURE__*/React.createElement(LightCard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(V1LiquidityInfo, {\n    token: token,\n    liquidityTokenAmount: liquidityTokenAmount,\n    tokenWorth: tokenWorth,\n    ethWorth: ethWorth,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      marginTop: '1rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AutoColumn, {\n    gap: \"12px\",\n    style: {\n      flex: '1',\n      marginRight: 12\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ButtonConfirmed, {\n    confirmed: approval === ApprovalState.APPROVED,\n    disabled: approval !== ApprovalState.NOT_APPROVED,\n    onClick: approve,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 13\n    }\n  }, approval === ApprovalState.PENDING ? /*#__PURE__*/React.createElement(Dots, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 17\n    }\n  }, \"Approving\") : approval === ApprovalState.APPROVED ? 'Approved' : 'Approve')), /*#__PURE__*/React.createElement(AutoColumn, {\n    gap: \"12px\",\n    style: {\n      flex: '1'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ButtonConfirmed, {\n    confirmed: isSuccessfullyMigrated,\n    disabled: isSuccessfullyMigrated || noLiquidityTokens || isMigrationPending || approval !== ApprovalState.APPROVED || confirmingMigration,\n    onClick: migrate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 13\n    }\n  }, isSuccessfullyMigrated ? 'Success' : isMigrationPending ? /*#__PURE__*/React.createElement(Dots, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 74\n    }\n  }, \"Migrating\") : 'Migrate')))), /*#__PURE__*/React.createElement(TYPE.darkGray, {\n    style: {\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 7\n    }\n  }, `Your Uniswap V1 ${token.symbol}/ETH liquidity will become Uniswap V2 ${token.symbol}/ETH liquidity.`));\n}\n\nexport default function MigrateV1Exchange({\n  history,\n  match: {\n    params: {\n      address\n    }\n  }\n}) {\n  var _useSingleCallResult, _useSingleCallResult$;\n\n  const validatedAddress = isAddress(address);\n  const {\n    chainId,\n    account\n  } = useActiveWeb3React();\n  const exchangeContract = useV1ExchangeContract(validatedAddress ? validatedAddress : undefined);\n  const tokenAddress = (_useSingleCallResult = useSingleCallResult(exchangeContract, 'tokenAddress', undefined, NEVER_RELOAD)) === null || _useSingleCallResult === void 0 ? void 0 : (_useSingleCallResult$ = _useSingleCallResult.result) === null || _useSingleCallResult$ === void 0 ? void 0 : _useSingleCallResult$[0];\n  const token = useToken(tokenAddress);\n  const liquidityToken = useMemo(() => validatedAddress && chainId && token ? new Token(chainId, validatedAddress, 18, `UNI-V1-${token.symbol}`, 'Uniswap V1') : undefined, [chainId, validatedAddress, token]);\n  const userLiquidityBalance = useTokenBalance(account !== null && account !== void 0 ? account : undefined, liquidityToken); // redirect for invalid url params\n\n  if (!validatedAddress || tokenAddress === AddressZero) {\n    console.error('Invalid address in path', address);\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/migrate/v1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(BodyWrapper, {\n    style: {\n      padding: 24\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(AutoColumn, {\n    gap: \"16px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(AutoRow, {\n    style: {\n      alignItems: 'center',\n      justifyContent: 'space-between'\n    },\n    gap: \"8px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(BackArrow, {\n    to: \"/migrate/v1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TYPE.mediumHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 11\n    }\n  }, \"Migrate V1 Liquidity\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(QuestionHelper, {\n    text: \"Migrate your liquidity tokens from Uniswap V1 to Uniswap V2.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 13\n    }\n  }))), !account ? /*#__PURE__*/React.createElement(TYPE.largeHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 11\n    }\n  }, \"You must connect an account.\") : validatedAddress && chainId && (token === null || token === void 0 ? void 0 : token.equals(WETH[chainId])) ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TYPE.body, {\n    my: 9,\n    style: {\n      fontWeight: 400\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 13\n    }\n  }, \"Because Uniswap V2 uses WETH under the hood, your Uniswap V1 WETH/ETH liquidity cannot be migrated. You may want to remove your liquidity instead.\"), /*#__PURE__*/React.createElement(ButtonConfirmed, {\n    onClick: () => {\n      history.push(`/remove/v1/${validatedAddress}`);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 13\n    }\n  }, \"Remove\")) : userLiquidityBalance && token ? /*#__PURE__*/React.createElement(V1PairMigration, {\n    liquidityTokenAmount: userLiquidityBalance,\n    token: token,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 11\n    }\n  }) : /*#__PURE__*/React.createElement(EmptyState, {\n    message: \"Loading...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 11\n    }\n  })));\n}","map":{"version":3,"sources":["C:/Users/Ulyss/chimpswap/uniswap-interface-main/src/pages/MigrateV1/MigrateV1Exchange.tsx"],"names":["AddressZero","Currency","CurrencyAmount","Fraction","JSBI","Percent","Token","TokenAmount","WETH","React","useCallback","useMemo","useState","ReactGA","Redirect","Text","ButtonConfirmed","LightCard","PinkCard","YellowCard","AutoColumn","CurrencyLogo","FormattedCurrencyAmount","QuestionHelper","AutoRow","RowBetween","RowFixed","Dots","DEFAULT_DEADLINE_FROM_NOW","INITIAL_ALLOWED_SLIPPAGE","MIGRATOR_ADDRESS","PairState","usePair","useTotalSupply","useActiveWeb3React","useToken","ApprovalState","useApproveCallback","useV1ExchangeContract","useV2MigratorContract","NEVER_RELOAD","useSingleCallResult","useIsTransactionPending","useTransactionAdder","useETHBalances","useTokenBalance","BackArrow","ExternalLink","TYPE","getEtherscanLink","isAddress","BodyWrapper","EmptyState","WEI_DENOM","exponentiate","BigInt","ZERO","ONE","ZERO_FRACTION","ALLOWED_OUTPUT_MIN_PERCENT","V1LiquidityInfo","token","liquidityTokenAmount","tokenWorth","ethWorth","chainId","justifyContent","width","marginLeft","equals","symbol","toSignificant","ETHER","V1PairMigration","account","totalSupply","exchangeETHBalance","address","exchangeTokenBalance","v2PairState","v2Pair","undefined","isFirstLiquidityProvider","NOT_EXISTS","v2SpotPrice","reserveOf","divide","confirmingMigration","setConfirmingMigration","pendingMigrationHash","setPendingMigrationHash","shareFraction","raw","ether","multiply","quotient","approval","approve","v1SpotPrice","priceDifferenceFraction","subtract","priceDifferenceAbs","lessThan","minAmountETH","numerator","minAmountToken","decimals","addTransaction","isMigrationPending","migrator","migrate","toString","Math","floor","Date","getTime","then","response","event","category","action","label","summary","hash","catch","noLiquidityTokens","equalTo","largePriceDifference","isSuccessfullyMigrated","fontWeight","marginBottom","invert","display","marginTop","flex","marginRight","APPROVED","NOT_APPROVED","PENDING","textAlign","MigrateV1Exchange","history","match","params","validatedAddress","exchangeContract","tokenAddress","result","liquidityToken","userLiquidityBalance","console","error","padding","alignItems","push"],"mappings":"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","sourcesContent":["import { TransactionResponse } from '@ethersproject/abstract-provider'\nimport { AddressZero } from '@ethersproject/constants'\nimport { Currency, CurrencyAmount, Fraction, JSBI, Percent, Token, TokenAmount, WETH } from '@uniswap/sdk'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport ReactGA from 'react-ga'\nimport { Redirect, RouteComponentProps } from 'react-router'\nimport { Text } from 'rebass'\nimport { ButtonConfirmed } from '../../components/Button'\nimport { LightCard, PinkCard, YellowCard } from '../../components/Card'\nimport { AutoColumn } from '../../components/Column'\nimport CurrencyLogo from '../../components/CurrencyLogo'\nimport FormattedCurrencyAmount from '../../components/FormattedCurrencyAmount'\nimport QuestionHelper from '../../components/QuestionHelper'\nimport { AutoRow, RowBetween, RowFixed } from '../../components/Row'\nimport { Dots } from '../../components/swap/styleds'\nimport { DEFAULT_DEADLINE_FROM_NOW, INITIAL_ALLOWED_SLIPPAGE } from '../../constants'\nimport { MIGRATOR_ADDRESS } from '../../constants/abis/migrator'\nimport { PairState, usePair } from '../../data/Reserves'\nimport { useTotalSupply } from '../../data/TotalSupply'\nimport { useActiveWeb3React } from '../../hooks'\nimport { useToken } from '../../hooks/Tokens'\nimport { ApprovalState, useApproveCallback } from '../../hooks/useApproveCallback'\nimport { useV1ExchangeContract, useV2MigratorContract } from '../../hooks/useContract'\nimport { NEVER_RELOAD, useSingleCallResult } from '../../state/multicall/hooks'\nimport { useIsTransactionPending, useTransactionAdder } from '../../state/transactions/hooks'\nimport { useETHBalances, useTokenBalance } from '../../state/wallet/hooks'\nimport { BackArrow, ExternalLink, TYPE } from '../../theme'\nimport { getEtherscanLink, isAddress } from '../../utils'\nimport { BodyWrapper } from '../AppBody'\nimport { EmptyState } from './EmptyState'\n\nconst WEI_DENOM = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(18))\nconst ZERO = JSBI.BigInt(0)\nconst ONE = JSBI.BigInt(1)\nconst ZERO_FRACTION = new Fraction(ZERO, ONE)\nconst ALLOWED_OUTPUT_MIN_PERCENT = new Percent(JSBI.BigInt(10000 - INITIAL_ALLOWED_SLIPPAGE), JSBI.BigInt(10000))\n\nexport function V1LiquidityInfo({\n  token,\n  liquidityTokenAmount,\n  tokenWorth,\n  ethWorth\n}: {\n  token: Token\n  liquidityTokenAmount: TokenAmount\n  tokenWorth: TokenAmount\n  ethWorth: CurrencyAmount\n}) {\n  const { chainId } = useActiveWeb3React()\n\n  return (\n    <>\n      <AutoRow style={{ justifyContent: 'flex-start', width: 'fit-content' }}>\n        <CurrencyLogo size=\"24px\" currency={token} />\n        <div style={{ marginLeft: '.75rem' }}>\n          <TYPE.mediumHeader>\n            {<FormattedCurrencyAmount currencyAmount={liquidityTokenAmount} />}{' '}\n            {chainId && token.equals(WETH[chainId]) ? 'WETH' : token.symbol}/ETH\n          </TYPE.mediumHeader>\n        </div>\n      </AutoRow>\n\n      <RowBetween my=\"1rem\">\n        <Text fontSize={16} fontWeight={500}>\n          Pooled {chainId && token.equals(WETH[chainId]) ? 'WETH' : token.symbol}:\n        </Text>\n        <RowFixed>\n          <Text fontSize={16} fontWeight={500} marginLeft={'6px'}>\n            {tokenWorth.toSignificant(4)}\n          </Text>\n          <CurrencyLogo size=\"20px\" style={{ marginLeft: '8px' }} currency={token} />\n        </RowFixed>\n      </RowBetween>\n      <RowBetween mb=\"1rem\">\n        <Text fontSize={16} fontWeight={500}>\n          Pooled ETH:\n        </Text>\n        <RowFixed>\n          <Text fontSize={16} fontWeight={500} marginLeft={'6px'}>\n            <FormattedCurrencyAmount currencyAmount={ethWorth} />\n          </Text>\n          <CurrencyLogo size=\"20px\" style={{ marginLeft: '8px' }} currency={Currency.ETHER} />\n        </RowFixed>\n      </RowBetween>\n    </>\n  )\n}\n\nfunction V1PairMigration({ liquidityTokenAmount, token }: { liquidityTokenAmount: TokenAmount; token: Token }) {\n  const { account, chainId } = useActiveWeb3React()\n  const totalSupply = useTotalSupply(liquidityTokenAmount.token)\n  const exchangeETHBalance = useETHBalances([liquidityTokenAmount.token.address])?.[liquidityTokenAmount.token.address]\n  const exchangeTokenBalance = useTokenBalance(liquidityTokenAmount.token.address, token)\n\n  const [v2PairState, v2Pair] = usePair(chainId ? WETH[chainId] : undefined, token)\n  const isFirstLiquidityProvider: boolean = v2PairState === PairState.NOT_EXISTS\n\n  const v2SpotPrice = chainId && v2Pair ? v2Pair.reserveOf(token).divide(v2Pair.reserveOf(WETH[chainId])) : undefined\n\n  const [confirmingMigration, setConfirmingMigration] = useState<boolean>(false)\n  const [pendingMigrationHash, setPendingMigrationHash] = useState<string | null>(null)\n\n  const shareFraction: Fraction = totalSupply ? new Percent(liquidityTokenAmount.raw, totalSupply.raw) : ZERO_FRACTION\n\n  const ethWorth: CurrencyAmount = exchangeETHBalance\n    ? CurrencyAmount.ether(exchangeETHBalance.multiply(shareFraction).multiply(WEI_DENOM).quotient)\n    : CurrencyAmount.ether(ZERO)\n\n  const tokenWorth: TokenAmount = exchangeTokenBalance\n    ? new TokenAmount(token, shareFraction.multiply(exchangeTokenBalance.raw).quotient)\n    : new TokenAmount(token, ZERO)\n\n  const [approval, approve] = useApproveCallback(liquidityTokenAmount, MIGRATOR_ADDRESS)\n\n  const v1SpotPrice =\n    exchangeTokenBalance && exchangeETHBalance\n      ? exchangeTokenBalance.divide(new Fraction(exchangeETHBalance.raw, WEI_DENOM))\n      : null\n\n  const priceDifferenceFraction: Fraction | undefined =\n    v1SpotPrice && v2SpotPrice\n      ? v1SpotPrice\n          .divide(v2SpotPrice)\n          .multiply('100')\n          .subtract('100')\n      : undefined\n\n  const priceDifferenceAbs: Fraction | undefined = priceDifferenceFraction?.lessThan(ZERO)\n    ? priceDifferenceFraction?.multiply('-1')\n    : priceDifferenceFraction\n\n  const minAmountETH: JSBI | undefined =\n    v2SpotPrice && tokenWorth\n      ? tokenWorth\n          .divide(v2SpotPrice)\n          .multiply(WEI_DENOM)\n          .multiply(ALLOWED_OUTPUT_MIN_PERCENT).quotient\n      : ethWorth?.numerator\n\n  const minAmountToken: JSBI | undefined =\n    v2SpotPrice && ethWorth\n      ? ethWorth\n          .multiply(v2SpotPrice)\n          .multiply(JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(token.decimals)))\n          .multiply(ALLOWED_OUTPUT_MIN_PERCENT).quotient\n      : tokenWorth?.numerator\n\n  const addTransaction = useTransactionAdder()\n  const isMigrationPending = useIsTransactionPending(pendingMigrationHash ?? undefined)\n\n  const migrator = useV2MigratorContract()\n  const migrate = useCallback(() => {\n    if (!minAmountToken || !minAmountETH || !migrator) return\n\n    setConfirmingMigration(true)\n    migrator\n      .migrate(\n        token.address,\n        minAmountToken.toString(),\n        minAmountETH.toString(),\n        account,\n        Math.floor(new Date().getTime() / 1000) + DEFAULT_DEADLINE_FROM_NOW\n      )\n      .then((response: TransactionResponse) => {\n        ReactGA.event({\n          category: 'Migrate',\n          action: 'V1->V2',\n          label: token?.symbol\n        })\n\n        addTransaction(response, {\n          summary: `Migrate ${token.symbol} liquidity to V2`\n        })\n        setPendingMigrationHash(response.hash)\n      })\n      .catch(() => {\n        setConfirmingMigration(false)\n      })\n  }, [minAmountToken, minAmountETH, migrator, token, account, addTransaction])\n\n  const noLiquidityTokens = !!liquidityTokenAmount && liquidityTokenAmount.equalTo(ZERO)\n\n  const largePriceDifference = !!priceDifferenceAbs && !priceDifferenceAbs.lessThan(JSBI.BigInt(5))\n\n  const isSuccessfullyMigrated = !!pendingMigrationHash && noLiquidityTokens\n\n  return (\n    <AutoColumn gap=\"20px\">\n      <TYPE.body my={9} style={{ fontWeight: 400 }}>\n        This tool will safely migrate your V1 liquidity to V2 with minimal price risk. The process is completely\n        trustless thanks to the{' '}\n        {chainId && (\n          <ExternalLink href={getEtherscanLink(chainId, MIGRATOR_ADDRESS, 'address')}>\n            <TYPE.blue display=\"inline\">Uniswap migration contract↗</TYPE.blue>\n          </ExternalLink>\n        )}\n        .\n      </TYPE.body>\n\n      {!isFirstLiquidityProvider && largePriceDifference ? (\n        <YellowCard>\n          <TYPE.body style={{ marginBottom: 8, fontWeight: 400 }}>\n            It{\"'\"}s best to deposit liquidity into Uniswap V2 at a price you believe is correct. If the V2 price seems\n            incorrect, you can either make a swap to move the price or wait for someone else to do so.\n          </TYPE.body>\n          <AutoColumn gap=\"8px\">\n            <RowBetween>\n              <TYPE.body>V1 Price:</TYPE.body>\n              <TYPE.black>\n                {v1SpotPrice?.toSignificant(6)} {token.symbol}/ETH\n              </TYPE.black>\n            </RowBetween>\n            <RowBetween>\n              <div />\n              <TYPE.black>\n                {v1SpotPrice?.invert()?.toSignificant(6)} ETH/{token.symbol}\n              </TYPE.black>\n            </RowBetween>\n\n            <RowBetween>\n              <TYPE.body>V2 Price:</TYPE.body>\n              <TYPE.black>\n                {v2SpotPrice?.toSignificant(6)} {token.symbol}/ETH\n              </TYPE.black>\n            </RowBetween>\n            <RowBetween>\n              <div />\n              <TYPE.black>\n                {v2SpotPrice?.invert()?.toSignificant(6)} ETH/{token.symbol}\n              </TYPE.black>\n            </RowBetween>\n\n            <RowBetween>\n              <TYPE.body color=\"inherit\">Price Difference:</TYPE.body>\n              <TYPE.black color=\"inherit\">{priceDifferenceAbs?.toSignificant(4)}%</TYPE.black>\n            </RowBetween>\n          </AutoColumn>\n        </YellowCard>\n      ) : null}\n\n      {isFirstLiquidityProvider && (\n        <PinkCard>\n          <TYPE.body style={{ marginBottom: 8, fontWeight: 400 }}>\n            You are the first liquidity provider for this pair on Uniswap V2. Your liquidity will be migrated at the\n            current V1 price. Your transaction cost also includes the gas to create the pool.\n          </TYPE.body>\n\n          <AutoColumn gap=\"8px\">\n            <RowBetween>\n              <TYPE.body>V1 Price:</TYPE.body>\n              <TYPE.black>\n                {v1SpotPrice?.toSignificant(6)} {token.symbol}/ETH\n              </TYPE.black>\n            </RowBetween>\n            <RowBetween>\n              <div />\n              <TYPE.black>\n                {v1SpotPrice?.invert()?.toSignificant(6)} ETH/{token.symbol}\n              </TYPE.black>\n            </RowBetween>\n          </AutoColumn>\n        </PinkCard>\n      )}\n\n      <LightCard>\n        <V1LiquidityInfo\n          token={token}\n          liquidityTokenAmount={liquidityTokenAmount}\n          tokenWorth={tokenWorth}\n          ethWorth={ethWorth}\n        />\n\n        <div style={{ display: 'flex', marginTop: '1rem' }}>\n          <AutoColumn gap=\"12px\" style={{ flex: '1', marginRight: 12 }}>\n            <ButtonConfirmed\n              confirmed={approval === ApprovalState.APPROVED}\n              disabled={approval !== ApprovalState.NOT_APPROVED}\n              onClick={approve}\n            >\n              {approval === ApprovalState.PENDING ? (\n                <Dots>Approving</Dots>\n              ) : approval === ApprovalState.APPROVED ? (\n                'Approved'\n              ) : (\n                'Approve'\n              )}\n            </ButtonConfirmed>\n          </AutoColumn>\n          <AutoColumn gap=\"12px\" style={{ flex: '1' }}>\n            <ButtonConfirmed\n              confirmed={isSuccessfullyMigrated}\n              disabled={\n                isSuccessfullyMigrated ||\n                noLiquidityTokens ||\n                isMigrationPending ||\n                approval !== ApprovalState.APPROVED ||\n                confirmingMigration\n              }\n              onClick={migrate}\n            >\n              {isSuccessfullyMigrated ? 'Success' : isMigrationPending ? <Dots>Migrating</Dots> : 'Migrate'}\n            </ButtonConfirmed>\n          </AutoColumn>\n        </div>\n      </LightCard>\n      <TYPE.darkGray style={{ textAlign: 'center' }}>\n        {`Your Uniswap V1 ${token.symbol}/ETH liquidity will become Uniswap V2 ${token.symbol}/ETH liquidity.`}\n      </TYPE.darkGray>\n    </AutoColumn>\n  )\n}\n\nexport default function MigrateV1Exchange({\n  history,\n  match: {\n    params: { address }\n  }\n}: RouteComponentProps<{ address: string }>) {\n  const validatedAddress = isAddress(address)\n  const { chainId, account } = useActiveWeb3React()\n\n  const exchangeContract = useV1ExchangeContract(validatedAddress ? validatedAddress : undefined)\n  const tokenAddress = useSingleCallResult(exchangeContract, 'tokenAddress', undefined, NEVER_RELOAD)?.result?.[0]\n\n  const token = useToken(tokenAddress)\n\n  const liquidityToken: Token | undefined = useMemo(\n    () =>\n      validatedAddress && chainId && token\n        ? new Token(chainId, validatedAddress, 18, `UNI-V1-${token.symbol}`, 'Uniswap V1')\n        : undefined,\n    [chainId, validatedAddress, token]\n  )\n  const userLiquidityBalance = useTokenBalance(account ?? undefined, liquidityToken)\n\n  // redirect for invalid url params\n  if (!validatedAddress || tokenAddress === AddressZero) {\n    console.error('Invalid address in path', address)\n    return <Redirect to=\"/migrate/v1\" />\n  }\n\n  return (\n    <BodyWrapper style={{ padding: 24 }}>\n      <AutoColumn gap=\"16px\">\n        <AutoRow style={{ alignItems: 'center', justifyContent: 'space-between' }} gap=\"8px\">\n          <BackArrow to=\"/migrate/v1\" />\n          <TYPE.mediumHeader>Migrate V1 Liquidity</TYPE.mediumHeader>\n          <div>\n            <QuestionHelper text=\"Migrate your liquidity tokens from Uniswap V1 to Uniswap V2.\" />\n          </div>\n        </AutoRow>\n\n        {!account ? (\n          <TYPE.largeHeader>You must connect an account.</TYPE.largeHeader>\n        ) : validatedAddress && chainId && token?.equals(WETH[chainId]) ? (\n          <>\n            <TYPE.body my={9} style={{ fontWeight: 400 }}>\n              Because Uniswap V2 uses WETH under the hood, your Uniswap V1 WETH/ETH liquidity cannot be migrated. You\n              may want to remove your liquidity instead.\n            </TYPE.body>\n\n            <ButtonConfirmed\n              onClick={() => {\n                history.push(`/remove/v1/${validatedAddress}`)\n              }}\n            >\n              Remove\n            </ButtonConfirmed>\n          </>\n        ) : userLiquidityBalance && token ? (\n          <V1PairMigration liquidityTokenAmount={userLiquidityBalance} token={token} />\n        ) : (\n          <EmptyState message=\"Loading...\" />\n        )}\n      </AutoColumn>\n    </BodyWrapper>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}