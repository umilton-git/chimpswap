{"ast":null,"code":"import { JSBI } from '@uniswap/sdk';\nimport { useMemo } from 'react';\nimport { NEVER_RELOAD, useSingleCallResult } from '../state/multicall/hooks';\nimport { useActiveWeb3React } from './index';\nimport { useSocksController } from './useContract';\nexport default function useSocksBalance() {\n  const {\n    account\n  } = useActiveWeb3React();\n  const socksContract = useSocksController();\n  const {\n    result\n  } = useSingleCallResult(socksContract, 'balanceOf', [account !== null && account !== void 0 ? account : undefined], NEVER_RELOAD);\n  const data = result === null || result === void 0 ? void 0 : result[0];\n  return data ? JSBI.BigInt(data.toString()) : undefined;\n}\nexport function useHasSocks() {\n  const balance = useSocksBalance();\n  return useMemo(() => balance && JSBI.greaterThan(balance, JSBI.BigInt(0)), [balance]);\n}","map":{"version":3,"sources":["C:/Users/Ulyss/chimpswap/chimpswap-interface-main/src/hooks/useSocksBalance.ts"],"names":["JSBI","useMemo","NEVER_RELOAD","useSingleCallResult","useActiveWeb3React","useSocksController","useSocksBalance","account","socksContract","result","undefined","data","BigInt","toString","useHasSocks","balance","greaterThan"],"mappings":"AAAA,SAASA,IAAT,QAAqB,cAArB;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,SAASC,YAAT,EAAuBC,mBAAvB,QAAkD,0BAAlD;AACA,SAASC,kBAAT,QAAmC,SAAnC;AACA,SAASC,kBAAT,QAAmC,eAAnC;AAEA,eAAe,SAASC,eAAT,GAA6C;AAC1D,QAAM;AAAEC,IAAAA;AAAF,MAAcH,kBAAkB,EAAtC;AACA,QAAMI,aAAa,GAAGH,kBAAkB,EAAxC;AAEA,QAAM;AAAEI,IAAAA;AAAF,MAAaN,mBAAmB,CAACK,aAAD,EAAgB,WAAhB,EAA6B,CAACD,OAAD,aAACA,OAAD,cAACA,OAAD,GAAYG,SAAZ,CAA7B,EAAqDR,YAArD,CAAtC;AACA,QAAMS,IAAI,GAAGF,MAAH,aAAGA,MAAH,uBAAGA,MAAM,CAAG,CAAH,CAAnB;AACA,SAAOE,IAAI,GAAGX,IAAI,CAACY,MAAL,CAAYD,IAAI,CAACE,QAAL,EAAZ,CAAH,GAAkCH,SAA7C;AACD;AAED,OAAO,SAASI,WAAT,GAA4C;AACjD,QAAMC,OAAO,GAAGT,eAAe,EAA/B;AACA,SAAOL,OAAO,CAAC,MAAMc,OAAO,IAAIf,IAAI,CAACgB,WAAL,CAAiBD,OAAjB,EAA0Bf,IAAI,CAACY,MAAL,CAAY,CAAZ,CAA1B,CAAlB,EAA6D,CAACG,OAAD,CAA7D,CAAd;AACD","sourcesContent":["import { JSBI } from '@uniswap/sdk'\nimport { useMemo } from 'react'\nimport { NEVER_RELOAD, useSingleCallResult } from '../state/multicall/hooks'\nimport { useActiveWeb3React } from './index'\nimport { useSocksController } from './useContract'\n\nexport default function useSocksBalance(): JSBI | undefined {\n  const { account } = useActiveWeb3React()\n  const socksContract = useSocksController()\n\n  const { result } = useSingleCallResult(socksContract, 'balanceOf', [account ?? undefined], NEVER_RELOAD)\n  const data = result?.[0]\n  return data ? JSBI.BigInt(data.toString()) : undefined\n}\n\nexport function useHasSocks(): boolean | undefined {\n  const balance = useSocksBalance()\n  return useMemo(() => balance && JSBI.greaterThan(balance, JSBI.BigInt(0)), [balance])\n}\n"]},"metadata":{},"sourceType":"module"}