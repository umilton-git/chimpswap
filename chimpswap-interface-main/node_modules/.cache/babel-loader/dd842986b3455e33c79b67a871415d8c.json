{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ulyss\\\\chimpswap\\\\chimpswap-interface-main\\\\src\\\\components\\\\Popups\\\\ClaimPopup.tsx\";\nimport React, { useEffect } from 'react';\nimport { X } from 'react-feather';\nimport styled, { keyframes } from 'styled-components';\nimport tokenLogo from '../../assets/images/token-logo.png';\nimport { ButtonPrimary } from '../../components/Button';\nimport { useActiveWeb3React } from '../../hooks';\nimport { ApplicationModal } from '../../state/application/actions';\nimport { useModalOpen, useShowClaimPopup, useToggleSelfClaimModal, useToggleShowClaimPopup } from '../../state/application/hooks';\nimport { useUserHasAvailableClaim, useUserUnclaimedAmount } from '../../state/claim/hooks';\nimport { TYPE } from '../../theme';\nimport { AutoColumn } from '../Column';\nimport { CardBGImage, CardNoise } from '../earn/styled';\nconst StyledClaimPopup = styled(AutoColumn)`\n  background: radial-gradient(76.02% 75.41% at 1.84% 0%, #ff007a 0%, #021d43 100%);\n  border-radius: 20px;\n  padding: 1.5rem;\n  overflow: hidden;\n  position: relative;\n  max-width: 360px;\n  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);\n`;\nconst StyledClose = styled(X)`\n  position: absolute;\n  right: 10px;\n  top: 10px;\n\n  :hover {\n    cursor: pointer;\n  }\n`;\nconst rotate = keyframes`\n  0% {\n    transform: perspective(1000px) rotateY(0deg);\n  }\n\n  100% {\n    transform: perspective(1000px) rotateY(360deg);\n  }\n`;\nconst UniToken = styled.img`\n  animation: ${rotate} 5s cubic-bezier(0.83, 0, 0.17, 1) infinite;\n`;\nexport default function ClaimPopup() {\n  var _groupSeparator;\n\n  const {\n    account\n  } = useActiveWeb3React(); // dont store these in persisted state yet\n\n  const showClaimPopup = useShowClaimPopup();\n  const toggleShowClaimPopup = useToggleShowClaimPopup(); // toggle for showing this modal\n\n  const showClaimModal = useModalOpen(ApplicationModal.SELF_CLAIM);\n  const toggleSelfClaimModal = useToggleSelfClaimModal(); // const userHasAvailableclaim = useUserHasAvailableClaim()\n\n  const userHasAvailableclaim = useUserHasAvailableClaim(account);\n  const unclaimedAmount = useUserUnclaimedAmount(account); // listen for available claim and show popup if needed\n\n  useEffect(() => {\n    if (userHasAvailableclaim) {\n      toggleShowClaimPopup();\n    } // the toggleShowClaimPopup function changes every time the popup changes, so this will cause an infinite loop.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [userHasAvailableclaim]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, showClaimPopup && !showClaimModal && /*#__PURE__*/React.createElement(StyledClaimPopup, {\n    gap: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardBGImage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(CardNoise, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(StyledClose, {\n    stroke: \"white\",\n    onClick: toggleShowClaimPopup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(AutoColumn, {\n    style: {\n      padding: '2rem 0',\n      zIndex: 10\n    },\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(UniToken, {\n    width: \"48px\",\n    src: tokenLogo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }), ' ', /*#__PURE__*/React.createElement(TYPE.white, {\n    style: {\n      marginTop: '1rem'\n    },\n    fontSize: 36,\n    fontWeight: 600,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, unclaimedAmount === null || unclaimedAmount === void 0 ? void 0 : unclaimedAmount.toFixed(0, (_groupSeparator = {\n    groupSeparator: ','\n  }) !== null && _groupSeparator !== void 0 ? _groupSeparator : '-'), \" UNI\"), /*#__PURE__*/React.createElement(TYPE.white, {\n    style: {\n      paddingTop: '1.25rem',\n      textAlign: 'center'\n    },\n    fontWeight: 600,\n    color: \"white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    role: \"img\",\n    \"aria-label\": \"party\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 15\n    }\n  }, \"\\uD83C\\uDF89\"), ' ', \"UNI has arrived\", ' ', /*#__PURE__*/React.createElement(\"span\", {\n    role: \"img\",\n    \"aria-label\": \"party\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 15\n    }\n  }, \"\\uD83C\\uDF89\")), /*#__PURE__*/React.createElement(TYPE.subHeader, {\n    style: {\n      paddingTop: '0.5rem',\n      textAlign: 'center'\n    },\n    color: \"white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, `Thanks for being part of the Uniswap community <3`)), /*#__PURE__*/React.createElement(AutoColumn, {\n    style: {\n      zIndex: 10\n    },\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ButtonPrimary, {\n    padding: \"8px\",\n    borderRadius: \"8px\",\n    width: 'fit-content',\n    onClick: toggleSelfClaimModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, \"Claim your UNI tokens\"))));\n}","map":{"version":3,"sources":["C:/Users/Ulyss/chimpswap/chimpswap-interface-main/src/components/Popups/ClaimPopup.tsx"],"names":["React","useEffect","X","styled","keyframes","tokenLogo","ButtonPrimary","useActiveWeb3React","ApplicationModal","useModalOpen","useShowClaimPopup","useToggleSelfClaimModal","useToggleShowClaimPopup","useUserHasAvailableClaim","useUserUnclaimedAmount","TYPE","AutoColumn","CardBGImage","CardNoise","StyledClaimPopup","StyledClose","rotate","UniToken","img","ClaimPopup","account","showClaimPopup","toggleShowClaimPopup","showClaimModal","SELF_CLAIM","toggleSelfClaimModal","userHasAvailableclaim","unclaimedAmount","padding","zIndex","marginTop","toFixed","groupSeparator","paddingTop","textAlign"],"mappings":"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","sourcesContent":["import { TokenAmount } from '@uniswap/sdk'\nimport React, { useEffect } from 'react'\nimport { X } from 'react-feather'\nimport styled, { keyframes } from 'styled-components'\nimport tokenLogo from '../../assets/images/token-logo.png'\nimport { ButtonPrimary } from '../../components/Button'\nimport { useActiveWeb3React } from '../../hooks'\nimport { ApplicationModal } from '../../state/application/actions'\nimport {\n  useModalOpen,\n  useShowClaimPopup,\n  useToggleSelfClaimModal,\n  useToggleShowClaimPopup\n} from '../../state/application/hooks'\n\nimport { useUserHasAvailableClaim, useUserUnclaimedAmount } from '../../state/claim/hooks'\nimport { TYPE } from '../../theme'\nimport { AutoColumn } from '../Column'\nimport { CardBGImage, CardNoise } from '../earn/styled'\n\nconst StyledClaimPopup = styled(AutoColumn)`\n  background: radial-gradient(76.02% 75.41% at 1.84% 0%, #ff007a 0%, #021d43 100%);\n  border-radius: 20px;\n  padding: 1.5rem;\n  overflow: hidden;\n  position: relative;\n  max-width: 360px;\n  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);\n`\n\nconst StyledClose = styled(X)`\n  position: absolute;\n  right: 10px;\n  top: 10px;\n\n  :hover {\n    cursor: pointer;\n  }\n`\n\nconst rotate = keyframes`\n  0% {\n    transform: perspective(1000px) rotateY(0deg);\n  }\n\n  100% {\n    transform: perspective(1000px) rotateY(360deg);\n  }\n`\n\nconst UniToken = styled.img`\n  animation: ${rotate} 5s cubic-bezier(0.83, 0, 0.17, 1) infinite;\n`\n\nexport default function ClaimPopup() {\n  const { account } = useActiveWeb3React()\n\n  // dont store these in persisted state yet\n  const showClaimPopup: boolean = useShowClaimPopup()\n  const toggleShowClaimPopup = useToggleShowClaimPopup()\n\n  // toggle for showing this modal\n  const showClaimModal = useModalOpen(ApplicationModal.SELF_CLAIM)\n  const toggleSelfClaimModal = useToggleSelfClaimModal()\n\n  // const userHasAvailableclaim = useUserHasAvailableClaim()\n  const userHasAvailableclaim: boolean = useUserHasAvailableClaim(account)\n  const unclaimedAmount: TokenAmount | undefined = useUserUnclaimedAmount(account)\n\n  // listen for available claim and show popup if needed\n  useEffect(() => {\n    if (userHasAvailableclaim) {\n      toggleShowClaimPopup()\n    }\n    // the toggleShowClaimPopup function changes every time the popup changes, so this will cause an infinite loop.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [userHasAvailableclaim])\n\n  return (\n    <>\n      {showClaimPopup && !showClaimModal && (\n        <StyledClaimPopup gap=\"md\">\n          <CardBGImage />\n          <CardNoise />\n          <StyledClose stroke=\"white\" onClick={toggleShowClaimPopup} />\n          <AutoColumn style={{ padding: '2rem 0', zIndex: 10 }} justify=\"center\">\n            <UniToken width=\"48px\" src={tokenLogo} />{' '}\n            <TYPE.white style={{ marginTop: '1rem' }} fontSize={36} fontWeight={600}>\n              {unclaimedAmount?.toFixed(0, { groupSeparator: ',' } ?? '-')} UNI\n            </TYPE.white>\n            <TYPE.white style={{ paddingTop: '1.25rem', textAlign: 'center' }} fontWeight={600} color=\"white\">\n              <span role=\"img\" aria-label=\"party\">\n                🎉\n              </span>{' '}\n              UNI has arrived{' '}\n              <span role=\"img\" aria-label=\"party\">\n                🎉\n              </span>\n            </TYPE.white>\n            <TYPE.subHeader style={{ paddingTop: '0.5rem', textAlign: 'center' }} color=\"white\">\n              {`Thanks for being part of the Uniswap community <3`}\n            </TYPE.subHeader>\n          </AutoColumn>\n          <AutoColumn style={{ zIndex: 10 }} justify=\"center\">\n            <ButtonPrimary padding=\"8px\" borderRadius=\"8px\" width={'fit-content'} onClick={toggleSelfClaimModal}>\n              Claim your UNI tokens\n            </ButtonPrimary>\n          </AutoColumn>\n        </StyledClaimPopup>\n      )}\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}