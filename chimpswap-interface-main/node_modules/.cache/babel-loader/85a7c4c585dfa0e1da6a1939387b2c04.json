{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ulyss\\\\chimpswap\\\\chimpswap-interface-main\\\\src\\\\components\\\\SearchModal\\\\ManageTokens.tsx\";\nimport React, { useRef, useCallback, useState, useMemo } from 'react';\nimport Column from 'components/Column';\nimport { PaddedColumn, Separator, SearchInput } from './styleds';\nimport Row, { RowBetween, RowFixed } from 'components/Row';\nimport { TYPE, ExternalLinkIcon, TrashIcon, ButtonText, ExternalLink } from 'theme';\nimport { useToken } from 'hooks/Tokens';\nimport styled from 'styled-components';\nimport { useUserAddedTokens, useRemoveUserAddedToken } from 'state/user/hooks';\nimport CurrencyLogo from 'components/CurrencyLogo';\nimport { getEtherscanLink, isAddress } from 'utils';\nimport { useActiveWeb3React } from 'hooks';\nimport Card from 'components/Card';\nimport ImportRow from './ImportRow';\nimport useTheme from '../../hooks/useTheme';\nimport { CurrencyModalView } from './CurrencySearchModal';\nconst Wrapper = styled.div`\n  width: 100%;\n  height: calc(100% - 60px);\n  position: relative;\n  padding-bottom: 60px;\n`;\nconst Footer = styled.div`\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n  border-radius: 20px;\n  border-top-right-radius: 0;\n  border-top-left-radius: 0;\n  border-top: 1px solid ${({\n  theme\n}) => theme.bg3};\n  padding: 20px;\n  text-align: center;\n`;\nexport default function ManageTokens({\n  setModalView,\n  setImportToken\n}) {\n  const {\n    chainId\n  } = useActiveWeb3React();\n  const [searchQuery, setSearchQuery] = useState('');\n  const theme = useTheme(); // manage focus on modal show\n\n  const inputRef = useRef();\n  const handleInput = useCallback(event => {\n    const input = event.target.value;\n    const checksummedInput = isAddress(input);\n    setSearchQuery(checksummedInput || input);\n  }, []); // if they input an address, use it\n\n  const isAddressSearch = isAddress(searchQuery);\n  const searchToken = useToken(searchQuery); // all tokens for local lisr\n\n  const userAddedTokens = useUserAddedTokens();\n  const removeToken = useRemoveUserAddedToken();\n  const handleRemoveAll = useCallback(() => {\n    if (chainId && userAddedTokens) {\n      userAddedTokens.map(token => {\n        return removeToken(chainId, token.address);\n      });\n    }\n  }, [removeToken, userAddedTokens, chainId]);\n  const tokenList = useMemo(() => {\n    return chainId && userAddedTokens.map(token => /*#__PURE__*/React.createElement(RowBetween, {\n      key: token.address,\n      width: \"100%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(RowFixed, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(CurrencyLogo, {\n      currency: token,\n      size: '20px',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(ExternalLink, {\n      href: getEtherscanLink(chainId, token.address, 'address'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TYPE.main, {\n      ml: '10px',\n      fontWeight: 600,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 15\n      }\n    }, token.symbol))), /*#__PURE__*/React.createElement(RowFixed, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TrashIcon, {\n      onClick: () => removeToken(chainId, token.address),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(ExternalLinkIcon, {\n      href: getEtherscanLink(chainId, token.address, 'address'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }))));\n  }, [userAddedTokens, chainId, removeToken]);\n  return /*#__PURE__*/React.createElement(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Column, {\n    style: {\n      width: '100%',\n      flex: '1 1'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(PaddedColumn, {\n    gap: \"14px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(SearchInput, {\n    type: \"text\",\n    id: \"token-search-input\",\n    placeholder: '0x0000',\n    value: searchQuery,\n    autoComplete: \"off\",\n    ref: inputRef,\n    onChange: handleInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  })), searchQuery !== '' && !isAddressSearch && /*#__PURE__*/React.createElement(TYPE.error, {\n    error: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 54\n    }\n  }, \"Enter valid token address\"), searchToken && /*#__PURE__*/React.createElement(Card, {\n    backgroundColor: theme.bg2,\n    padding: \"10px 0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ImportRow, {\n    token: searchToken,\n    showImportView: () => setModalView(CurrencyModalView.importToken),\n    setImportToken: setImportToken,\n    style: {\n      height: 'fit-content'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Separator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(PaddedColumn, {\n    gap: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(RowBetween, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.main, {\n    fontWeight: 600,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }, userAddedTokens === null || userAddedTokens === void 0 ? void 0 : userAddedTokens.length, \" Custom \", userAddedTokens.length === 1 ? 'Token' : 'Tokens'), userAddedTokens.length > 0 && /*#__PURE__*/React.createElement(ButtonText, {\n    onClick: handleRemoveAll,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.blue, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 17\n    }\n  }, \"Clear all\"))), tokenList)), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.darkGray, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  }, \"Tip: Custom tokens are stored locally in your browser\")));\n}","map":{"version":3,"sources":["C:/Users/Ulyss/chimpswap/chimpswap-interface-main/src/components/SearchModal/ManageTokens.tsx"],"names":["React","useRef","useCallback","useState","useMemo","Column","PaddedColumn","Separator","SearchInput","Row","RowBetween","RowFixed","TYPE","ExternalLinkIcon","TrashIcon","ButtonText","ExternalLink","useToken","styled","useUserAddedTokens","useRemoveUserAddedToken","CurrencyLogo","getEtherscanLink","isAddress","useActiveWeb3React","Card","ImportRow","useTheme","CurrencyModalView","Wrapper","div","Footer","theme","bg3","ManageTokens","setModalView","setImportToken","chainId","searchQuery","setSearchQuery","inputRef","handleInput","event","input","target","value","checksummedInput","isAddressSearch","searchToken","userAddedTokens","removeToken","handleRemoveAll","map","token","address","tokenList","symbol","width","flex","bg2","importToken","height","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAmCC,WAAnC,EAAgDC,QAAhD,EAA0DC,OAA1D,QAAyE,OAAzE;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,YAAT,EAAuBC,SAAvB,EAAkCC,WAAlC,QAAqD,WAArD;AACA,OAAOC,GAAP,IAAcC,UAAd,EAA0BC,QAA1B,QAA0C,gBAA1C;AACA,SAASC,IAAT,EAAeC,gBAAf,EAAiCC,SAAjC,EAA4CC,UAA5C,EAAwDC,YAAxD,QAA4E,OAA5E;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,kBAAT,EAA6BC,uBAA7B,QAA4D,kBAA5D;AAEA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,SAASC,gBAAT,EAA2BC,SAA3B,QAA4C,OAA5C;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AAEA,SAASC,iBAAT,QAAkC,uBAAlC;AAEA,MAAMC,OAAO,GAAGX,MAAM,CAACY,GAAI;;;;;CAA3B;AAOA,MAAMC,MAAM,GAAGb,MAAM,CAACY,GAAI;;;;;;;0BAOA,CAAC;AAAEE,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,GAAI;;;CAPnD;AAYA,eAAe,SAASC,YAAT,CAAsB;AACnCC,EAAAA,YADmC;AAEnCC,EAAAA;AAFmC,CAAtB,EAMZ;AACD,QAAM;AAAEC,IAAAA;AAAF,MAAcb,kBAAkB,EAAtC;AAEA,QAAM,CAACc,WAAD,EAAcC,cAAd,IAAgCpC,QAAQ,CAAS,EAAT,CAA9C;AACA,QAAM6B,KAAK,GAAGL,QAAQ,EAAtB,CAJC,CAMD;;AACA,QAAMa,QAAQ,GAAGvC,MAAM,EAAvB;AACA,QAAMwC,WAAW,GAAGvC,WAAW,CAACwC,KAAK,IAAI;AACvC,UAAMC,KAAK,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAA3B;AACA,UAAMC,gBAAgB,GAAGvB,SAAS,CAACoB,KAAD,CAAlC;AACAJ,IAAAA,cAAc,CAACO,gBAAgB,IAAIH,KAArB,CAAd;AACD,GAJ8B,EAI5B,EAJ4B,CAA/B,CARC,CAcD;;AACA,QAAMI,eAAe,GAAGxB,SAAS,CAACe,WAAD,CAAjC;AACA,QAAMU,WAAW,GAAG/B,QAAQ,CAACqB,WAAD,CAA5B,CAhBC,CAkBD;;AACA,QAAMW,eAAwB,GAAG9B,kBAAkB,EAAnD;AACA,QAAM+B,WAAW,GAAG9B,uBAAuB,EAA3C;AAEA,QAAM+B,eAAe,GAAGjD,WAAW,CAAC,MAAM;AACxC,QAAImC,OAAO,IAAIY,eAAf,EAAgC;AAC9BA,MAAAA,eAAe,CAACG,GAAhB,CAAoBC,KAAK,IAAI;AAC3B,eAAOH,WAAW,CAACb,OAAD,EAAUgB,KAAK,CAACC,OAAhB,CAAlB;AACD,OAFD;AAGD;AACF,GANkC,EAMhC,CAACJ,WAAD,EAAcD,eAAd,EAA+BZ,OAA/B,CANgC,CAAnC;AAQA,QAAMkB,SAAS,GAAGnD,OAAO,CAAC,MAAM;AAC9B,WACEiC,OAAO,IACPY,eAAe,CAACG,GAAhB,CAAoBC,KAAK,iBACvB,oBAAC,UAAD;AAAY,MAAA,GAAG,EAAEA,KAAK,CAACC,OAAvB;AAAgC,MAAA,KAAK,EAAC,MAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,YAAD;AAAc,MAAA,QAAQ,EAAED,KAAxB;AAA+B,MAAA,IAAI,EAAE,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAE/B,gBAAgB,CAACe,OAAD,EAAUgB,KAAK,CAACC,OAAhB,EAAyB,SAAzB,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,EAAE,EAAE,MAAf;AAAuB,MAAA,UAAU,EAAE,GAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,KAAK,CAACG,MADT,CADF,CAFF,CADF,eASE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAW,MAAA,OAAO,EAAE,MAAMN,WAAW,CAACb,OAAD,EAAUgB,KAAK,CAACC,OAAhB,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,gBAAD;AAAkB,MAAA,IAAI,EAAEhC,gBAAgB,CAACe,OAAD,EAAUgB,KAAK,CAACC,OAAhB,EAAyB,SAAzB,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CATF,CADF,CAFF;AAmBD,GApBwB,EAoBtB,CAACL,eAAD,EAAkBZ,OAAlB,EAA2Ba,WAA3B,CApBsB,CAAzB;AAsBA,sBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAE;AAAEO,MAAAA,KAAK,EAAE,MAAT;AAAiBC,MAAAA,IAAI,EAAE;AAAvB,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAc,IAAA,GAAG,EAAC,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,EAAE,EAAC,oBAFL;AAGE,IAAA,WAAW,EAAE,QAHf;AAIE,IAAA,KAAK,EAAEpB,WAJT;AAKE,IAAA,YAAY,EAAC,KALf;AAME,IAAA,GAAG,EAAEE,QANP;AAOE,IAAA,QAAQ,EAAEC,WAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAYGH,WAAW,KAAK,EAAhB,IAAsB,CAACS,eAAvB,iBAA0C,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,KAAK,EAAE,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAZ7C,EAaGC,WAAW,iBACV,oBAAC,IAAD;AAAM,IAAA,eAAe,EAAEhB,KAAK,CAAC2B,GAA7B;AAAkC,IAAA,OAAO,EAAC,QAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAEX,WADT;AAEE,IAAA,cAAc,EAAE,MAAMb,YAAY,CAACP,iBAAiB,CAACgC,WAAnB,CAFpC;AAGE,IAAA,cAAc,EAAExB,cAHlB;AAIE,IAAA,KAAK,EAAE;AAAEyB,MAAAA,MAAM,EAAE;AAAV,KAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAdJ,CADF,eAyBE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAzBF,eA0BE,oBAAC,YAAD;AAAc,IAAA,GAAG,EAAC,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,IAAN;AAAW,IAAA,UAAU,EAAE,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGZ,eADH,aACGA,eADH,uBACGA,eAAe,CAAEa,MADpB,cACoCb,eAAe,CAACa,MAAhB,KAA2B,CAA3B,GAA+B,OAA/B,GAAyC,QAD7E,CADF,EAIGb,eAAe,CAACa,MAAhB,GAAyB,CAAzB,iBACC,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAEX,eAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CALJ,CADF,EAWGI,SAXH,CA1BF,CADF,eAyCE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6DADF,CAzCF,CADF;AA+CD","sourcesContent":["import React, { useRef, RefObject, useCallback, useState, useMemo } from 'react'\nimport Column from 'components/Column'\nimport { PaddedColumn, Separator, SearchInput } from './styleds'\nimport Row, { RowBetween, RowFixed } from 'components/Row'\nimport { TYPE, ExternalLinkIcon, TrashIcon, ButtonText, ExternalLink } from 'theme'\nimport { useToken } from 'hooks/Tokens'\nimport styled from 'styled-components'\nimport { useUserAddedTokens, useRemoveUserAddedToken } from 'state/user/hooks'\nimport { Token } from '@uniswap/sdk'\nimport CurrencyLogo from 'components/CurrencyLogo'\nimport { getEtherscanLink, isAddress } from 'utils'\nimport { useActiveWeb3React } from 'hooks'\nimport Card from 'components/Card'\nimport ImportRow from './ImportRow'\nimport useTheme from '../../hooks/useTheme'\n\nimport { CurrencyModalView } from './CurrencySearchModal'\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: calc(100% - 60px);\n  position: relative;\n  padding-bottom: 60px;\n`\n\nconst Footer = styled.div`\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n  border-radius: 20px;\n  border-top-right-radius: 0;\n  border-top-left-radius: 0;\n  border-top: 1px solid ${({ theme }) => theme.bg3};\n  padding: 20px;\n  text-align: center;\n`\n\nexport default function ManageTokens({\n  setModalView,\n  setImportToken\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportToken: (token: Token) => void\n}) {\n  const { chainId } = useActiveWeb3React()\n\n  const [searchQuery, setSearchQuery] = useState<string>('')\n  const theme = useTheme()\n\n  // manage focus on modal show\n  const inputRef = useRef<HTMLInputElement>()\n  const handleInput = useCallback(event => {\n    const input = event.target.value\n    const checksummedInput = isAddress(input)\n    setSearchQuery(checksummedInput || input)\n  }, [])\n\n  // if they input an address, use it\n  const isAddressSearch = isAddress(searchQuery)\n  const searchToken = useToken(searchQuery)\n\n  // all tokens for local lisr\n  const userAddedTokens: Token[] = useUserAddedTokens()\n  const removeToken = useRemoveUserAddedToken()\n\n  const handleRemoveAll = useCallback(() => {\n    if (chainId && userAddedTokens) {\n      userAddedTokens.map(token => {\n        return removeToken(chainId, token.address)\n      })\n    }\n  }, [removeToken, userAddedTokens, chainId])\n\n  const tokenList = useMemo(() => {\n    return (\n      chainId &&\n      userAddedTokens.map(token => (\n        <RowBetween key={token.address} width=\"100%\">\n          <RowFixed>\n            <CurrencyLogo currency={token} size={'20px'} />\n            <ExternalLink href={getEtherscanLink(chainId, token.address, 'address')}>\n              <TYPE.main ml={'10px'} fontWeight={600}>\n                {token.symbol}\n              </TYPE.main>\n            </ExternalLink>\n          </RowFixed>\n          <RowFixed>\n            <TrashIcon onClick={() => removeToken(chainId, token.address)} />\n            <ExternalLinkIcon href={getEtherscanLink(chainId, token.address, 'address')} />\n          </RowFixed>\n        </RowBetween>\n      ))\n    )\n  }, [userAddedTokens, chainId, removeToken])\n\n  return (\n    <Wrapper>\n      <Column style={{ width: '100%', flex: '1 1' }}>\n        <PaddedColumn gap=\"14px\">\n          <Row>\n            <SearchInput\n              type=\"text\"\n              id=\"token-search-input\"\n              placeholder={'0x0000'}\n              value={searchQuery}\n              autoComplete=\"off\"\n              ref={inputRef as RefObject<HTMLInputElement>}\n              onChange={handleInput}\n            />\n          </Row>\n          {searchQuery !== '' && !isAddressSearch && <TYPE.error error={true}>Enter valid token address</TYPE.error>}\n          {searchToken && (\n            <Card backgroundColor={theme.bg2} padding=\"10px 0\">\n              <ImportRow\n                token={searchToken}\n                showImportView={() => setModalView(CurrencyModalView.importToken)}\n                setImportToken={setImportToken}\n                style={{ height: 'fit-content' }}\n              />\n            </Card>\n          )}\n        </PaddedColumn>\n        <Separator />\n        <PaddedColumn gap=\"lg\">\n          <RowBetween>\n            <TYPE.main fontWeight={600}>\n              {userAddedTokens?.length} Custom {userAddedTokens.length === 1 ? 'Token' : 'Tokens'}\n            </TYPE.main>\n            {userAddedTokens.length > 0 && (\n              <ButtonText onClick={handleRemoveAll}>\n                <TYPE.blue>Clear all</TYPE.blue>\n              </ButtonText>\n            )}\n          </RowBetween>\n          {tokenList}\n        </PaddedColumn>\n      </Column>\n      <Footer>\n        <TYPE.darkGray>Tip: Custom tokens are stored locally in your browser</TYPE.darkGray>\n      </Footer>\n    </Wrapper>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}