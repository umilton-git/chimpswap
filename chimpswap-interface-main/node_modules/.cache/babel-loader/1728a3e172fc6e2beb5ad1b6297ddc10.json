{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ulyss\\\\chimpswap\\\\uniswap-interface-main\\\\src\\\\components\\\\SearchModal\\\\CurrencySearch.tsx\";\nimport { ETHER } from '@uniswap/sdk';\nimport React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport ReactGA from 'react-ga';\nimport { useTranslation } from 'react-i18next';\nimport { Text } from 'rebass';\nimport { useActiveWeb3React } from '../../hooks';\nimport { useAllTokens, useToken, useIsUserAddedToken, useFoundOnInactiveList } from '../../hooks/Tokens';\nimport { CloseIcon, TYPE, ButtonText, IconWrapper } from '../../theme';\nimport { isAddress } from '../../utils';\nimport Column from '../Column';\nimport Row, { RowBetween, RowFixed } from '../Row';\nimport CommonBases from './CommonBases';\nimport CurrencyList from './CurrencyList';\nimport { filterTokens, useSortedTokensByQuery } from './filtering';\nimport { useTokenComparator } from './sorting';\nimport { PaddedColumn, SearchInput, Separator } from './styleds';\nimport AutoSizer from 'react-virtualized-auto-sizer';\nimport styled from 'styled-components';\nimport useToggle from 'hooks/useToggle';\nimport { useOnClickOutside } from 'hooks/useOnClickOutside';\nimport useTheme from 'hooks/useTheme';\nimport ImportRow from './ImportRow';\nimport { Edit } from 'react-feather';\nimport useDebounce from 'hooks/useDebounce';\nconst ContentWrapper = styled(Column)`\n  width: 100%;\n  flex: 1 1;\n  position: relative;\n`;\nconst Footer = styled.div`\n  width: 100%;\n  border-radius: 20px;\n  padding: 20px;\n  border-top-left-radius: 0;\n  border-top-right-radius: 0;\n  background-color: ${({\n  theme\n}) => theme.bg1};\n  border-top: 1px solid ${({\n  theme\n}) => theme.bg2};\n`;\nexport function CurrencySearch({\n  selectedCurrency,\n  onCurrencySelect,\n  otherSelectedCurrency,\n  showCommonBases,\n  onDismiss,\n  isOpen,\n  showManageView,\n  showImportView,\n  setImportToken\n}) {\n  const {\n    t\n  } = useTranslation();\n  const {\n    chainId\n  } = useActiveWeb3React();\n  const theme = useTheme(); // refs for fixed size lists\n\n  const fixedList = useRef();\n  const [searchQuery, setSearchQuery] = useState('');\n  const debouncedQuery = useDebounce(searchQuery, 200);\n  const [invertSearchOrder] = useState(false);\n  const allTokens = useAllTokens(); // if they input an address, use it\n\n  const isAddressSearch = isAddress(debouncedQuery);\n  const searchToken = useToken(debouncedQuery);\n  const searchTokenIsAdded = useIsUserAddedToken(searchToken);\n  useEffect(() => {\n    if (isAddressSearch) {\n      ReactGA.event({\n        category: 'Currency Select',\n        action: 'Search by address',\n        label: isAddressSearch\n      });\n    }\n  }, [isAddressSearch]);\n  const showETH = useMemo(() => {\n    const s = debouncedQuery.toLowerCase().trim();\n    return s === '' || s === 'e' || s === 'et' || s === 'eth';\n  }, [debouncedQuery]);\n  const tokenComparator = useTokenComparator(invertSearchOrder);\n  const filteredTokens = useMemo(() => {\n    return filterTokens(Object.values(allTokens), debouncedQuery);\n  }, [allTokens, debouncedQuery]);\n  const sortedTokens = useMemo(() => {\n    return filteredTokens.sort(tokenComparator);\n  }, [filteredTokens, tokenComparator]);\n  const filteredSortedTokens = useSortedTokensByQuery(sortedTokens, debouncedQuery);\n  const handleCurrencySelect = useCallback(currency => {\n    onCurrencySelect(currency);\n    onDismiss();\n  }, [onDismiss, onCurrencySelect]); // clear the input on open\n\n  useEffect(() => {\n    if (isOpen) setSearchQuery('');\n  }, [isOpen]); // manage focus on modal show\n\n  const inputRef = useRef();\n  const handleInput = useCallback(event => {\n    var _fixedList$current;\n\n    const input = event.target.value;\n    const checksummedInput = isAddress(input);\n    setSearchQuery(checksummedInput || input);\n    (_fixedList$current = fixedList.current) === null || _fixedList$current === void 0 ? void 0 : _fixedList$current.scrollTo(0);\n  }, []);\n  const handleEnter = useCallback(e => {\n    if (e.key === 'Enter') {\n      const s = debouncedQuery.toLowerCase().trim();\n\n      if (s === 'eth') {\n        handleCurrencySelect(ETHER);\n      } else if (filteredSortedTokens.length > 0) {\n        var _filteredSortedTokens;\n\n        if (((_filteredSortedTokens = filteredSortedTokens[0].symbol) === null || _filteredSortedTokens === void 0 ? void 0 : _filteredSortedTokens.toLowerCase()) === debouncedQuery.trim().toLowerCase() || filteredSortedTokens.length === 1) {\n          handleCurrencySelect(filteredSortedTokens[0]);\n        }\n      }\n    }\n  }, [filteredSortedTokens, handleCurrencySelect, debouncedQuery]); // menu ui\n\n  const [open, toggle] = useToggle(false);\n  const node = useRef();\n  useOnClickOutside(node, open ? toggle : undefined); // if no results on main list, show option to expand into inactive\n\n  const inactiveTokens = useFoundOnInactiveList(debouncedQuery);\n  const filteredInactiveTokens = useSortedTokensByQuery(inactiveTokens, debouncedQuery);\n  return /*#__PURE__*/React.createElement(ContentWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(PaddedColumn, {\n    gap: \"16px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(RowBetween, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    fontWeight: 500,\n    fontSize: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 11\n    }\n  }, \"Select a token\"), /*#__PURE__*/React.createElement(CloseIcon, {\n    onClick: onDismiss,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SearchInput, {\n    type: \"text\",\n    id: \"token-search-input\",\n    placeholder: t('tokenSearchPlaceholder'),\n    autoComplete: \"off\",\n    value: searchQuery,\n    ref: inputRef,\n    onChange: handleInput,\n    onKeyDown: handleEnter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 11\n    }\n  })), showCommonBases && /*#__PURE__*/React.createElement(CommonBases, {\n    chainId: chainId,\n    onSelect: handleCurrencySelect,\n    selectedCurrency: selectedCurrency,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Separator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }\n  }), searchToken && !searchTokenIsAdded ? /*#__PURE__*/React.createElement(Column, {\n    style: {\n      padding: '20px 0',\n      height: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ImportRow, {\n    token: searchToken,\n    showImportView: showImportView,\n    setImportToken: setImportToken,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 11\n    }\n  })) : (filteredSortedTokens === null || filteredSortedTokens === void 0 ? void 0 : filteredSortedTokens.length) > 0 || (filteredInactiveTokens === null || filteredInactiveTokens === void 0 ? void 0 : filteredInactiveTokens.length) > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      flex: '1'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AutoSizer, {\n    disableWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 11\n    }\n  }, ({\n    height\n  }) => /*#__PURE__*/React.createElement(CurrencyList, {\n    height: height,\n    showETH: showETH,\n    currencies: filteredInactiveTokens ? filteredSortedTokens.concat(filteredInactiveTokens) : filteredSortedTokens,\n    breakIndex: inactiveTokens && filteredSortedTokens ? filteredSortedTokens.length : undefined,\n    onCurrencySelect: handleCurrencySelect,\n    otherCurrency: otherSelectedCurrency,\n    selectedCurrency: selectedCurrency,\n    fixedListRef: fixedList,\n    showImportView: showImportView,\n    setImportToken: setImportToken,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 15\n    }\n  }))) : /*#__PURE__*/React.createElement(Column, {\n    style: {\n      padding: '20px',\n      height: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.main, {\n    color: theme.text3,\n    textAlign: \"center\",\n    mb: \"20px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 11\n    }\n  }, \"No results found.\")), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ButtonText, {\n    onClick: showManageView,\n    color: theme.blue1,\n    className: \"list-token-manage-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(RowFixed, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IconWrapper, {\n    size: \"16px\",\n    marginRight: \"6px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Edit, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(TYPE.main, {\n    color: theme.blue1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 15\n    }\n  }, \"Manage\"))))));\n}","map":{"version":3,"sources":["C:/Users/Ulyss/chimpswap/uniswap-interface-main/src/components/SearchModal/CurrencySearch.tsx"],"names":["ETHER","React","useCallback","useEffect","useMemo","useRef","useState","ReactGA","useTranslation","Text","useActiveWeb3React","useAllTokens","useToken","useIsUserAddedToken","useFoundOnInactiveList","CloseIcon","TYPE","ButtonText","IconWrapper","isAddress","Column","Row","RowBetween","RowFixed","CommonBases","CurrencyList","filterTokens","useSortedTokensByQuery","useTokenComparator","PaddedColumn","SearchInput","Separator","AutoSizer","styled","useToggle","useOnClickOutside","useTheme","ImportRow","Edit","useDebounce","ContentWrapper","Footer","div","theme","bg1","bg2","CurrencySearch","selectedCurrency","onCurrencySelect","otherSelectedCurrency","showCommonBases","onDismiss","isOpen","showManageView","showImportView","setImportToken","t","chainId","fixedList","searchQuery","setSearchQuery","debouncedQuery","invertSearchOrder","allTokens","isAddressSearch","searchToken","searchTokenIsAdded","event","category","action","label","showETH","s","toLowerCase","trim","tokenComparator","filteredTokens","Object","values","sortedTokens","sort","filteredSortedTokens","handleCurrencySelect","currency","inputRef","handleInput","input","target","value","checksummedInput","current","scrollTo","handleEnter","e","key","length","symbol","open","toggle","node","undefined","inactiveTokens","filteredInactiveTokens","padding","height","flex","concat","text3","blue1"],"mappings":"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","sourcesContent":["import { Currency, ETHER, Token } from '@uniswap/sdk'\nimport React, { KeyboardEvent, RefObject, useCallback, useEffect, useMemo, useRef, useState } from 'react'\nimport ReactGA from 'react-ga'\nimport { useTranslation } from 'react-i18next'\nimport { FixedSizeList } from 'react-window'\nimport { Text } from 'rebass'\nimport { useActiveWeb3React } from '../../hooks'\nimport { useAllTokens, useToken, useIsUserAddedToken, useFoundOnInactiveList } from '../../hooks/Tokens'\nimport { CloseIcon, TYPE, ButtonText, IconWrapper } from '../../theme'\nimport { isAddress } from '../../utils'\nimport Column from '../Column'\nimport Row, { RowBetween, RowFixed } from '../Row'\nimport CommonBases from './CommonBases'\nimport CurrencyList from './CurrencyList'\nimport { filterTokens, useSortedTokensByQuery } from './filtering'\nimport { useTokenComparator } from './sorting'\nimport { PaddedColumn, SearchInput, Separator } from './styleds'\nimport AutoSizer from 'react-virtualized-auto-sizer'\nimport styled from 'styled-components'\nimport useToggle from 'hooks/useToggle'\nimport { useOnClickOutside } from 'hooks/useOnClickOutside'\nimport useTheme from 'hooks/useTheme'\nimport ImportRow from './ImportRow'\nimport { Edit } from 'react-feather'\nimport useDebounce from 'hooks/useDebounce'\n\nconst ContentWrapper = styled(Column)`\n  width: 100%;\n  flex: 1 1;\n  position: relative;\n`\n\nconst Footer = styled.div`\n  width: 100%;\n  border-radius: 20px;\n  padding: 20px;\n  border-top-left-radius: 0;\n  border-top-right-radius: 0;\n  background-color: ${({ theme }) => theme.bg1};\n  border-top: 1px solid ${({ theme }) => theme.bg2};\n`\n\ninterface CurrencySearchProps {\n  isOpen: boolean\n  onDismiss: () => void\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherSelectedCurrency?: Currency | null\n  showCommonBases?: boolean\n  showManageView: () => void\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n}\n\nexport function CurrencySearch({\n  selectedCurrency,\n  onCurrencySelect,\n  otherSelectedCurrency,\n  showCommonBases,\n  onDismiss,\n  isOpen,\n  showManageView,\n  showImportView,\n  setImportToken\n}: CurrencySearchProps) {\n  const { t } = useTranslation()\n  const { chainId } = useActiveWeb3React()\n  const theme = useTheme()\n\n  // refs for fixed size lists\n  const fixedList = useRef<FixedSizeList>()\n\n  const [searchQuery, setSearchQuery] = useState<string>('')\n  const debouncedQuery = useDebounce(searchQuery, 200)\n\n  const [invertSearchOrder] = useState<boolean>(false)\n\n  const allTokens = useAllTokens()\n\n  // if they input an address, use it\n  const isAddressSearch = isAddress(debouncedQuery)\n  const searchToken = useToken(debouncedQuery)\n  const searchTokenIsAdded = useIsUserAddedToken(searchToken)\n\n  useEffect(() => {\n    if (isAddressSearch) {\n      ReactGA.event({\n        category: 'Currency Select',\n        action: 'Search by address',\n        label: isAddressSearch\n      })\n    }\n  }, [isAddressSearch])\n\n  const showETH: boolean = useMemo(() => {\n    const s = debouncedQuery.toLowerCase().trim()\n    return s === '' || s === 'e' || s === 'et' || s === 'eth'\n  }, [debouncedQuery])\n\n  const tokenComparator = useTokenComparator(invertSearchOrder)\n\n  const filteredTokens: Token[] = useMemo(() => {\n    return filterTokens(Object.values(allTokens), debouncedQuery)\n  }, [allTokens, debouncedQuery])\n\n  const sortedTokens: Token[] = useMemo(() => {\n    return filteredTokens.sort(tokenComparator)\n  }, [filteredTokens, tokenComparator])\n\n  const filteredSortedTokens = useSortedTokensByQuery(sortedTokens, debouncedQuery)\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      onCurrencySelect(currency)\n      onDismiss()\n    },\n    [onDismiss, onCurrencySelect]\n  )\n\n  // clear the input on open\n  useEffect(() => {\n    if (isOpen) setSearchQuery('')\n  }, [isOpen])\n\n  // manage focus on modal show\n  const inputRef = useRef<HTMLInputElement>()\n  const handleInput = useCallback(event => {\n    const input = event.target.value\n    const checksummedInput = isAddress(input)\n    setSearchQuery(checksummedInput || input)\n    fixedList.current?.scrollTo(0)\n  }, [])\n\n  const handleEnter = useCallback(\n    (e: KeyboardEvent<HTMLInputElement>) => {\n      if (e.key === 'Enter') {\n        const s = debouncedQuery.toLowerCase().trim()\n        if (s === 'eth') {\n          handleCurrencySelect(ETHER)\n        } else if (filteredSortedTokens.length > 0) {\n          if (\n            filteredSortedTokens[0].symbol?.toLowerCase() === debouncedQuery.trim().toLowerCase() ||\n            filteredSortedTokens.length === 1\n          ) {\n            handleCurrencySelect(filteredSortedTokens[0])\n          }\n        }\n      }\n    },\n    [filteredSortedTokens, handleCurrencySelect, debouncedQuery]\n  )\n\n  // menu ui\n  const [open, toggle] = useToggle(false)\n  const node = useRef<HTMLDivElement>()\n  useOnClickOutside(node, open ? toggle : undefined)\n\n  // if no results on main list, show option to expand into inactive\n  const inactiveTokens = useFoundOnInactiveList(debouncedQuery)\n  const filteredInactiveTokens: Token[] = useSortedTokensByQuery(inactiveTokens, debouncedQuery)\n\n  return (\n    <ContentWrapper>\n      <PaddedColumn gap=\"16px\">\n        <RowBetween>\n          <Text fontWeight={500} fontSize={16}>\n            Select a token\n          </Text>\n          <CloseIcon onClick={onDismiss} />\n        </RowBetween>\n        <Row>\n          <SearchInput\n            type=\"text\"\n            id=\"token-search-input\"\n            placeholder={t('tokenSearchPlaceholder')}\n            autoComplete=\"off\"\n            value={searchQuery}\n            ref={inputRef as RefObject<HTMLInputElement>}\n            onChange={handleInput}\n            onKeyDown={handleEnter}\n          />\n        </Row>\n        {showCommonBases && (\n          <CommonBases chainId={chainId} onSelect={handleCurrencySelect} selectedCurrency={selectedCurrency} />\n        )}\n      </PaddedColumn>\n      <Separator />\n      {searchToken && !searchTokenIsAdded ? (\n        <Column style={{ padding: '20px 0', height: '100%' }}>\n          <ImportRow token={searchToken} showImportView={showImportView} setImportToken={setImportToken} />\n        </Column>\n      ) : filteredSortedTokens?.length > 0 || filteredInactiveTokens?.length > 0 ? (\n        <div style={{ flex: '1' }}>\n          <AutoSizer disableWidth>\n            {({ height }) => (\n              <CurrencyList\n                height={height}\n                showETH={showETH}\n                currencies={\n                  filteredInactiveTokens ? filteredSortedTokens.concat(filteredInactiveTokens) : filteredSortedTokens\n                }\n                breakIndex={inactiveTokens && filteredSortedTokens ? filteredSortedTokens.length : undefined}\n                onCurrencySelect={handleCurrencySelect}\n                otherCurrency={otherSelectedCurrency}\n                selectedCurrency={selectedCurrency}\n                fixedListRef={fixedList}\n                showImportView={showImportView}\n                setImportToken={setImportToken}\n              />\n            )}\n          </AutoSizer>\n        </div>\n      ) : (\n        <Column style={{ padding: '20px', height: '100%' }}>\n          <TYPE.main color={theme.text3} textAlign=\"center\" mb=\"20px\">\n            No results found.\n          </TYPE.main>\n        </Column>\n      )}\n      <Footer>\n        <Row justify=\"center\">\n          <ButtonText onClick={showManageView} color={theme.blue1} className=\"list-token-manage-button\">\n            <RowFixed>\n              <IconWrapper size=\"16px\" marginRight=\"6px\">\n                <Edit />\n              </IconWrapper>\n              <TYPE.main color={theme.blue1}>Manage</TYPE.main>\n            </RowFixed>\n          </ButtonText>\n        </Row>\n      </Footer>\n    </ContentWrapper>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}