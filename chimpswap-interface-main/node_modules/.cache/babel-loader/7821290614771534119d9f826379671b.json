{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ulyss\\\\chimpswap\\\\uniswap-interface-main\\\\src\\\\components\\\\Toggle\\\\index.tsx\";\nimport React from 'react';\nimport styled from 'styled-components';\nconst ToggleElement = styled.span`\n  padding: 0.25rem 0.5rem;\n  border-radius: 14px;\n  background: ${({\n  theme,\n  isActive,\n  isOnSwitch\n}) => isActive ? isOnSwitch ? theme.primary1 : theme.text4 : 'none'};\n  color: ${({\n  theme,\n  isActive,\n  isOnSwitch\n}) => isActive ? isOnSwitch ? theme.white : theme.text2 : theme.text3};\n  font-size: 1rem;\n  font-weight: 400;\n\n  padding: 0.35rem 0.6rem;\n  border-radius: 12px;\n  background: ${({\n  theme,\n  isActive,\n  isOnSwitch\n}) => isActive ? isOnSwitch ? theme.primary1 : theme.text4 : 'none'};\n  color: ${({\n  theme,\n  isActive,\n  isOnSwitch\n}) => isActive ? isOnSwitch ? theme.white : theme.text2 : theme.text2};\n  font-size: 1rem;\n  font-weight: ${({\n  isOnSwitch\n}) => isOnSwitch ? '500' : '400'};\n  :hover {\n    user-select: ${({\n  isOnSwitch\n}) => isOnSwitch ? 'none' : 'initial'};\n    background: ${({\n  theme,\n  isActive,\n  isOnSwitch\n}) => isActive ? isOnSwitch ? theme.primary1 : theme.text3 : 'none'};\n    color: ${({\n  theme,\n  isActive,\n  isOnSwitch\n}) => isActive ? isOnSwitch ? theme.white : theme.text2 : theme.text3};\n  }\n`;\nconst StyledToggle = styled.button`\n  border-radius: 12px;\n  border: none;\n  background: ${({\n  theme\n}) => theme.bg3};\n  display: flex;\n  width: fit-content;\n  cursor: pointer;\n  outline: none;\n  padding: 0;\n`;\nexport default function Toggle({\n  id,\n  isActive,\n  toggle\n}) {\n  return /*#__PURE__*/React.createElement(StyledToggle, {\n    id: id,\n    isActive: isActive,\n    onClick: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ToggleElement, {\n    isActive: isActive,\n    isOnSwitch: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, \"On\"), /*#__PURE__*/React.createElement(ToggleElement, {\n    isActive: !isActive,\n    isOnSwitch: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, \"Off\"));\n}","map":{"version":3,"sources":["C:/Users/Ulyss/chimpswap/uniswap-interface-main/src/components/Toggle/index.tsx"],"names":["React","styled","ToggleElement","span","theme","isActive","isOnSwitch","primary1","text4","white","text2","text3","StyledToggle","button","bg3","Toggle","id","toggle"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,aAAa,GAAGD,MAAM,CAACE,IAAmD;;;gBAGhE,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,QAAT;AAAmBC,EAAAA;AAAnB,CAAD,KAAsCD,QAAQ,GAAIC,UAAU,GAAGF,KAAK,CAACG,QAAT,GAAoBH,KAAK,CAACI,KAAxC,GAAiD,MAAQ;WAC5G,CAAC;AAAEJ,EAAAA,KAAF;AAASC,EAAAA,QAAT;AAAmBC,EAAAA;AAAnB,CAAD,KAAsCD,QAAQ,GAAIC,UAAU,GAAGF,KAAK,CAACK,KAAT,GAAiBL,KAAK,CAACM,KAArC,GAA8CN,KAAK,CAACO,KAAO;;;;;;gBAMpG,CAAC;AAAEP,EAAAA,KAAF;AAASC,EAAAA,QAAT;AAAmBC,EAAAA;AAAnB,CAAD,KAAsCD,QAAQ,GAAIC,UAAU,GAAGF,KAAK,CAACG,QAAT,GAAoBH,KAAK,CAACI,KAAxC,GAAiD,MAAQ;WAC5G,CAAC;AAAEJ,EAAAA,KAAF;AAASC,EAAAA,QAAT;AAAmBC,EAAAA;AAAnB,CAAD,KAAsCD,QAAQ,GAAIC,UAAU,GAAGF,KAAK,CAACK,KAAT,GAAiBL,KAAK,CAACM,KAArC,GAA8CN,KAAK,CAACM,KAAO;;iBAEnG,CAAC;AAAEJ,EAAAA;AAAF,CAAD,KAAqBA,UAAU,GAAG,KAAH,GAAW,KAAO;;mBAE/C,CAAC;AAAEA,EAAAA;AAAF,CAAD,KAAqBA,UAAU,GAAG,MAAH,GAAY,SAAW;kBACvD,CAAC;AAAEF,EAAAA,KAAF;AAASC,EAAAA,QAAT;AAAmBC,EAAAA;AAAnB,CAAD,KACZD,QAAQ,GAAIC,UAAU,GAAGF,KAAK,CAACG,QAAT,GAAoBH,KAAK,CAACO,KAAxC,GAAiD,MAAO;aACzD,CAAC;AAAEP,EAAAA,KAAF;AAASC,EAAAA,QAAT;AAAmBC,EAAAA;AAAnB,CAAD,KAAsCD,QAAQ,GAAIC,UAAU,GAAGF,KAAK,CAACK,KAAT,GAAiBL,KAAK,CAACM,KAArC,GAA8CN,KAAK,CAACO,KAAO;;CAlBtH;AAsBA,MAAMC,YAAY,GAAGX,MAAM,CAACY,MAAwD;;;gBAGpE,CAAC;AAAET,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACU,GAAI;;;;;;CAHzC;AAiBA,eAAe,SAASC,MAAT,CAAgB;AAAEC,EAAAA,EAAF;AAAMX,EAAAA,QAAN;AAAgBY,EAAAA;AAAhB,CAAhB,EAAuD;AACpE,sBACE,oBAAC,YAAD;AAAc,IAAA,EAAE,EAAED,EAAlB;AAAsB,IAAA,QAAQ,EAAEX,QAAhC;AAA0C,IAAA,OAAO,EAAEY,MAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,aAAD;AAAe,IAAA,QAAQ,EAAEZ,QAAzB;AAAmC,IAAA,UAAU,EAAE,IAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,eAIE,oBAAC,aAAD;AAAe,IAAA,QAAQ,EAAE,CAACA,QAA1B;AAAoC,IAAA,UAAU,EAAE,KAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAJF,CADF;AAUD","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\nconst ToggleElement = styled.span<{ isActive?: boolean; isOnSwitch?: boolean }>`\n  padding: 0.25rem 0.5rem;\n  border-radius: 14px;\n  background: ${({ theme, isActive, isOnSwitch }) => (isActive ? (isOnSwitch ? theme.primary1 : theme.text4) : 'none')};\n  color: ${({ theme, isActive, isOnSwitch }) => (isActive ? (isOnSwitch ? theme.white : theme.text2) : theme.text3)};\n  font-size: 1rem;\n  font-weight: 400;\n\n  padding: 0.35rem 0.6rem;\n  border-radius: 12px;\n  background: ${({ theme, isActive, isOnSwitch }) => (isActive ? (isOnSwitch ? theme.primary1 : theme.text4) : 'none')};\n  color: ${({ theme, isActive, isOnSwitch }) => (isActive ? (isOnSwitch ? theme.white : theme.text2) : theme.text2)};\n  font-size: 1rem;\n  font-weight: ${({ isOnSwitch }) => (isOnSwitch ? '500' : '400')};\n  :hover {\n    user-select: ${({ isOnSwitch }) => (isOnSwitch ? 'none' : 'initial')};\n    background: ${({ theme, isActive, isOnSwitch }) =>\n      isActive ? (isOnSwitch ? theme.primary1 : theme.text3) : 'none'};\n    color: ${({ theme, isActive, isOnSwitch }) => (isActive ? (isOnSwitch ? theme.white : theme.text2) : theme.text3)};\n  }\n`\n\nconst StyledToggle = styled.button<{ isActive?: boolean; activeElement?: boolean }>`\n  border-radius: 12px;\n  border: none;\n  background: ${({ theme }) => theme.bg3};\n  display: flex;\n  width: fit-content;\n  cursor: pointer;\n  outline: none;\n  padding: 0;\n`\n\nexport interface ToggleProps {\n  id?: string\n  isActive: boolean\n  toggle: () => void\n}\n\nexport default function Toggle({ id, isActive, toggle }: ToggleProps) {\n  return (\n    <StyledToggle id={id} isActive={isActive} onClick={toggle}>\n      <ToggleElement isActive={isActive} isOnSwitch={true}>\n        On\n      </ToggleElement>\n      <ToggleElement isActive={!isActive} isOnSwitch={false}>\n        Off\n      </ToggleElement>\n    </StyledToggle>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}