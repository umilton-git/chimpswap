{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ulyss\\\\chimpswap\\\\chimpswap-interface-main\\\\src\\\\components\\\\claim\\\\ClaimModal.tsx\";\nimport { JSBI, TokenAmount } from '@uniswap/sdk';\nimport { isAddress } from 'ethers/lib/utils';\nimport React, { useEffect, useState } from 'react';\nimport { Text } from 'rebass';\nimport styled from 'styled-components';\nimport Circle from \"../../assets/images/blue-loader.svg\";\nimport tokenLogo from '../../assets/images/token-logo.png';\nimport { useActiveWeb3React } from '../../hooks';\nimport { ApplicationModal } from '../../state/application/actions';\nimport { useModalOpen, useToggleSelfClaimModal } from '../../state/application/hooks';\nimport { useClaimCallback, useUserClaimData, useUserUnclaimedAmount } from '../../state/claim/hooks';\nimport { useUserHasSubmittedClaim } from '../../state/transactions/hooks';\nimport { CloseIcon, CustomLightSpinner, ExternalLink, TYPE, UniTokenAnimated } from '../../theme';\nimport { getEtherscanLink } from '../../utils';\nimport { ButtonPrimary } from '../Button';\nimport { AutoColumn, ColumnCenter } from '../Column';\nimport Confetti from '../Confetti';\nimport { Break, CardBGImage, CardBGImageSmaller, CardNoise, CardSection, DataCard } from '../earn/styled';\nimport Modal from '../Modal';\nimport { RowBetween } from '../Row';\nconst ContentWrapper = styled(AutoColumn)`\n  width: 100%;\n`;\nconst ModalUpper = styled(DataCard)`\n  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);\n  background: radial-gradient(76.02% 75.41% at 1.84% 0%, #ff007a 0%, #021d43 100%);\n`;\nconst ConfirmOrLoadingWrapper = styled.div`\n  width: 100%;\n  padding: 24px;\n  position: relative;\n  background: ${({\n  activeBG\n}) => activeBG && 'radial-gradient(76.02% 75.41% at 1.84% 0%, rgba(255, 0, 122, 0.2) 0%, rgba(33, 114, 229, 0.2) 100%), #FFFFFF;'};\n`;\nconst ConfirmedIcon = styled(ColumnCenter)`\n  padding: 60px 0;\n`;\nconst SOCKS_AMOUNT = 1000;\nconst USER_AMOUNT = 400;\nexport default function ClaimModal() {\n  var _userClaimData$flags, _userClaimData$flags2, _groupSeparator, _userClaimData$flags3, _userClaimData$flags4, _userClaimData$flags5, _groupSeparator2;\n\n  const isOpen = useModalOpen(ApplicationModal.SELF_CLAIM);\n  const toggleClaimModal = useToggleSelfClaimModal();\n  const {\n    account,\n    chainId\n  } = useActiveWeb3React(); // used for UI loading states\n\n  const [attempting, setAttempting] = useState(false); // get user claim data\n\n  const userClaimData = useUserClaimData(account); // monitor the status of the claim from contracts and txns\n\n  const {\n    claimCallback\n  } = useClaimCallback(account);\n  const unclaimedAmount = useUserUnclaimedAmount(account);\n  const {\n    claimSubmitted,\n    claimTxn\n  } = useUserHasSubmittedClaim(account !== null && account !== void 0 ? account : undefined);\n  const claimConfirmed = Boolean(claimTxn === null || claimTxn === void 0 ? void 0 : claimTxn.receipt);\n\n  function onClaim() {\n    setAttempting(true);\n    claimCallback() // reset modal and log error\n    .catch(error => {\n      setAttempting(false);\n      console.log(error);\n    });\n  } // once confirmed txn is found, if modal is closed open, mark as not attempting regradless\n\n\n  useEffect(() => {\n    if (claimConfirmed && claimSubmitted && attempting) {\n      setAttempting(false);\n\n      if (!isOpen) {\n        toggleClaimModal();\n      }\n    }\n  }, [attempting, claimConfirmed, claimSubmitted, isOpen, toggleClaimModal]);\n  const nonLPAmount = JSBI.multiply(JSBI.BigInt(((userClaimData === null || userClaimData === void 0 ? void 0 : (_userClaimData$flags = userClaimData.flags) === null || _userClaimData$flags === void 0 ? void 0 : _userClaimData$flags.isSOCKS) ? SOCKS_AMOUNT : 0) + ((userClaimData === null || userClaimData === void 0 ? void 0 : (_userClaimData$flags2 = userClaimData.flags) === null || _userClaimData$flags2 === void 0 ? void 0 : _userClaimData$flags2.isUser) ? USER_AMOUNT : 0)), JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(18)));\n  return /*#__PURE__*/React.createElement(Modal, {\n    isOpen: isOpen,\n    onDismiss: toggleClaimModal,\n    maxHeight: 90,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Confetti, {\n    start: Boolean(isOpen && claimConfirmed),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }), !attempting && !claimConfirmed && /*#__PURE__*/React.createElement(ContentWrapper, {\n    gap: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ModalUpper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CardBGImage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(CardNoise, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(CardSection, {\n    gap: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(RowBetween, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.white, {\n    fontWeight: 500,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }, \"Claim UNI\"), /*#__PURE__*/React.createElement(CloseIcon, {\n    onClick: toggleClaimModal,\n    style: {\n      zIndex: 99\n    },\n    color: \"white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(TYPE.white, {\n    fontWeight: 700,\n    fontSize: 36,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 15\n    }\n  }, unclaimedAmount === null || unclaimedAmount === void 0 ? void 0 : unclaimedAmount.toFixed(0, (_groupSeparator = {\n    groupSeparator: ','\n  }) !== null && _groupSeparator !== void 0 ? _groupSeparator : '-'), \" UNI\")), /*#__PURE__*/React.createElement(Break, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(CardSection, {\n    gap: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }, (userClaimData === null || userClaimData === void 0 ? void 0 : (_userClaimData$flags3 = userClaimData.flags) === null || _userClaimData$flags3 === void 0 ? void 0 : _userClaimData$flags3.isSOCKS) && /*#__PURE__*/React.createElement(RowBetween, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.subHeader, {\n    color: \"white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 19\n    }\n  }, \"SOCKS\"), /*#__PURE__*/React.createElement(TYPE.subHeader, {\n    color: \"white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 19\n    }\n  }, SOCKS_AMOUNT, \" UNI\")), (userClaimData === null || userClaimData === void 0 ? void 0 : (_userClaimData$flags4 = userClaimData.flags) === null || _userClaimData$flags4 === void 0 ? void 0 : _userClaimData$flags4.isLP) && unclaimedAmount && JSBI.greaterThanOrEqual(unclaimedAmount.raw, nonLPAmount) && /*#__PURE__*/React.createElement(RowBetween, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.subHeader, {\n    color: \"white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 21\n    }\n  }, \"Liquidity\"), /*#__PURE__*/React.createElement(TYPE.subHeader, {\n    color: \"white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 21\n    }\n  }, unclaimedAmount.subtract(new TokenAmount(unclaimedAmount.token, nonLPAmount)).toFixed(0, {\n    groupSeparator: ','\n  }), ' ', \"UNI\")), (userClaimData === null || userClaimData === void 0 ? void 0 : (_userClaimData$flags5 = userClaimData.flags) === null || _userClaimData$flags5 === void 0 ? void 0 : _userClaimData$flags5.isUser) && /*#__PURE__*/React.createElement(RowBetween, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.subHeader, {\n    color: \"white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 19\n    }\n  }, \"User\"), /*#__PURE__*/React.createElement(TYPE.subHeader, {\n    color: \"white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 19\n    }\n  }, USER_AMOUNT, \" UNI\")))), /*#__PURE__*/React.createElement(AutoColumn, {\n    gap: \"md\",\n    style: {\n      padding: '1rem',\n      paddingTop: '0'\n    },\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.subHeader, {\n    fontWeight: 500,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }, \"As a member of the Uniswap community you may claim UNI to be used for voting and governance. \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 108\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 115\n    }\n  }), /*#__PURE__*/React.createElement(ExternalLink, {\n    href: \"https://uniswap.org/blog/uni\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 15\n    }\n  }, \"Read more about UNI\")), /*#__PURE__*/React.createElement(ButtonPrimary, {\n    disabled: !isAddress(account !== null && account !== void 0 ? account : ''),\n    padding: \"16px 16px\",\n    width: \"100%\",\n    borderRadius: \"12px\",\n    mt: \"1rem\",\n    onClick: onClaim,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  }, \"Claim UNI\"))), (attempting || claimConfirmed) && /*#__PURE__*/React.createElement(ConfirmOrLoadingWrapper, {\n    activeBG: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardNoise, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(CardBGImageSmaller, {\n    desaturate: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(RowBetween, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(CloseIcon, {\n    onClick: toggleClaimModal,\n    style: {\n      zIndex: 99\n    },\n    stroke: \"black\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(ConfirmedIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 11\n    }\n  }, !claimConfirmed ? /*#__PURE__*/React.createElement(CustomLightSpinner, {\n    src: Circle,\n    alt: \"loader\",\n    size: '90px',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 15\n    }\n  }) : /*#__PURE__*/React.createElement(UniTokenAnimated, {\n    width: \"72px\",\n    src: tokenLogo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(AutoColumn, {\n    gap: \"100px\",\n    justify: 'center',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(AutoColumn, {\n    gap: \"12px\",\n    justify: 'center',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.largeHeader, {\n    fontWeight: 600,\n    color: \"black\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 15\n    }\n  }, claimConfirmed ? 'Claimed!' : 'Claiming'), !claimConfirmed && /*#__PURE__*/React.createElement(Text, {\n    fontSize: 36,\n    color: '#ff007a',\n    fontWeight: 800,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 17\n    }\n  }, unclaimedAmount === null || unclaimedAmount === void 0 ? void 0 : unclaimedAmount.toFixed(0, (_groupSeparator2 = {\n    groupSeparator: ','\n  }) !== null && _groupSeparator2 !== void 0 ? _groupSeparator2 : '-'), \" UNI\")), claimConfirmed && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TYPE.subHeader, {\n    fontWeight: 500,\n    color: \"black\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    role: \"img\",\n    \"aria-label\": \"party-hat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 19\n    }\n  }, \"\\uD83C\\uDF89\", ' '), \"Welcome to team Unicorn :)\", ' ', /*#__PURE__*/React.createElement(\"span\", {\n    role: \"img\",\n    \"aria-label\": \"party-hat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 19\n    }\n  }, \"\\uD83C\\uDF89\"))), attempting && !claimSubmitted && /*#__PURE__*/React.createElement(TYPE.subHeader, {\n    color: \"black\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 15\n    }\n  }, \"Confirm this transaction in your wallet\"), attempting && claimSubmitted && !claimConfirmed && chainId && (claimTxn === null || claimTxn === void 0 ? void 0 : claimTxn.hash) && /*#__PURE__*/React.createElement(ExternalLink, {\n    href: getEtherscanLink(chainId, claimTxn === null || claimTxn === void 0 ? void 0 : claimTxn.hash, 'transaction'),\n    style: {\n      zIndex: 99\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 15\n    }\n  }, \"View transaction on Etherscan\"))));\n}","map":{"version":3,"sources":["C:/Users/Ulyss/chimpswap/chimpswap-interface-main/src/components/claim/ClaimModal.tsx"],"names":["JSBI","TokenAmount","isAddress","React","useEffect","useState","Text","styled","tokenLogo","useActiveWeb3React","ApplicationModal","useModalOpen","useToggleSelfClaimModal","useClaimCallback","useUserClaimData","useUserUnclaimedAmount","useUserHasSubmittedClaim","CloseIcon","CustomLightSpinner","ExternalLink","TYPE","UniTokenAnimated","getEtherscanLink","ButtonPrimary","AutoColumn","ColumnCenter","Confetti","Break","CardBGImage","CardBGImageSmaller","CardNoise","CardSection","DataCard","Modal","RowBetween","ContentWrapper","ModalUpper","ConfirmOrLoadingWrapper","div","activeBG","ConfirmedIcon","SOCKS_AMOUNT","USER_AMOUNT","ClaimModal","isOpen","SELF_CLAIM","toggleClaimModal","account","chainId","attempting","setAttempting","userClaimData","claimCallback","unclaimedAmount","claimSubmitted","claimTxn","undefined","claimConfirmed","Boolean","receipt","onClaim","catch","error","console","log","nonLPAmount","multiply","BigInt","flags","isSOCKS","isUser","exponentiate","zIndex","toFixed","groupSeparator","isLP","greaterThanOrEqual","raw","subtract","token","padding","paddingTop","Circle","hash"],"mappings":"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","sourcesContent":["import { JSBI, TokenAmount } from '@uniswap/sdk'\nimport { isAddress } from 'ethers/lib/utils'\nimport React, { useEffect, useState } from 'react'\nimport { Text } from 'rebass'\nimport styled from 'styled-components'\nimport Circle from '../../assets/images/blue-loader.svg'\nimport tokenLogo from '../../assets/images/token-logo.png'\nimport { useActiveWeb3React } from '../../hooks'\nimport { ApplicationModal } from '../../state/application/actions'\nimport { useModalOpen, useToggleSelfClaimModal } from '../../state/application/hooks'\nimport { useClaimCallback, useUserClaimData, useUserUnclaimedAmount } from '../../state/claim/hooks'\nimport { useUserHasSubmittedClaim } from '../../state/transactions/hooks'\nimport { CloseIcon, CustomLightSpinner, ExternalLink, TYPE, UniTokenAnimated } from '../../theme'\nimport { getEtherscanLink } from '../../utils'\nimport { ButtonPrimary } from '../Button'\nimport { AutoColumn, ColumnCenter } from '../Column'\nimport Confetti from '../Confetti'\nimport { Break, CardBGImage, CardBGImageSmaller, CardNoise, CardSection, DataCard } from '../earn/styled'\n\nimport Modal from '../Modal'\nimport { RowBetween } from '../Row'\n\nconst ContentWrapper = styled(AutoColumn)`\n  width: 100%;\n`\n\nconst ModalUpper = styled(DataCard)`\n  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);\n  background: radial-gradient(76.02% 75.41% at 1.84% 0%, #ff007a 0%, #021d43 100%);\n`\n\nconst ConfirmOrLoadingWrapper = styled.div<{ activeBG: boolean }>`\n  width: 100%;\n  padding: 24px;\n  position: relative;\n  background: ${({ activeBG }) =>\n    activeBG &&\n    'radial-gradient(76.02% 75.41% at 1.84% 0%, rgba(255, 0, 122, 0.2) 0%, rgba(33, 114, 229, 0.2) 100%), #FFFFFF;'};\n`\n\nconst ConfirmedIcon = styled(ColumnCenter)`\n  padding: 60px 0;\n`\n\nconst SOCKS_AMOUNT = 1000\nconst USER_AMOUNT = 400\n\nexport default function ClaimModal() {\n  const isOpen = useModalOpen(ApplicationModal.SELF_CLAIM)\n  const toggleClaimModal = useToggleSelfClaimModal()\n\n  const { account, chainId } = useActiveWeb3React()\n\n  // used for UI loading states\n  const [attempting, setAttempting] = useState<boolean>(false)\n\n  // get user claim data\n  const userClaimData = useUserClaimData(account)\n\n  // monitor the status of the claim from contracts and txns\n  const { claimCallback } = useClaimCallback(account)\n  const unclaimedAmount: TokenAmount | undefined = useUserUnclaimedAmount(account)\n  const { claimSubmitted, claimTxn } = useUserHasSubmittedClaim(account ?? undefined)\n  const claimConfirmed = Boolean(claimTxn?.receipt)\n\n  function onClaim() {\n    setAttempting(true)\n    claimCallback()\n      // reset modal and log error\n      .catch(error => {\n        setAttempting(false)\n        console.log(error)\n      })\n  }\n\n  // once confirmed txn is found, if modal is closed open, mark as not attempting regradless\n  useEffect(() => {\n    if (claimConfirmed && claimSubmitted && attempting) {\n      setAttempting(false)\n      if (!isOpen) {\n        toggleClaimModal()\n      }\n    }\n  }, [attempting, claimConfirmed, claimSubmitted, isOpen, toggleClaimModal])\n\n  const nonLPAmount = JSBI.multiply(\n    JSBI.BigInt((userClaimData?.flags?.isSOCKS ? SOCKS_AMOUNT : 0) + (userClaimData?.flags?.isUser ? USER_AMOUNT : 0)),\n    JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(18))\n  )\n\n  return (\n    <Modal isOpen={isOpen} onDismiss={toggleClaimModal} maxHeight={90}>\n      <Confetti start={Boolean(isOpen && claimConfirmed)} />\n      {!attempting && !claimConfirmed && (\n        <ContentWrapper gap=\"lg\">\n          <ModalUpper>\n            <CardBGImage />\n            <CardNoise />\n            <CardSection gap=\"md\">\n              <RowBetween>\n                <TYPE.white fontWeight={500}>Claim UNI</TYPE.white>\n                <CloseIcon onClick={toggleClaimModal} style={{ zIndex: 99 }} color=\"white\" />\n              </RowBetween>\n              <TYPE.white fontWeight={700} fontSize={36}>\n                {unclaimedAmount?.toFixed(0, { groupSeparator: ',' } ?? '-')} UNI\n              </TYPE.white>\n            </CardSection>\n            <Break />\n            <CardSection gap=\"sm\">\n              {userClaimData?.flags?.isSOCKS && (\n                <RowBetween>\n                  <TYPE.subHeader color=\"white\">SOCKS</TYPE.subHeader>\n                  <TYPE.subHeader color=\"white\">{SOCKS_AMOUNT} UNI</TYPE.subHeader>\n                </RowBetween>\n              )}\n              {userClaimData?.flags?.isLP &&\n                unclaimedAmount &&\n                JSBI.greaterThanOrEqual(unclaimedAmount.raw, nonLPAmount) && (\n                  <RowBetween>\n                    <TYPE.subHeader color=\"white\">Liquidity</TYPE.subHeader>\n                    <TYPE.subHeader color=\"white\">\n                      {unclaimedAmount\n                        .subtract(new TokenAmount(unclaimedAmount.token, nonLPAmount))\n                        .toFixed(0, { groupSeparator: ',' })}{' '}\n                      UNI\n                    </TYPE.subHeader>\n                  </RowBetween>\n                )}\n              {userClaimData?.flags?.isUser && (\n                <RowBetween>\n                  <TYPE.subHeader color=\"white\">User</TYPE.subHeader>\n                  <TYPE.subHeader color=\"white\">{USER_AMOUNT} UNI</TYPE.subHeader>\n                </RowBetween>\n              )}\n            </CardSection>\n          </ModalUpper>\n          <AutoColumn gap=\"md\" style={{ padding: '1rem', paddingTop: '0' }} justify=\"center\">\n            <TYPE.subHeader fontWeight={500}>\n              As a member of the Uniswap community you may claim UNI to be used for voting and governance. <br /> <br />\n              <ExternalLink href=\"https://uniswap.org/blog/uni\">Read more about UNI</ExternalLink>\n            </TYPE.subHeader>\n            <ButtonPrimary\n              disabled={!isAddress(account ?? '')}\n              padding=\"16px 16px\"\n              width=\"100%\"\n              borderRadius=\"12px\"\n              mt=\"1rem\"\n              onClick={onClaim}\n            >\n              Claim UNI\n            </ButtonPrimary>\n          </AutoColumn>\n        </ContentWrapper>\n      )}\n      {(attempting || claimConfirmed) && (\n        <ConfirmOrLoadingWrapper activeBG={true}>\n          <CardNoise />\n          <CardBGImageSmaller desaturate />\n          <RowBetween>\n            <div />\n            <CloseIcon onClick={toggleClaimModal} style={{ zIndex: 99 }} stroke=\"black\" />\n          </RowBetween>\n          <ConfirmedIcon>\n            {!claimConfirmed ? (\n              <CustomLightSpinner src={Circle} alt=\"loader\" size={'90px'} />\n            ) : (\n              <UniTokenAnimated width=\"72px\" src={tokenLogo} />\n            )}\n          </ConfirmedIcon>\n          <AutoColumn gap=\"100px\" justify={'center'}>\n            <AutoColumn gap=\"12px\" justify={'center'}>\n              <TYPE.largeHeader fontWeight={600} color=\"black\">\n                {claimConfirmed ? 'Claimed!' : 'Claiming'}\n              </TYPE.largeHeader>\n              {!claimConfirmed && (\n                <Text fontSize={36} color={'#ff007a'} fontWeight={800}>\n                  {unclaimedAmount?.toFixed(0, { groupSeparator: ',' } ?? '-')} UNI\n                </Text>\n              )}\n            </AutoColumn>\n            {claimConfirmed && (\n              <>\n                <TYPE.subHeader fontWeight={500} color=\"black\">\n                  <span role=\"img\" aria-label=\"party-hat\">\n                    🎉{' '}\n                  </span>\n                  Welcome to team Unicorn :){' '}\n                  <span role=\"img\" aria-label=\"party-hat\">\n                    🎉\n                  </span>\n                </TYPE.subHeader>\n              </>\n            )}\n            {attempting && !claimSubmitted && (\n              <TYPE.subHeader color=\"black\">Confirm this transaction in your wallet</TYPE.subHeader>\n            )}\n            {attempting && claimSubmitted && !claimConfirmed && chainId && claimTxn?.hash && (\n              <ExternalLink href={getEtherscanLink(chainId, claimTxn?.hash, 'transaction')} style={{ zIndex: 99 }}>\n                View transaction on Etherscan\n              </ExternalLink>\n            )}\n          </AutoColumn>\n        </ConfirmOrLoadingWrapper>\n      )}\n    </Modal>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}