{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ulyss\\\\chimpswap\\\\uniswap-interface-main\\\\src\\\\pages\\\\Vote\\\\VotePage.tsx\";\nimport React, { useState } from 'react';\nimport { AutoColumn } from '../../components/Column';\nimport styled from 'styled-components';\nimport { TYPE, StyledInternalLink, ExternalLink } from '../../theme';\nimport { RowFixed, RowBetween } from '../../components/Row';\nimport { CardSection, DataCard } from '../../components/earn/styled';\nimport { ArrowLeft } from 'react-feather';\nimport { ButtonPrimary } from '../../components/Button';\nimport { ProposalStatus } from './styled';\nimport { useProposalData, useUserVotesAsOfBlock, useUserDelegatee } from '../../state/governance/hooks';\nimport { DateTime } from 'luxon';\nimport ReactMarkdown from 'react-markdown';\nimport VoteModal from '../../components/vote/VoteModal';\nimport { JSBI } from '@uniswap/sdk';\nimport { useActiveWeb3React } from '../../hooks';\nimport { AVERAGE_BLOCK_TIME_IN_SECS, COMMON_CONTRACT_NAMES, UNI, ZERO_ADDRESS } from '../../constants';\nimport { isAddress, getEtherscanLink } from '../../utils';\nimport { ApplicationModal } from '../../state/application/actions';\nimport { useModalOpen, useToggleDelegateModal, useToggleVoteModal, useBlockNumber } from '../../state/application/hooks';\nimport DelegateModal from '../../components/vote/DelegateModal';\nimport { GreyCard } from '../../components/Card';\nimport { useTokenBalance } from '../../state/wallet/hooks';\nimport useCurrentBlockTimestamp from 'hooks/useCurrentBlockTimestamp';\nimport { BigNumber } from 'ethers';\nconst PageWrapper = styled(AutoColumn)`\n  width: 100%;\n`;\nconst ProposalInfo = styled(AutoColumn)`\n  border: 1px solid ${({\n  theme\n}) => theme.bg4};\n  border-radius: 12px;\n  padding: 1.5rem;\n  position: relative;\n  max-width: 640px;\n  width: 100%;\n`;\nconst ArrowWrapper = styled(StyledInternalLink)`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  height: 24px;\n  color: ${({\n  theme\n}) => theme.text1};\n\n  a {\n    color: ${({\n  theme\n}) => theme.text1};\n    text-decoration: none;\n  }\n  :hover {\n    text-decoration: none;\n  }\n`;\nconst CardWrapper = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 12px;\n  width: 100%;\n`;\nconst StyledDataCard = styled(DataCard)`\n  width: 100%;\n  background: none;\n  background-color: ${({\n  theme\n}) => theme.bg1};\n  height: fit-content;\n  z-index: 2;\n`;\nconst ProgressWrapper = styled.div`\n  width: 100%;\n  margin-top: 1rem;\n  height: 4px;\n  border-radius: 4px;\n  background-color: ${({\n  theme\n}) => theme.bg3};\n  position: relative;\n`;\nconst Progress = styled.div`\n  height: 4px;\n  border-radius: 4px;\n  background-color: ${({\n  theme,\n  status\n}) => status === 'for' ? theme.green1 : theme.red1};\n  width: ${({\n  percentageString\n}) => percentageString};\n`;\nconst MarkDownWrapper = styled.div`\n  max-width: 640px;\n  overflow: hidden;\n`;\nconst WrapSmall = styled(RowBetween)`\n  ${({\n  theme\n}) => theme.mediaWidth.upToSmall`\n    align-items: flex-start;\n    flex-direction: column;\n  `};\n`;\nconst DetailText = styled.div`\n  word-break: break-all;\n`;\nconst ProposerAddressLink = styled(ExternalLink)`\n  word-break: break-all;\n`;\nexport default function VotePage({\n  match: {\n    params: {\n      id\n    }\n  }\n}) {\n  var _proposalData$startBl, _proposalData$status, _proposalData$details;\n\n  const {\n    chainId,\n    account\n  } = useActiveWeb3React(); // get data for this specific proposal\n\n  const proposalData = useProposalData(id); // update support based on button interactions\n\n  const [support, setSupport] = useState(true); // modal for casting votes\n\n  const showVoteModal = useModalOpen(ApplicationModal.VOTE);\n  const toggleVoteModal = useToggleVoteModal(); // toggle for showing delegation modal\n\n  const showDelegateModal = useModalOpen(ApplicationModal.DELEGATE);\n  const toggleDelegateModal = useToggleDelegateModal(); // get and format date from data\n\n  const currentTimestamp = useCurrentBlockTimestamp();\n  const currentBlock = useBlockNumber();\n  const endDate = proposalData && currentTimestamp && currentBlock ? DateTime.fromSeconds(currentTimestamp.add(BigNumber.from(AVERAGE_BLOCK_TIME_IN_SECS).mul(BigNumber.from(proposalData.endBlock - currentBlock))).toNumber()) : undefined;\n  const now = DateTime.local(); // get total votes and format percentages for UI\n\n  const totalVotes = proposalData ? proposalData.forCount + proposalData.againstCount : undefined;\n  const forPercentage = proposalData && totalVotes ? (proposalData.forCount * 100 / totalVotes).toFixed(0) + '%' : '0%';\n  const againstPercentage = proposalData && totalVotes ? (proposalData.againstCount * 100 / totalVotes).toFixed(0) + '%' : '0%'; // only count available votes as of the proposal start block\n\n  const availableVotes = useUserVotesAsOfBlock((_proposalData$startBl = proposalData === null || proposalData === void 0 ? void 0 : proposalData.startBlock) !== null && _proposalData$startBl !== void 0 ? _proposalData$startBl : undefined); // only show voting if user has > 0 votes at proposal start block and proposal is active,\n\n  const showVotingButtons = availableVotes && JSBI.greaterThan(availableVotes.raw, JSBI.BigInt(0)) && proposalData && proposalData.status === 'active';\n  const uniBalance = useTokenBalance(account !== null && account !== void 0 ? account : undefined, chainId ? UNI[chainId] : undefined);\n  const userDelegatee = useUserDelegatee(); // in blurb link to home page if they are able to unlock\n\n  const showLinkForUnlock = Boolean(uniBalance && JSBI.notEqual(uniBalance.raw, JSBI.BigInt(0)) && userDelegatee === ZERO_ADDRESS); // show links in propsoal details if content is an address\n  // if content is contract with common name, replace address with common name\n\n  const linkIfAddress = content => {\n    if (isAddress(content) && chainId) {\n      var _COMMON_CONTRACT_NAME;\n\n      const commonName = (_COMMON_CONTRACT_NAME = COMMON_CONTRACT_NAMES[content]) !== null && _COMMON_CONTRACT_NAME !== void 0 ? _COMMON_CONTRACT_NAME : content;\n      return /*#__PURE__*/React.createElement(ExternalLink, {\n        href: getEtherscanLink(chainId, content, 'address'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 14\n        }\n      }, commonName);\n    }\n\n    return /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 12\n      }\n    }, content);\n  };\n\n  return /*#__PURE__*/React.createElement(PageWrapper, {\n    gap: \"lg\",\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(VoteModal, {\n    isOpen: showVoteModal,\n    onDismiss: toggleVoteModal,\n    proposalId: proposalData === null || proposalData === void 0 ? void 0 : proposalData.id,\n    support: support,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(DelegateModal, {\n    isOpen: showDelegateModal,\n    onDismiss: toggleDelegateModal,\n    title: \"Unlock Votes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ProposalInfo, {\n    gap: \"lg\",\n    justify: \"start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(RowBetween, {\n    style: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ArrowWrapper, {\n    to: \"/vote\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ArrowLeft, {\n    size: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }\n  }), \" All Proposals\"), proposalData && /*#__PURE__*/React.createElement(ProposalStatus, {\n    status: (_proposalData$status = proposalData === null || proposalData === void 0 ? void 0 : proposalData.status) !== null && _proposalData$status !== void 0 ? _proposalData$status : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 28\n    }\n  }, proposalData === null || proposalData === void 0 ? void 0 : proposalData.status)), /*#__PURE__*/React.createElement(AutoColumn, {\n    gap: \"10px\",\n    style: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.largeHeader, {\n    style: {\n      marginBottom: '.5rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 11\n    }\n  }, proposalData === null || proposalData === void 0 ? void 0 : proposalData.title), /*#__PURE__*/React.createElement(RowBetween, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.main, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }\n  }, endDate && endDate < now ? 'Voting ended ' + (endDate && endDate.toLocaleString(DateTime.DATETIME_FULL)) : proposalData ? 'Voting ends approximately ' + (endDate && endDate.toLocaleString(DateTime.DATETIME_FULL)) : '')), proposalData && proposalData.status === 'active' && !showVotingButtons && /*#__PURE__*/React.createElement(GreyCard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.black, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 15\n    }\n  }, \"Only UNI votes that were self delegated or delegated to another address before block\", ' ', proposalData.startBlock, \" are eligible for voting.\", ' ', showLinkForUnlock && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(StyledInternalLink, {\n    to: \"/vote\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 21\n    }\n  }, \"Unlock voting\"), \" to prepare for the next proposal.\")))), showVotingButtons ? /*#__PURE__*/React.createElement(RowFixed, {\n    style: {\n      width: '100%',\n      gap: '12px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ButtonPrimary, {\n    padding: \"8px\",\n    borderRadius: \"8px\",\n    onClick: () => {\n      setSupport(true);\n      toggleVoteModal();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 13\n    }\n  }, \"Vote For\"), /*#__PURE__*/React.createElement(ButtonPrimary, {\n    padding: \"8px\",\n    borderRadius: \"8px\",\n    onClick: () => {\n      setSupport(false);\n      toggleVoteModal();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 13\n    }\n  }, \"Vote Against\")) : '', /*#__PURE__*/React.createElement(CardWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(StyledDataCard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CardSection, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(AutoColumn, {\n    gap: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(WrapSmall, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.black, {\n    fontWeight: 600,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 19\n    }\n  }, \"For\"), /*#__PURE__*/React.createElement(TYPE.black, {\n    fontWeight: 600,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 19\n    }\n  }, ' ', proposalData === null || proposalData === void 0 ? void 0 : proposalData.forCount.toLocaleString(undefined, {\n    maximumFractionDigits: 0\n  })))), /*#__PURE__*/React.createElement(ProgressWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Progress, {\n    status: 'for',\n    percentageString: forPercentage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 17\n    }\n  })))), /*#__PURE__*/React.createElement(StyledDataCard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CardSection, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(AutoColumn, {\n    gap: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(WrapSmall, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.black, {\n    fontWeight: 600,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 19\n    }\n  }, \"Against\"), /*#__PURE__*/React.createElement(TYPE.black, {\n    fontWeight: 600,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 19\n    }\n  }, proposalData === null || proposalData === void 0 ? void 0 : proposalData.againstCount.toLocaleString(undefined, {\n    maximumFractionDigits: 0\n  })))), /*#__PURE__*/React.createElement(ProgressWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Progress, {\n    status: 'against',\n    percentageString: againstPercentage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 17\n    }\n  }))))), /*#__PURE__*/React.createElement(AutoColumn, {\n    gap: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.mediumHeader, {\n    fontWeight: 600,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 11\n    }\n  }, \"Details\"), proposalData === null || proposalData === void 0 ? void 0 : (_proposalData$details = proposalData.details) === null || _proposalData$details === void 0 ? void 0 : _proposalData$details.map((d, i) => {\n    return /*#__PURE__*/React.createElement(DetailText, {\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 15\n      }\n    }, i + 1, \": \", linkIfAddress(d.target), \".\", d.functionSig, \"(\", d.callData.split(',').map((content, i) => {\n      return /*#__PURE__*/React.createElement(\"span\", {\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 21\n        }\n      }, linkIfAddress(content), d.callData.split(',').length - 1 === i ? '' : ',');\n    }), \")\");\n  })), /*#__PURE__*/React.createElement(AutoColumn, {\n    gap: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.mediumHeader, {\n    fontWeight: 600,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 11\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(MarkDownWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ReactMarkdown, {\n    source: proposalData === null || proposalData === void 0 ? void 0 : proposalData.description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(AutoColumn, {\n    gap: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.mediumHeader, {\n    fontWeight: 600,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 11\n    }\n  }, \"Proposer\"), /*#__PURE__*/React.createElement(ProposerAddressLink, {\n    href: (proposalData === null || proposalData === void 0 ? void 0 : proposalData.proposer) && chainId ? getEtherscanLink(chainId, proposalData === null || proposalData === void 0 ? void 0 : proposalData.proposer, 'address') : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ReactMarkdown, {\n    source: proposalData === null || proposalData === void 0 ? void 0 : proposalData.proposer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 13\n    }\n  })))));\n}","map":{"version":3,"sources":["C:/Users/Ulyss/chimpswap/uniswap-interface-main/src/pages/Vote/VotePage.tsx"],"names":["React","useState","AutoColumn","styled","TYPE","StyledInternalLink","ExternalLink","RowFixed","RowBetween","CardSection","DataCard","ArrowLeft","ButtonPrimary","ProposalStatus","useProposalData","useUserVotesAsOfBlock","useUserDelegatee","DateTime","ReactMarkdown","VoteModal","JSBI","useActiveWeb3React","AVERAGE_BLOCK_TIME_IN_SECS","COMMON_CONTRACT_NAMES","UNI","ZERO_ADDRESS","isAddress","getEtherscanLink","ApplicationModal","useModalOpen","useToggleDelegateModal","useToggleVoteModal","useBlockNumber","DelegateModal","GreyCard","useTokenBalance","useCurrentBlockTimestamp","BigNumber","PageWrapper","ProposalInfo","theme","bg4","ArrowWrapper","text1","CardWrapper","div","StyledDataCard","bg1","ProgressWrapper","bg3","Progress","status","green1","red1","percentageString","MarkDownWrapper","WrapSmall","mediaWidth","upToSmall","DetailText","ProposerAddressLink","VotePage","match","params","id","chainId","account","proposalData","support","setSupport","showVoteModal","VOTE","toggleVoteModal","showDelegateModal","DELEGATE","toggleDelegateModal","currentTimestamp","currentBlock","endDate","fromSeconds","add","from","mul","endBlock","toNumber","undefined","now","local","totalVotes","forCount","againstCount","forPercentage","toFixed","againstPercentage","availableVotes","startBlock","showVotingButtons","greaterThan","raw","BigInt","uniBalance","userDelegatee","showLinkForUnlock","Boolean","notEqual","linkIfAddress","content","commonName","width","marginBottom","title","toLocaleString","DATETIME_FULL","gap","maximumFractionDigits","details","map","d","i","target","functionSig","callData","split","length","description","proposer"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { AutoColumn } from '../../components/Column'\nimport styled from 'styled-components'\n\nimport { RouteComponentProps } from 'react-router-dom'\nimport { TYPE, StyledInternalLink, ExternalLink } from '../../theme'\nimport { RowFixed, RowBetween } from '../../components/Row'\nimport { CardSection, DataCard } from '../../components/earn/styled'\nimport { ArrowLeft } from 'react-feather'\nimport { ButtonPrimary } from '../../components/Button'\nimport { ProposalStatus } from './styled'\nimport { useProposalData, useUserVotesAsOfBlock, ProposalData, useUserDelegatee } from '../../state/governance/hooks'\nimport { DateTime } from 'luxon'\nimport ReactMarkdown from 'react-markdown'\nimport VoteModal from '../../components/vote/VoteModal'\nimport { TokenAmount, JSBI } from '@uniswap/sdk'\nimport { useActiveWeb3React } from '../../hooks'\nimport { AVERAGE_BLOCK_TIME_IN_SECS, COMMON_CONTRACT_NAMES, UNI, ZERO_ADDRESS } from '../../constants'\nimport { isAddress, getEtherscanLink } from '../../utils'\nimport { ApplicationModal } from '../../state/application/actions'\nimport { useModalOpen, useToggleDelegateModal, useToggleVoteModal, useBlockNumber } from '../../state/application/hooks'\nimport DelegateModal from '../../components/vote/DelegateModal'\nimport { GreyCard } from '../../components/Card'\nimport { useTokenBalance } from '../../state/wallet/hooks'\nimport useCurrentBlockTimestamp from 'hooks/useCurrentBlockTimestamp'\nimport { BigNumber } from 'ethers'\n\nconst PageWrapper = styled(AutoColumn)`\n  width: 100%;\n`\n\nconst ProposalInfo = styled(AutoColumn)`\n  border: 1px solid ${({ theme }) => theme.bg4};\n  border-radius: 12px;\n  padding: 1.5rem;\n  position: relative;\n  max-width: 640px;\n  width: 100%;\n`\nconst ArrowWrapper = styled(StyledInternalLink)`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  height: 24px;\n  color: ${({ theme }) => theme.text1};\n\n  a {\n    color: ${({ theme }) => theme.text1};\n    text-decoration: none;\n  }\n  :hover {\n    text-decoration: none;\n  }\n`\nconst CardWrapper = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 12px;\n  width: 100%;\n`\n\nconst StyledDataCard = styled(DataCard)`\n  width: 100%;\n  background: none;\n  background-color: ${({ theme }) => theme.bg1};\n  height: fit-content;\n  z-index: 2;\n`\n\nconst ProgressWrapper = styled.div`\n  width: 100%;\n  margin-top: 1rem;\n  height: 4px;\n  border-radius: 4px;\n  background-color: ${({ theme }) => theme.bg3};\n  position: relative;\n`\n\nconst Progress = styled.div<{ status: 'for' | 'against'; percentageString?: string }>`\n  height: 4px;\n  border-radius: 4px;\n  background-color: ${({ theme, status }) => (status === 'for' ? theme.green1 : theme.red1)};\n  width: ${({ percentageString }) => percentageString};\n`\n\nconst MarkDownWrapper = styled.div`\n  max-width: 640px;\n  overflow: hidden;\n`\n\nconst WrapSmall = styled(RowBetween)`\n  ${({ theme }) => theme.mediaWidth.upToSmall`\n    align-items: flex-start;\n    flex-direction: column;\n  `};\n`\n\nconst DetailText = styled.div`\n  word-break: break-all;\n`\n\nconst ProposerAddressLink = styled(ExternalLink)`\n  word-break: break-all;\n`\n\nexport default function VotePage({\n  match: {\n    params: { id }\n  }\n}: RouteComponentProps<{ id: string }>) {\n  const { chainId, account } = useActiveWeb3React()\n\n  // get data for this specific proposal\n  const proposalData: ProposalData | undefined = useProposalData(id)\n\n  // update support based on button interactions\n  const [support, setSupport] = useState<boolean>(true)\n\n  // modal for casting votes\n  const showVoteModal = useModalOpen(ApplicationModal.VOTE)\n  const toggleVoteModal = useToggleVoteModal()\n\n  // toggle for showing delegation modal\n  const showDelegateModal = useModalOpen(ApplicationModal.DELEGATE)\n  const toggleDelegateModal = useToggleDelegateModal()\n\n  // get and format date from data\n  const currentTimestamp = useCurrentBlockTimestamp()\n  const currentBlock = useBlockNumber()\n  const endDate: DateTime | undefined =\n    proposalData && currentTimestamp && currentBlock\n      ? DateTime.fromSeconds(\n          currentTimestamp\n            .add(BigNumber.from(AVERAGE_BLOCK_TIME_IN_SECS).mul(BigNumber.from(proposalData.endBlock - currentBlock)))\n            .toNumber()\n        )\n      : undefined\n  const now: DateTime = DateTime.local()\n\n  // get total votes and format percentages for UI\n  const totalVotes: number | undefined = proposalData ? proposalData.forCount + proposalData.againstCount : undefined\n  const forPercentage: string =\n    proposalData && totalVotes ? ((proposalData.forCount * 100) / totalVotes).toFixed(0) + '%' : '0%'\n  const againstPercentage: string =\n    proposalData && totalVotes ? ((proposalData.againstCount * 100) / totalVotes).toFixed(0) + '%' : '0%'\n\n  // only count available votes as of the proposal start block\n  const availableVotes: TokenAmount | undefined = useUserVotesAsOfBlock(proposalData?.startBlock ?? undefined)\n\n  // only show voting if user has > 0 votes at proposal start block and proposal is active,\n  const showVotingButtons =\n    availableVotes &&\n    JSBI.greaterThan(availableVotes.raw, JSBI.BigInt(0)) &&\n    proposalData &&\n    proposalData.status === 'active'\n\n  const uniBalance: TokenAmount | undefined = useTokenBalance(account ?? undefined, chainId ? UNI[chainId] : undefined)\n  const userDelegatee: string | undefined = useUserDelegatee()\n\n  // in blurb link to home page if they are able to unlock\n  const showLinkForUnlock = Boolean(\n    uniBalance && JSBI.notEqual(uniBalance.raw, JSBI.BigInt(0)) && userDelegatee === ZERO_ADDRESS\n  )\n\n  // show links in propsoal details if content is an address\n  // if content is contract with common name, replace address with common name\n  const linkIfAddress = (content: string) => {\n    if (isAddress(content) && chainId) {\n      const commonName = COMMON_CONTRACT_NAMES[content] ?? content\n      return <ExternalLink href={getEtherscanLink(chainId, content, 'address')}>{commonName}</ExternalLink>\n    }\n    return <span>{content}</span>\n  }\n\n  return (\n    <PageWrapper gap=\"lg\" justify=\"center\">\n      <VoteModal isOpen={showVoteModal} onDismiss={toggleVoteModal} proposalId={proposalData?.id} support={support} />\n      <DelegateModal isOpen={showDelegateModal} onDismiss={toggleDelegateModal} title=\"Unlock Votes\" />\n      <ProposalInfo gap=\"lg\" justify=\"start\">\n        <RowBetween style={{ width: '100%' }}>\n          <ArrowWrapper to=\"/vote\">\n            <ArrowLeft size={20} /> All Proposals\n          </ArrowWrapper>\n          {proposalData && <ProposalStatus status={proposalData?.status ?? ''}>{proposalData?.status}</ProposalStatus>}\n        </RowBetween>\n        <AutoColumn gap=\"10px\" style={{ width: '100%' }}>\n          <TYPE.largeHeader style={{ marginBottom: '.5rem' }}>{proposalData?.title}</TYPE.largeHeader>\n          <RowBetween>\n            <TYPE.main>\n              {endDate && endDate < now\n                ? 'Voting ended ' + (endDate && endDate.toLocaleString(DateTime.DATETIME_FULL))\n                : proposalData\n                ? 'Voting ends approximately ' + (endDate && endDate.toLocaleString(DateTime.DATETIME_FULL))\n                : ''}\n            </TYPE.main>\n          </RowBetween>\n          {proposalData && proposalData.status === 'active' && !showVotingButtons && (\n            <GreyCard>\n              <TYPE.black>\n                Only UNI votes that were self delegated or delegated to another address before block{' '}\n                {proposalData.startBlock} are eligible for voting.{' '}\n                {showLinkForUnlock && (\n                  <span>\n                    <StyledInternalLink to=\"/vote\">Unlock voting</StyledInternalLink> to prepare for the next proposal.\n                  </span>\n                )}\n              </TYPE.black>\n            </GreyCard>\n          )}\n        </AutoColumn>\n        {showVotingButtons ? (\n          <RowFixed style={{ width: '100%', gap: '12px' }}>\n            <ButtonPrimary\n              padding=\"8px\"\n              borderRadius=\"8px\"\n              onClick={() => {\n                setSupport(true)\n                toggleVoteModal()\n              }}\n            >\n              Vote For\n            </ButtonPrimary>\n            <ButtonPrimary\n              padding=\"8px\"\n              borderRadius=\"8px\"\n              onClick={() => {\n                setSupport(false)\n                toggleVoteModal()\n              }}\n            >\n              Vote Against\n            </ButtonPrimary>\n          </RowFixed>\n        ) : (\n          ''\n        )}\n        <CardWrapper>\n          <StyledDataCard>\n            <CardSection>\n              <AutoColumn gap=\"md\">\n                <WrapSmall>\n                  <TYPE.black fontWeight={600}>For</TYPE.black>\n                  <TYPE.black fontWeight={600}>\n                    {' '}\n                    {proposalData?.forCount.toLocaleString(undefined, { maximumFractionDigits: 0 })}\n                  </TYPE.black>\n                </WrapSmall>\n              </AutoColumn>\n              <ProgressWrapper>\n                <Progress status={'for'} percentageString={forPercentage} />\n              </ProgressWrapper>\n            </CardSection>\n          </StyledDataCard>\n          <StyledDataCard>\n            <CardSection>\n              <AutoColumn gap=\"md\">\n                <WrapSmall>\n                  <TYPE.black fontWeight={600}>Against</TYPE.black>\n                  <TYPE.black fontWeight={600}>\n                    {proposalData?.againstCount.toLocaleString(undefined, { maximumFractionDigits: 0 })}\n                  </TYPE.black>\n                </WrapSmall>\n              </AutoColumn>\n              <ProgressWrapper>\n                <Progress status={'against'} percentageString={againstPercentage} />\n              </ProgressWrapper>\n            </CardSection>\n          </StyledDataCard>\n        </CardWrapper>\n        <AutoColumn gap=\"md\">\n          <TYPE.mediumHeader fontWeight={600}>Details</TYPE.mediumHeader>\n          {proposalData?.details?.map((d, i) => {\n            return (\n              <DetailText key={i}>\n                {i + 1}: {linkIfAddress(d.target)}.{d.functionSig}(\n                {d.callData.split(',').map((content, i) => {\n                  return (\n                    <span key={i}>\n                      {linkIfAddress(content)}\n                      {d.callData.split(',').length - 1 === i ? '' : ','}\n                    </span>\n                  )\n                })}\n                )\n              </DetailText>\n            )\n          })}\n        </AutoColumn>\n        <AutoColumn gap=\"md\">\n          <TYPE.mediumHeader fontWeight={600}>Description</TYPE.mediumHeader>\n          <MarkDownWrapper>\n            <ReactMarkdown source={proposalData?.description} />\n          </MarkDownWrapper>\n        </AutoColumn>\n        <AutoColumn gap=\"md\">\n          <TYPE.mediumHeader fontWeight={600}>Proposer</TYPE.mediumHeader>\n          <ProposerAddressLink\n            href={proposalData?.proposer && chainId ? getEtherscanLink(chainId, proposalData?.proposer, 'address') : ''}\n          >\n            <ReactMarkdown source={proposalData?.proposer} />\n          </ProposerAddressLink>\n        </AutoColumn>\n      </ProposalInfo>\n    </PageWrapper>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}