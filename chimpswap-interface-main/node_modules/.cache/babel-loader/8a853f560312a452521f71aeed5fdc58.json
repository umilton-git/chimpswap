{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ulyss\\\\chimpswap\\\\chimpswap-interface-main\\\\src\\\\components\\\\SearchModal\\\\ImportList.tsx\";\nimport React, { useState, useCallback } from 'react';\nimport styled from 'styled-components';\nimport ReactGA from 'react-ga';\nimport { TYPE, CloseIcon } from 'theme';\nimport Card from 'components/Card';\nimport { AutoColumn } from 'components/Column';\nimport { RowBetween, RowFixed, AutoRow } from 'components/Row';\nimport { ArrowLeft, AlertTriangle } from 'react-feather';\nimport useTheme from 'hooks/useTheme';\nimport { transparentize } from 'polished';\nimport { ButtonPrimary } from 'components/Button';\nimport { SectionBreak } from 'components/swap/styleds';\nimport { ExternalLink } from '../../theme/components';\nimport ListLogo from 'components/ListLogo';\nimport { PaddedColumn, Checkbox, TextDot } from './styleds';\nimport { useDispatch } from 'react-redux';\nimport { useFetchListCallback } from 'hooks/useFetchListCallback';\nimport { removeList, enableList } from 'state/lists/actions';\nimport { CurrencyModalView } from './CurrencySearchModal';\nimport { useAllLists } from 'state/lists/hooks';\nconst Wrapper = styled.div`\n  position: relative;\n  width: 100%;\n  overflow: auto;\n`;\nexport function ImportList({\n  listURL,\n  list,\n  setModalView,\n  onDismiss\n}) {\n  var _lists$listURL;\n\n  const theme = useTheme();\n  const dispatch = useDispatch(); // user must accept\n\n  const [confirmed, setConfirmed] = useState(false);\n  const lists = useAllLists();\n  const fetchList = useFetchListCallback(); // monitor is list is loading\n\n  const adding = Boolean((_lists$listURL = lists[listURL]) === null || _lists$listURL === void 0 ? void 0 : _lists$listURL.loadingRequestId);\n  const [addError, setAddError] = useState(null);\n  const handleAddList = useCallback(() => {\n    if (adding) return;\n    setAddError(null);\n    fetchList(listURL).then(() => {\n      ReactGA.event({\n        category: 'Lists',\n        action: 'Add List',\n        label: listURL\n      }); // turn list on\n\n      dispatch(enableList(listURL)); // go back to lists\n\n      setModalView(CurrencyModalView.manage);\n    }).catch(error => {\n      ReactGA.event({\n        category: 'Lists',\n        action: 'Add List Failed',\n        label: listURL\n      });\n      setAddError(error.message);\n      dispatch(removeList(listURL));\n    });\n  }, [adding, dispatch, fetchList, listURL, setModalView]);\n  return /*#__PURE__*/React.createElement(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(PaddedColumn, {\n    gap: \"14px\",\n    style: {\n      width: '100%',\n      flex: '1 1'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(RowBetween, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ArrowLeft, {\n    style: {\n      cursor: 'pointer'\n    },\n    onClick: () => setModalView(CurrencyModalView.manage),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TYPE.mediumHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, \"Import List\"), /*#__PURE__*/React.createElement(CloseIcon, {\n    onClick: onDismiss,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(SectionBreak, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(PaddedColumn, {\n    gap: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(AutoColumn, {\n    gap: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    backgroundColor: theme.bg2,\n    padding: \"12px 20px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(RowBetween, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(RowFixed, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 15\n    }\n  }, list.logoURI && /*#__PURE__*/React.createElement(ListLogo, {\n    logoURI: list.logoURI,\n    size: \"40px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 34\n    }\n  }), /*#__PURE__*/React.createElement(AutoColumn, {\n    gap: \"sm\",\n    style: {\n      marginLeft: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(RowFixed, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.body, {\n    fontWeight: 600,\n    mr: \"6px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 21\n    }\n  }, list.name), /*#__PURE__*/React.createElement(TextDot, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(TYPE.main, {\n    fontSize: '16px',\n    ml: \"6px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 21\n    }\n  }, list.tokens.length, \" tokens\")), /*#__PURE__*/React.createElement(ExternalLink, {\n    href: `https://tokenlists.org/token-list?url=${listURL}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.main, {\n    fontSize: '12px',\n    color: theme.blue1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 21\n    }\n  }, listURL)))))), /*#__PURE__*/React.createElement(Card, {\n    style: {\n      backgroundColor: transparentize(0.8, theme.red1)\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(AutoColumn, {\n    justify: \"center\",\n    style: {\n      textAlign: 'center',\n      gap: '16px',\n      marginBottom: '12px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(AlertTriangle, {\n    stroke: theme.red1,\n    size: 32,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TYPE.body, {\n    fontWeight: 500,\n    fontSize: 20,\n    color: theme.red1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 15\n    }\n  }, \"Import at your own risk\", ' ')), /*#__PURE__*/React.createElement(AutoColumn, {\n    style: {\n      textAlign: 'center',\n      gap: '16px',\n      marginBottom: '12px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.body, {\n    fontWeight: 500,\n    color: theme.red1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 15\n    }\n  }, \"By adding this list you are implicitly trusting that the data is correct. Anyone can create a list, including creating fake versions of existing lists and lists that claim to represent projects that do not have one.\"), /*#__PURE__*/React.createElement(TYPE.body, {\n    fontWeight: 600,\n    color: theme.red1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 15\n    }\n  }, \"If you purchase a token from this list, you may not be able to sell it back.\")), /*#__PURE__*/React.createElement(AutoRow, {\n    justify: \"center\",\n    style: {\n      cursor: 'pointer'\n    },\n    onClick: () => setConfirmed(!confirmed),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    name: \"confirmed\",\n    type: \"checkbox\",\n    checked: confirmed,\n    onChange: () => setConfirmed(!confirmed),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TYPE.body, {\n    ml: \"10px\",\n    fontSize: \"16px\",\n    color: theme.red1,\n    fontWeight: 500,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 15\n    }\n  }, \"I understand\"))), /*#__PURE__*/React.createElement(ButtonPrimary, {\n    disabled: !confirmed,\n    altDisabledStyle: true,\n    borderRadius: \"20px\",\n    padding: \"10px 1rem\",\n    onClick: handleAddList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 11\n    }\n  }, \"Import\"), addError ? /*#__PURE__*/React.createElement(TYPE.error, {\n    title: addError,\n    style: {\n      textOverflow: 'ellipsis',\n      overflow: 'hidden'\n    },\n    error: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }\n  }, addError) : null)));\n}","map":{"version":3,"sources":["C:/Users/Ulyss/chimpswap/chimpswap-interface-main/src/components/SearchModal/ImportList.tsx"],"names":["React","useState","useCallback","styled","ReactGA","TYPE","CloseIcon","Card","AutoColumn","RowBetween","RowFixed","AutoRow","ArrowLeft","AlertTriangle","useTheme","transparentize","ButtonPrimary","SectionBreak","ExternalLink","ListLogo","PaddedColumn","Checkbox","TextDot","useDispatch","useFetchListCallback","removeList","enableList","CurrencyModalView","useAllLists","Wrapper","div","ImportList","listURL","list","setModalView","onDismiss","theme","dispatch","confirmed","setConfirmed","lists","fetchList","adding","Boolean","loadingRequestId","addError","setAddError","handleAddList","then","event","category","action","label","manage","catch","error","message","width","flex","cursor","bg2","logoURI","marginLeft","name","tokens","length","blue1","backgroundColor","red1","textAlign","gap","marginBottom","textOverflow","overflow"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport ReactGA from 'react-ga'\nimport { TYPE, CloseIcon } from 'theme'\nimport Card from 'components/Card'\nimport { AutoColumn } from 'components/Column'\nimport { RowBetween, RowFixed, AutoRow } from 'components/Row'\nimport { ArrowLeft, AlertTriangle } from 'react-feather'\nimport useTheme from 'hooks/useTheme'\nimport { transparentize } from 'polished'\nimport { ButtonPrimary } from 'components/Button'\nimport { SectionBreak } from 'components/swap/styleds'\nimport { ExternalLink } from '../../theme/components'\nimport ListLogo from 'components/ListLogo'\nimport { PaddedColumn, Checkbox, TextDot } from './styleds'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useDispatch } from 'react-redux'\nimport { AppDispatch } from 'state'\nimport { useFetchListCallback } from 'hooks/useFetchListCallback'\nimport { removeList, enableList } from 'state/lists/actions'\nimport { CurrencyModalView } from './CurrencySearchModal'\nimport { useAllLists } from 'state/lists/hooks'\n\nconst Wrapper = styled.div`\n  position: relative;\n  width: 100%;\n  overflow: auto;\n`\n\ninterface ImportProps {\n  listURL: string\n  list: TokenList\n  onDismiss: () => void\n  setModalView: (view: CurrencyModalView) => void\n}\n\nexport function ImportList({ listURL, list, setModalView, onDismiss }: ImportProps) {\n  const theme = useTheme()\n  const dispatch = useDispatch<AppDispatch>()\n\n  // user must accept\n  const [confirmed, setConfirmed] = useState(false)\n\n  const lists = useAllLists()\n  const fetchList = useFetchListCallback()\n\n  // monitor is list is loading\n  const adding = Boolean(lists[listURL]?.loadingRequestId)\n  const [addError, setAddError] = useState<string | null>(null)\n\n  const handleAddList = useCallback(() => {\n    if (adding) return\n    setAddError(null)\n    fetchList(listURL)\n      .then(() => {\n        ReactGA.event({\n          category: 'Lists',\n          action: 'Add List',\n          label: listURL\n        })\n\n        // turn list on\n        dispatch(enableList(listURL))\n        // go back to lists\n        setModalView(CurrencyModalView.manage)\n      })\n      .catch(error => {\n        ReactGA.event({\n          category: 'Lists',\n          action: 'Add List Failed',\n          label: listURL\n        })\n        setAddError(error.message)\n        dispatch(removeList(listURL))\n      })\n  }, [adding, dispatch, fetchList, listURL, setModalView])\n\n  return (\n    <Wrapper>\n      <PaddedColumn gap=\"14px\" style={{ width: '100%', flex: '1 1' }}>\n        <RowBetween>\n          <ArrowLeft style={{ cursor: 'pointer' }} onClick={() => setModalView(CurrencyModalView.manage)} />\n          <TYPE.mediumHeader>Import List</TYPE.mediumHeader>\n          <CloseIcon onClick={onDismiss} />\n        </RowBetween>\n      </PaddedColumn>\n      <SectionBreak />\n      <PaddedColumn gap=\"md\">\n        <AutoColumn gap=\"md\">\n          <Card backgroundColor={theme.bg2} padding=\"12px 20px\">\n            <RowBetween>\n              <RowFixed>\n                {list.logoURI && <ListLogo logoURI={list.logoURI} size=\"40px\" />}\n                <AutoColumn gap=\"sm\" style={{ marginLeft: '20px' }}>\n                  <RowFixed>\n                    <TYPE.body fontWeight={600} mr=\"6px\">\n                      {list.name}\n                    </TYPE.body>\n                    <TextDot />\n                    <TYPE.main fontSize={'16px'} ml=\"6px\">\n                      {list.tokens.length} tokens\n                    </TYPE.main>\n                  </RowFixed>\n                  <ExternalLink href={`https://tokenlists.org/token-list?url=${listURL}`}>\n                    <TYPE.main fontSize={'12px'} color={theme.blue1}>\n                      {listURL}\n                    </TYPE.main>\n                  </ExternalLink>\n                </AutoColumn>\n              </RowFixed>\n            </RowBetween>\n          </Card>\n          <Card style={{ backgroundColor: transparentize(0.8, theme.red1) }}>\n            <AutoColumn justify=\"center\" style={{ textAlign: 'center', gap: '16px', marginBottom: '12px' }}>\n              <AlertTriangle stroke={theme.red1} size={32} />\n              <TYPE.body fontWeight={500} fontSize={20} color={theme.red1}>\n                Import at your own risk{' '}\n              </TYPE.body>\n            </AutoColumn>\n\n            <AutoColumn style={{ textAlign: 'center', gap: '16px', marginBottom: '12px' }}>\n              <TYPE.body fontWeight={500} color={theme.red1}>\n                By adding this list you are implicitly trusting that the data is correct. Anyone can create a list,\n                including creating fake versions of existing lists and lists that claim to represent projects that do\n                not have one.\n              </TYPE.body>\n              <TYPE.body fontWeight={600} color={theme.red1}>\n                If you purchase a token from this list, you may not be able to sell it back.\n              </TYPE.body>\n            </AutoColumn>\n            <AutoRow justify=\"center\" style={{ cursor: 'pointer' }} onClick={() => setConfirmed(!confirmed)}>\n              <Checkbox\n                name=\"confirmed\"\n                type=\"checkbox\"\n                checked={confirmed}\n                onChange={() => setConfirmed(!confirmed)}\n              />\n              <TYPE.body ml=\"10px\" fontSize=\"16px\" color={theme.red1} fontWeight={500}>\n                I understand\n              </TYPE.body>\n            </AutoRow>\n          </Card>\n\n          <ButtonPrimary\n            disabled={!confirmed}\n            altDisabledStyle={true}\n            borderRadius=\"20px\"\n            padding=\"10px 1rem\"\n            onClick={handleAddList}\n          >\n            Import\n          </ButtonPrimary>\n          {addError ? (\n            <TYPE.error title={addError} style={{ textOverflow: 'ellipsis', overflow: 'hidden' }} error>\n              {addError}\n            </TYPE.error>\n          ) : null}\n        </AutoColumn>\n        {/* </Card> */}\n      </PaddedColumn>\n    </Wrapper>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}