{"ast":null,"code":"'use strict';\n\nconst {\n  names\n} = require('multibase/src/constants');\n\nconst {\n  TextDecoder\n} = require('web-encoding');\n\nconst utf8Decoder = new TextDecoder('utf8');\n/**\n * Turns a `Uint8Array` into a string.\n *\n * Supports `utf8` and any encoding supported by the multibase module\n *\n * @param {Uint8Array} buf The array to turn into a string\n * @param {String} [encoding=utf8] The encoding to use\n * @returns {String}\n * @see {@link https://www.npmjs.com/package/multibase|multibase} for supported encodings other than `utf8`\n */\n\nfunction toString(buf, encoding = 'utf8') {\n  if (encoding === 'utf8' || encoding === 'utf-8') {\n    return utf8Decoder.decode(buf);\n  }\n\n  const codec = names[encoding];\n\n  if (!codec) {\n    throw new Error('Unknown base');\n  }\n\n  return codec.encode(buf);\n}\n\nmodule.exports = toString;","map":{"version":3,"sources":["C:/Users/Ulyss/chimpswap/chimpswap-interface-main/node_modules/multicodec/node_modules/uint8arrays/to-string.js"],"names":["names","require","TextDecoder","utf8Decoder","toString","buf","encoding","decode","codec","Error","encode","module","exports"],"mappings":"AAAA;;AAEA,MAAM;AAAEA,EAAAA;AAAF,IAAYC,OAAO,CAAC,yBAAD,CAAzB;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAkBD,OAAO,CAAC,cAAD,CAA/B;;AACA,MAAME,WAAW,GAAG,IAAID,WAAJ,CAAgB,MAAhB,CAApB;AAEA;;;;;;;;;;;AAUA,SAASE,QAAT,CAAmBC,GAAnB,EAAwBC,QAAQ,GAAG,MAAnC,EAA2C;AACzC,MAAIA,QAAQ,KAAK,MAAb,IAAuBA,QAAQ,KAAK,OAAxC,EAAiD;AAC/C,WAAOH,WAAW,CAACI,MAAZ,CAAmBF,GAAnB,CAAP;AACD;;AAED,QAAMG,KAAK,GAAGR,KAAK,CAACM,QAAD,CAAnB;;AAEA,MAAI,CAACE,KAAL,EAAY;AACV,UAAM,IAAIC,KAAJ,CAAU,cAAV,CAAN;AACD;;AAED,SAAOD,KAAK,CAACE,MAAN,CAAaL,GAAb,CAAP;AACD;;AAEDM,MAAM,CAACC,OAAP,GAAiBR,QAAjB","sourcesContent":["'use strict'\n\nconst { names } = require('multibase/src/constants')\nconst { TextDecoder } = require('web-encoding')\nconst utf8Decoder = new TextDecoder('utf8')\n\n/**\n * Turns a `Uint8Array` into a string.\n *\n * Supports `utf8` and any encoding supported by the multibase module\n *\n * @param {Uint8Array} buf The array to turn into a string\n * @param {String} [encoding=utf8] The encoding to use\n * @returns {String}\n * @see {@link https://www.npmjs.com/package/multibase|multibase} for supported encodings other than `utf8`\n */\nfunction toString (buf, encoding = 'utf8') {\n  if (encoding === 'utf8' || encoding === 'utf-8') {\n    return utf8Decoder.decode(buf)\n  }\n\n  const codec = names[encoding]\n\n  if (!codec) {\n    throw new Error('Unknown base')\n  }\n\n  return codec.encode(buf)\n}\n\nmodule.exports = toString\n"]},"metadata":{},"sourceType":"script"}