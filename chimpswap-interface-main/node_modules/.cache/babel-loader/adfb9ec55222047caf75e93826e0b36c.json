{"ast":null,"code":"'use strict';\n\nconst varint = require('varint');\n\nconst uint8ArrayToString = require('uint8arrays/to-string');\n\nconst uint8ArrayFromString = require('uint8arrays/from-string');\n\nmodule.exports = {\n  numberToUint8Array,\n  uint8ArrayToNumber,\n  varintUint8ArrayEncode,\n  varintUint8ArrayDecode,\n  varintEncode\n};\n\nfunction uint8ArrayToNumber(buf) {\n  return parseInt(uint8ArrayToString(buf, 'base16'), 16);\n}\n\nfunction numberToUint8Array(num) {\n  let hexString = num.toString(16);\n\n  if (hexString.length % 2 === 1) {\n    hexString = '0' + hexString;\n  }\n\n  return uint8ArrayFromString(hexString, 'base16');\n}\n\nfunction varintUint8ArrayEncode(input) {\n  return Uint8Array.from(varint.encode(uint8ArrayToNumber(input)));\n}\n\nfunction varintUint8ArrayDecode(input) {\n  return numberToUint8Array(varint.decode(input));\n}\n\nfunction varintEncode(num) {\n  return Uint8Array.from(varint.encode(num));\n}","map":{"version":3,"sources":["C:/Users/Ulyss/chimpswap/uniswap-interface-main/node_modules/multicodec/src/util.js"],"names":["varint","require","uint8ArrayToString","uint8ArrayFromString","module","exports","numberToUint8Array","uint8ArrayToNumber","varintUint8ArrayEncode","varintUint8ArrayDecode","varintEncode","buf","parseInt","num","hexString","toString","length","input","Uint8Array","from","encode","decode"],"mappings":"AAAA;;AAEA,MAAMA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AACA,MAAMC,kBAAkB,GAAGD,OAAO,CAAC,uBAAD,CAAlC;;AACA,MAAME,oBAAoB,GAAGF,OAAO,CAAC,yBAAD,CAApC;;AAEAG,MAAM,CAACC,OAAP,GAAiB;AACfC,EAAAA,kBADe;AAEfC,EAAAA,kBAFe;AAGfC,EAAAA,sBAHe;AAIfC,EAAAA,sBAJe;AAKfC,EAAAA;AALe,CAAjB;;AAQA,SAASH,kBAAT,CAA6BI,GAA7B,EAAkC;AAChC,SAAOC,QAAQ,CAACV,kBAAkB,CAACS,GAAD,EAAM,QAAN,CAAnB,EAAoC,EAApC,CAAf;AACD;;AAED,SAASL,kBAAT,CAA6BO,GAA7B,EAAkC;AAChC,MAAIC,SAAS,GAAGD,GAAG,CAACE,QAAJ,CAAa,EAAb,CAAhB;;AACA,MAAID,SAAS,CAACE,MAAV,GAAmB,CAAnB,KAAyB,CAA7B,EAAgC;AAC9BF,IAAAA,SAAS,GAAG,MAAMA,SAAlB;AACD;;AACD,SAAOX,oBAAoB,CAACW,SAAD,EAAY,QAAZ,CAA3B;AACD;;AAED,SAASN,sBAAT,CAAiCS,KAAjC,EAAwC;AACtC,SAAOC,UAAU,CAACC,IAAX,CAAgBnB,MAAM,CAACoB,MAAP,CAAcb,kBAAkB,CAACU,KAAD,CAAhC,CAAhB,CAAP;AACD;;AAED,SAASR,sBAAT,CAAiCQ,KAAjC,EAAwC;AACtC,SAAOX,kBAAkB,CAACN,MAAM,CAACqB,MAAP,CAAcJ,KAAd,CAAD,CAAzB;AACD;;AAED,SAASP,YAAT,CAAuBG,GAAvB,EAA4B;AAC1B,SAAOK,UAAU,CAACC,IAAX,CAAgBnB,MAAM,CAACoB,MAAP,CAAcP,GAAd,CAAhB,CAAP;AACD","sourcesContent":["'use strict'\n\nconst varint = require('varint')\nconst uint8ArrayToString = require('uint8arrays/to-string')\nconst uint8ArrayFromString = require('uint8arrays/from-string')\n\nmodule.exports = {\n  numberToUint8Array,\n  uint8ArrayToNumber,\n  varintUint8ArrayEncode,\n  varintUint8ArrayDecode,\n  varintEncode\n}\n\nfunction uint8ArrayToNumber (buf) {\n  return parseInt(uint8ArrayToString(buf, 'base16'), 16)\n}\n\nfunction numberToUint8Array (num) {\n  let hexString = num.toString(16)\n  if (hexString.length % 2 === 1) {\n    hexString = '0' + hexString\n  }\n  return uint8ArrayFromString(hexString, 'base16')\n}\n\nfunction varintUint8ArrayEncode (input) {\n  return Uint8Array.from(varint.encode(uint8ArrayToNumber(input)))\n}\n\nfunction varintUint8ArrayDecode (input) {\n  return numberToUint8Array(varint.decode(input))\n}\n\nfunction varintEncode (num) {\n  return Uint8Array.from(varint.encode(num))\n}\n"]},"metadata":{},"sourceType":"script"}