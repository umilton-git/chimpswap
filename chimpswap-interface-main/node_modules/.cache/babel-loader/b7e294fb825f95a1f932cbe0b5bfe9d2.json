{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ulyss\\\\chimpswap\\\\uniswap-interface-main\\\\src\\\\components\\\\swap\\\\AdvancedSwapDetails.tsx\";\nimport { TradeType } from '@uniswap/sdk';\nimport React, { useContext } from 'react';\nimport styled, { ThemeContext } from 'styled-components';\nimport { Field } from '../../state/swap/actions';\nimport { useUserSlippageTolerance } from '../../state/user/hooks';\nimport { TYPE, ExternalLink } from '../../theme';\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown } from '../../utils/prices';\nimport { AutoColumn } from '../Column';\nimport QuestionHelper from '../QuestionHelper';\nimport { RowBetween, RowFixed } from '../Row';\nimport FormattedPriceImpact from './FormattedPriceImpact';\nimport SwapRoute from './SwapRoute';\nconst InfoLink = styled(ExternalLink)`\n  width: 100%;\n  border: 1px solid ${({\n  theme\n}) => theme.bg3};\n  padding: 6px 6px;\n  border-radius: 8px;\n  text-align: center;\n  font-size: 14px;\n  color: ${({\n  theme\n}) => theme.text1};\n`;\n\nfunction TradeSummary({\n  trade,\n  allowedSlippage\n}) {\n  var _ref, _slippageAdjustedAmou, _ref2, _slippageAdjustedAmou2;\n\n  const theme = useContext(ThemeContext);\n  const {\n    priceImpactWithoutFee,\n    realizedLPFee\n  } = computeTradePriceBreakdown(trade);\n  const isExactIn = trade.tradeType === TradeType.EXACT_INPUT;\n  const slippageAdjustedAmounts = computeSlippageAdjustedAmounts(trade, allowedSlippage);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AutoColumn, {\n    style: {\n      padding: '0 16px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(RowBetween, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(RowFixed, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.black, {\n    fontSize: 14,\n    fontWeight: 400,\n    color: theme.text2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, isExactIn ? 'Minimum received' : 'Maximum sold'), /*#__PURE__*/React.createElement(QuestionHelper, {\n    text: \"Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(RowFixed, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.black, {\n    color: theme.text1,\n    fontSize: 14,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, isExactIn ? (_ref = `${(_slippageAdjustedAmou = slippageAdjustedAmounts[Field.OUTPUT]) === null || _slippageAdjustedAmou === void 0 ? void 0 : _slippageAdjustedAmou.toSignificant(4)} ${trade.outputAmount.currency.symbol}`) !== null && _ref !== void 0 ? _ref : '-' : (_ref2 = `${(_slippageAdjustedAmou2 = slippageAdjustedAmounts[Field.INPUT]) === null || _slippageAdjustedAmou2 === void 0 ? void 0 : _slippageAdjustedAmou2.toSignificant(4)} ${trade.inputAmount.currency.symbol}`) !== null && _ref2 !== void 0 ? _ref2 : '-'))), /*#__PURE__*/React.createElement(RowBetween, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(RowFixed, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.black, {\n    fontSize: 14,\n    fontWeight: 400,\n    color: theme.text2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, \"Price Impact\"), /*#__PURE__*/React.createElement(QuestionHelper, {\n    text: \"The difference between the market price and estimated price due to trade size.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(FormattedPriceImpact, {\n    priceImpact: priceImpactWithoutFee,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(RowBetween, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(RowFixed, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.black, {\n    fontSize: 14,\n    fontWeight: 400,\n    color: theme.text2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, \"Liquidity Provider Fee\"), /*#__PURE__*/React.createElement(QuestionHelper, {\n    text: \"A portion of each trade (0.30%) goes to liquidity providers as a protocol incentive.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(TYPE.black, {\n    fontSize: 14,\n    color: theme.text1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, realizedLPFee ? `${realizedLPFee.toSignificant(4)} ${trade.inputAmount.currency.symbol}` : '-'))));\n}\n\nexport function AdvancedSwapDetails({\n  trade\n}) {\n  const theme = useContext(ThemeContext);\n  const [allowedSlippage] = useUserSlippageTolerance();\n  const showRoute = Boolean(trade && trade.route.path.length > 2);\n  return /*#__PURE__*/React.createElement(AutoColumn, {\n    gap: \"0px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  }, trade && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TradeSummary, {\n    trade: trade,\n    allowedSlippage: allowedSlippage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }), showRoute && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(RowBetween, {\n    style: {\n      padding: '0 16px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.black, {\n    fontSize: 14,\n    fontWeight: 400,\n    color: theme.text2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 19\n    }\n  }, \"Route\"), /*#__PURE__*/React.createElement(QuestionHelper, {\n    text: \"Routing through these tokens resulted in the best price for your trade.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(SwapRoute, {\n    trade: trade,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }))), !showRoute && /*#__PURE__*/React.createElement(AutoColumn, {\n    style: {\n      padding: '12px 16px 0 16px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InfoLink, {\n    href: 'https://info.uniswap.org/pair/' + trade.route.pairs[0].liquidityToken.address,\n    target: \"_blank\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 15\n    }\n  }, \"View pair analytics \\u2197\"))));\n}","map":{"version":3,"sources":["C:/Users/Ulyss/chimpswap/uniswap-interface-main/src/components/swap/AdvancedSwapDetails.tsx"],"names":["TradeType","React","useContext","styled","ThemeContext","Field","useUserSlippageTolerance","TYPE","ExternalLink","computeSlippageAdjustedAmounts","computeTradePriceBreakdown","AutoColumn","QuestionHelper","RowBetween","RowFixed","FormattedPriceImpact","SwapRoute","InfoLink","theme","bg3","text1","TradeSummary","trade","allowedSlippage","priceImpactWithoutFee","realizedLPFee","isExactIn","tradeType","EXACT_INPUT","slippageAdjustedAmounts","padding","text2","OUTPUT","toSignificant","outputAmount","currency","symbol","INPUT","inputAmount","AdvancedSwapDetails","showRoute","Boolean","route","path","length","display","alignItems","pairs","liquidityToken","address"],"mappings":"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","sourcesContent":["import { Trade, TradeType } from '@uniswap/sdk'\nimport React, { useContext } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\nimport { Field } from '../../state/swap/actions'\nimport { useUserSlippageTolerance } from '../../state/user/hooks'\nimport { TYPE, ExternalLink } from '../../theme'\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown } from '../../utils/prices'\nimport { AutoColumn } from '../Column'\nimport QuestionHelper from '../QuestionHelper'\nimport { RowBetween, RowFixed } from '../Row'\nimport FormattedPriceImpact from './FormattedPriceImpact'\nimport SwapRoute from './SwapRoute'\n\nconst InfoLink = styled(ExternalLink)`\n  width: 100%;\n  border: 1px solid ${({ theme }) => theme.bg3};\n  padding: 6px 6px;\n  border-radius: 8px;\n  text-align: center;\n  font-size: 14px;\n  color: ${({ theme }) => theme.text1};\n`\n\nfunction TradeSummary({ trade, allowedSlippage }: { trade: Trade; allowedSlippage: number }) {\n  const theme = useContext(ThemeContext)\n  const { priceImpactWithoutFee, realizedLPFee } = computeTradePriceBreakdown(trade)\n  const isExactIn = trade.tradeType === TradeType.EXACT_INPUT\n  const slippageAdjustedAmounts = computeSlippageAdjustedAmounts(trade, allowedSlippage)\n\n  return (\n    <>\n      <AutoColumn style={{ padding: '0 16px' }}>\n        <RowBetween>\n          <RowFixed>\n            <TYPE.black fontSize={14} fontWeight={400} color={theme.text2}>\n              {isExactIn ? 'Minimum received' : 'Maximum sold'}\n            </TYPE.black>\n            <QuestionHelper text=\"Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.\" />\n          </RowFixed>\n          <RowFixed>\n            <TYPE.black color={theme.text1} fontSize={14}>\n              {isExactIn\n                ? `${slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4)} ${trade.outputAmount.currency.symbol}` ??\n                  '-'\n                : `${slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4)} ${trade.inputAmount.currency.symbol}` ??\n                  '-'}\n            </TYPE.black>\n          </RowFixed>\n        </RowBetween>\n        <RowBetween>\n          <RowFixed>\n            <TYPE.black fontSize={14} fontWeight={400} color={theme.text2}>\n              Price Impact\n            </TYPE.black>\n            <QuestionHelper text=\"The difference between the market price and estimated price due to trade size.\" />\n          </RowFixed>\n          <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\n        </RowBetween>\n\n        <RowBetween>\n          <RowFixed>\n            <TYPE.black fontSize={14} fontWeight={400} color={theme.text2}>\n              Liquidity Provider Fee\n            </TYPE.black>\n            <QuestionHelper text=\"A portion of each trade (0.30%) goes to liquidity providers as a protocol incentive.\" />\n          </RowFixed>\n          <TYPE.black fontSize={14} color={theme.text1}>\n            {realizedLPFee ? `${realizedLPFee.toSignificant(4)} ${trade.inputAmount.currency.symbol}` : '-'}\n          </TYPE.black>\n        </RowBetween>\n      </AutoColumn>\n    </>\n  )\n}\n\nexport interface AdvancedSwapDetailsProps {\n  trade?: Trade\n}\n\nexport function AdvancedSwapDetails({ trade }: AdvancedSwapDetailsProps) {\n  const theme = useContext(ThemeContext)\n\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  const showRoute = Boolean(trade && trade.route.path.length > 2)\n\n  return (\n    <AutoColumn gap=\"0px\">\n      {trade && (\n        <>\n          <TradeSummary trade={trade} allowedSlippage={allowedSlippage} />\n          {showRoute && (\n            <>\n              <RowBetween style={{ padding: '0 16px' }}>\n                <span style={{ display: 'flex', alignItems: 'center' }}>\n                  <TYPE.black fontSize={14} fontWeight={400} color={theme.text2}>\n                    Route\n                  </TYPE.black>\n                  <QuestionHelper text=\"Routing through these tokens resulted in the best price for your trade.\" />\n                </span>\n                <SwapRoute trade={trade} />\n              </RowBetween>\n            </>\n          )}\n          {!showRoute && (\n            <AutoColumn style={{ padding: '12px 16px 0 16px' }}>\n              <InfoLink\n                href={'https://info.uniswap.org/pair/' + trade.route.pairs[0].liquidityToken.address}\n                target=\"_blank\"\n              >\n                View pair analytics ↗\n              </InfoLink>\n            </AutoColumn>\n          )}\n        </>\n      )}\n    </AutoColumn>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}