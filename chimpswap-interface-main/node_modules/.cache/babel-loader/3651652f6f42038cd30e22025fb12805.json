{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ulyss\\\\chimpswap\\\\uniswap-interface-main\\\\src\\\\pages\\\\Pool\\\\index.tsx\";\nimport React, { useContext, useMemo } from 'react';\nimport styled, { ThemeContext } from 'styled-components';\nimport { JSBI } from '@uniswap/sdk';\nimport { Link } from 'react-router-dom';\nimport { SwapPoolTabs } from '../../components/NavigationTabs';\nimport FullPositionCard from '../../components/PositionCard';\nimport { useUserHasLiquidityInAllTokens } from '../../data/V1';\nimport { useTokenBalancesWithLoadingIndicator } from '../../state/wallet/hooks';\nimport { StyledInternalLink, ExternalLink, TYPE, HideSmall } from '../../theme';\nimport { Text } from 'rebass';\nimport Card from '../../components/Card';\nimport { RowBetween, RowFixed } from '../../components/Row';\nimport { ButtonPrimary, ButtonSecondary } from '../../components/Button';\nimport { AutoColumn } from '../../components/Column';\nimport { useActiveWeb3React } from '../../hooks';\nimport { usePairs } from '../../data/Reserves';\nimport { toV2LiquidityToken, useTrackedTokenPairs } from '../../state/user/hooks';\nimport { Dots } from '../../components/swap/styleds';\nimport { CardSection, DataCard, CardNoise, CardBGImage } from '../../components/earn/styled';\nimport { useStakingInfo } from '../../state/stake/hooks';\nimport { BIG_INT_ZERO } from '../../constants';\nconst PageWrapper = styled(AutoColumn)`\n  max-width: 640px;\n  width: 100%;\n`;\nconst VoteCard = styled(DataCard)`\n  background: radial-gradient(76.02% 75.41% at 1.84% 0%, #27ae60 0%, #000000 100%);\n  overflow: hidden;\n`;\nconst TitleRow = styled(RowBetween)`\n  ${({\n  theme\n}) => theme.mediaWidth.upToSmall`\n    flex-wrap: wrap;\n    gap: 12px;\n    width: 100%;\n    flex-direction: column-reverse;\n  `};\n`;\nconst ButtonRow = styled(RowFixed)`\n  gap: 8px;\n  ${({\n  theme\n}) => theme.mediaWidth.upToSmall`\n    width: 100%;\n    flex-direction: row-reverse;\n    justify-content: space-between;\n  `};\n`;\nconst ResponsiveButtonPrimary = styled(ButtonPrimary)`\n  width: fit-content;\n  ${({\n  theme\n}) => theme.mediaWidth.upToSmall`\n    width: 48%;\n  `};\n`;\nconst ResponsiveButtonSecondary = styled(ButtonSecondary)`\n  width: fit-content;\n  ${({\n  theme\n}) => theme.mediaWidth.upToSmall`\n    width: 48%;\n  `};\n`;\nconst EmptyProposals = styled.div`\n  border: 1px solid ${({\n  theme\n}) => theme.text4};\n  padding: 16px 12px;\n  border-radius: 12px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\nexport default function Pool() {\n  const theme = useContext(ThemeContext);\n  const {\n    account\n  } = useActiveWeb3React(); // fetch the user's balances of all tracked V2 LP tokens\n\n  const trackedTokenPairs = useTrackedTokenPairs();\n  const tokenPairsWithLiquidityTokens = useMemo(() => trackedTokenPairs.map(tokens => ({\n    liquidityToken: toV2LiquidityToken(tokens),\n    tokens\n  })), [trackedTokenPairs]);\n  const liquidityTokens = useMemo(() => tokenPairsWithLiquidityTokens.map(tpwlt => tpwlt.liquidityToken), [tokenPairsWithLiquidityTokens]);\n  const [v2PairsBalances, fetchingV2PairBalances] = useTokenBalancesWithLoadingIndicator(account !== null && account !== void 0 ? account : undefined, liquidityTokens); // fetch the reserves for all V2 pools in which the user has a balance\n\n  const liquidityTokensWithBalances = useMemo(() => tokenPairsWithLiquidityTokens.filter(({\n    liquidityToken\n  }) => {\n    var _v2PairsBalances$liqu;\n\n    return (_v2PairsBalances$liqu = v2PairsBalances[liquidityToken.address]) === null || _v2PairsBalances$liqu === void 0 ? void 0 : _v2PairsBalances$liqu.greaterThan('0');\n  }), [tokenPairsWithLiquidityTokens, v2PairsBalances]);\n  const v2Pairs = usePairs(liquidityTokensWithBalances.map(({\n    tokens\n  }) => tokens));\n  const v2IsLoading = fetchingV2PairBalances || (v2Pairs === null || v2Pairs === void 0 ? void 0 : v2Pairs.length) < liquidityTokensWithBalances.length || (v2Pairs === null || v2Pairs === void 0 ? void 0 : v2Pairs.some(V2Pair => !V2Pair));\n  const allV2PairsWithLiquidity = v2Pairs.map(([, pair]) => pair).filter(v2Pair => Boolean(v2Pair));\n  const hasV1Liquidity = useUserHasLiquidityInAllTokens(); // show liquidity even if its deposited in rewards contract\n\n  const stakingInfo = useStakingInfo();\n  const stakingInfosWithBalance = stakingInfo === null || stakingInfo === void 0 ? void 0 : stakingInfo.filter(pool => JSBI.greaterThan(pool.stakedAmount.raw, BIG_INT_ZERO));\n  const stakingPairs = usePairs(stakingInfosWithBalance === null || stakingInfosWithBalance === void 0 ? void 0 : stakingInfosWithBalance.map(stakingInfo => stakingInfo.tokens)); // remove any pairs that also are included in pairs with stake in mining pool\n\n  const v2PairsWithoutStakedAmount = allV2PairsWithLiquidity.filter(v2Pair => {\n    return (stakingPairs === null || stakingPairs === void 0 ? void 0 : stakingPairs.map(stakingPair => stakingPair[1]).filter(stakingPair => (stakingPair === null || stakingPair === void 0 ? void 0 : stakingPair.liquidityToken.address) === v2Pair.liquidityToken.address).length) === 0;\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(PageWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(SwapPoolTabs, {\n    active: 'pool',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(VoteCard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardBGImage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(CardNoise, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(CardSection, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(AutoColumn, {\n    gap: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(RowBetween, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.white, {\n    fontWeight: 600,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 17\n    }\n  }, \"Liquidity provider rewards\")), /*#__PURE__*/React.createElement(RowBetween, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.white, {\n    fontSize: 14,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 17\n    }\n  }, `Liquidity providers earn a 0.3% fee on all trades proportional to their share of the pool. Fees are added to the pool, accrue in real time and can be claimed by withdrawing your liquidity.`)), /*#__PURE__*/React.createElement(ExternalLink, {\n    style: {\n      color: 'white',\n      textDecoration: 'underline'\n    },\n    target: \"_blank\",\n    href: \"https://uniswap.org/docs/v2/core-concepts/pools/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.white, {\n    fontSize: 14,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 17\n    }\n  }, \"Read more about providing liquidity\")))), /*#__PURE__*/React.createElement(CardBGImage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(CardNoise, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(AutoColumn, {\n    gap: \"lg\",\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AutoColumn, {\n    gap: \"lg\",\n    style: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TitleRow, {\n    style: {\n      marginTop: '1rem'\n    },\n    padding: '0',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(HideSmall, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.mediumHeader, {\n    style: {\n      marginTop: '0.5rem',\n      justifySelf: 'flex-start'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 17\n    }\n  }, \"Your liquidity\")), /*#__PURE__*/React.createElement(ButtonRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ResponsiveButtonSecondary, {\n    as: Link,\n    padding: \"6px 8px\",\n    to: \"/create/ETH\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 17\n    }\n  }, \"Create a pair\"), /*#__PURE__*/React.createElement(ResponsiveButtonPrimary, {\n    id: \"join-pool-button\",\n    as: Link,\n    padding: \"6px 8px\",\n    borderRadius: \"12px\",\n    to: \"/add/ETH\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    fontWeight: 500,\n    fontSize: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 19\n    }\n  }, \"Add Liquidity\")))), !account ? /*#__PURE__*/React.createElement(Card, {\n    padding: \"40px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.body, {\n    color: theme.text3,\n    textAlign: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 17\n    }\n  }, \"Connect to a wallet to view your liquidity.\")) : v2IsLoading ? /*#__PURE__*/React.createElement(EmptyProposals, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.body, {\n    color: theme.text3,\n    textAlign: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Dots, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 19\n    }\n  }, \"Loading\"))) : (allV2PairsWithLiquidity === null || allV2PairsWithLiquidity === void 0 ? void 0 : allV2PairsWithLiquidity.length) > 0 || (stakingPairs === null || stakingPairs === void 0 ? void 0 : stakingPairs.length) > 0 ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ButtonSecondary, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(RowBetween, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(ExternalLink, {\n    href: 'https://uniswap.info/account/' + account,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 21\n    }\n  }, \"Account analytics and accrued fees\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 21\n    }\n  }, \" \\u2197\"))), v2PairsWithoutStakedAmount.map(v2Pair => /*#__PURE__*/React.createElement(FullPositionCard, {\n    key: v2Pair.liquidityToken.address,\n    pair: v2Pair,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 19\n    }\n  })), stakingPairs.map((stakingPair, i) => stakingPair[1] &&\n  /*#__PURE__*/\n  // skip pairs that arent loaded\n  React.createElement(FullPositionCard, {\n    key: stakingInfosWithBalance[i].stakingRewardAddress,\n    pair: stakingPair[1],\n    stakedBalance: stakingInfosWithBalance[i].stakedAmount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 23\n    }\n  }))) : /*#__PURE__*/React.createElement(EmptyProposals, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.body, {\n    color: theme.text3,\n    textAlign: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 17\n    }\n  }, \"No liquidity found.\")), /*#__PURE__*/React.createElement(AutoColumn, {\n    justify: 'center',\n    gap: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    textAlign: \"center\",\n    fontSize: 14,\n    style: {\n      padding: '.5rem 0 .5rem 0'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 15\n    }\n  }, hasV1Liquidity ? 'Uniswap V1 liquidity found!' : \"Don't see a pool you joined?\", ' ', /*#__PURE__*/React.createElement(StyledInternalLink, {\n    id: \"import-pool-link\",\n    to: hasV1Liquidity ? '/migrate/v1' : '/find',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 17\n    }\n  }, hasV1Liquidity ? 'Migrate now.' : 'Import it.')))))));\n}","map":{"version":3,"sources":["C:/Users/Ulyss/chimpswap/uniswap-interface-main/src/pages/Pool/index.tsx"],"names":["React","useContext","useMemo","styled","ThemeContext","JSBI","Link","SwapPoolTabs","FullPositionCard","useUserHasLiquidityInAllTokens","useTokenBalancesWithLoadingIndicator","StyledInternalLink","ExternalLink","TYPE","HideSmall","Text","Card","RowBetween","RowFixed","ButtonPrimary","ButtonSecondary","AutoColumn","useActiveWeb3React","usePairs","toV2LiquidityToken","useTrackedTokenPairs","Dots","CardSection","DataCard","CardNoise","CardBGImage","useStakingInfo","BIG_INT_ZERO","PageWrapper","VoteCard","TitleRow","theme","mediaWidth","upToSmall","ButtonRow","ResponsiveButtonPrimary","ResponsiveButtonSecondary","EmptyProposals","div","text4","Pool","account","trackedTokenPairs","tokenPairsWithLiquidityTokens","map","tokens","liquidityToken","liquidityTokens","tpwlt","v2PairsBalances","fetchingV2PairBalances","undefined","liquidityTokensWithBalances","filter","address","greaterThan","v2Pairs","v2IsLoading","length","some","V2Pair","allV2PairsWithLiquidity","pair","v2Pair","Boolean","hasV1Liquidity","stakingInfo","stakingInfosWithBalance","pool","stakedAmount","raw","stakingPairs","v2PairsWithoutStakedAmount","stakingPair","color","textDecoration","width","marginTop","justifySelf","text3","i","stakingRewardAddress","padding"],"mappings":"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","sourcesContent":["import React, { useContext, useMemo } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\nimport { Pair, JSBI } from '@uniswap/sdk'\nimport { Link } from 'react-router-dom'\nimport { SwapPoolTabs } from '../../components/NavigationTabs'\n\nimport FullPositionCard from '../../components/PositionCard'\nimport { useUserHasLiquidityInAllTokens } from '../../data/V1'\nimport { useTokenBalancesWithLoadingIndicator } from '../../state/wallet/hooks'\nimport { StyledInternalLink, ExternalLink, TYPE, HideSmall } from '../../theme'\nimport { Text } from 'rebass'\nimport Card from '../../components/Card'\nimport { RowBetween, RowFixed } from '../../components/Row'\nimport { ButtonPrimary, ButtonSecondary } from '../../components/Button'\nimport { AutoColumn } from '../../components/Column'\n\nimport { useActiveWeb3React } from '../../hooks'\nimport { usePairs } from '../../data/Reserves'\nimport { toV2LiquidityToken, useTrackedTokenPairs } from '../../state/user/hooks'\nimport { Dots } from '../../components/swap/styleds'\nimport { CardSection, DataCard, CardNoise, CardBGImage } from '../../components/earn/styled'\nimport { useStakingInfo } from '../../state/stake/hooks'\nimport { BIG_INT_ZERO } from '../../constants'\n\nconst PageWrapper = styled(AutoColumn)`\n  max-width: 640px;\n  width: 100%;\n`\n\nconst VoteCard = styled(DataCard)`\n  background: radial-gradient(76.02% 75.41% at 1.84% 0%, #27ae60 0%, #000000 100%);\n  overflow: hidden;\n`\n\nconst TitleRow = styled(RowBetween)`\n  ${({ theme }) => theme.mediaWidth.upToSmall`\n    flex-wrap: wrap;\n    gap: 12px;\n    width: 100%;\n    flex-direction: column-reverse;\n  `};\n`\n\nconst ButtonRow = styled(RowFixed)`\n  gap: 8px;\n  ${({ theme }) => theme.mediaWidth.upToSmall`\n    width: 100%;\n    flex-direction: row-reverse;\n    justify-content: space-between;\n  `};\n`\n\nconst ResponsiveButtonPrimary = styled(ButtonPrimary)`\n  width: fit-content;\n  ${({ theme }) => theme.mediaWidth.upToSmall`\n    width: 48%;\n  `};\n`\n\nconst ResponsiveButtonSecondary = styled(ButtonSecondary)`\n  width: fit-content;\n  ${({ theme }) => theme.mediaWidth.upToSmall`\n    width: 48%;\n  `};\n`\n\nconst EmptyProposals = styled.div`\n  border: 1px solid ${({ theme }) => theme.text4};\n  padding: 16px 12px;\n  border-radius: 12px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`\n\nexport default function Pool() {\n  const theme = useContext(ThemeContext)\n  const { account } = useActiveWeb3React()\n\n  // fetch the user's balances of all tracked V2 LP tokens\n  const trackedTokenPairs = useTrackedTokenPairs()\n  const tokenPairsWithLiquidityTokens = useMemo(\n    () => trackedTokenPairs.map(tokens => ({ liquidityToken: toV2LiquidityToken(tokens), tokens })),\n    [trackedTokenPairs]\n  )\n  const liquidityTokens = useMemo(() => tokenPairsWithLiquidityTokens.map(tpwlt => tpwlt.liquidityToken), [\n    tokenPairsWithLiquidityTokens\n  ])\n  const [v2PairsBalances, fetchingV2PairBalances] = useTokenBalancesWithLoadingIndicator(\n    account ?? undefined,\n    liquidityTokens\n  )\n\n  // fetch the reserves for all V2 pools in which the user has a balance\n  const liquidityTokensWithBalances = useMemo(\n    () =>\n      tokenPairsWithLiquidityTokens.filter(({ liquidityToken }) =>\n        v2PairsBalances[liquidityToken.address]?.greaterThan('0')\n      ),\n    [tokenPairsWithLiquidityTokens, v2PairsBalances]\n  )\n\n  const v2Pairs = usePairs(liquidityTokensWithBalances.map(({ tokens }) => tokens))\n  const v2IsLoading =\n    fetchingV2PairBalances || v2Pairs?.length < liquidityTokensWithBalances.length || v2Pairs?.some(V2Pair => !V2Pair)\n\n  const allV2PairsWithLiquidity = v2Pairs.map(([, pair]) => pair).filter((v2Pair): v2Pair is Pair => Boolean(v2Pair))\n\n  const hasV1Liquidity = useUserHasLiquidityInAllTokens()\n\n  // show liquidity even if its deposited in rewards contract\n  const stakingInfo = useStakingInfo()\n  const stakingInfosWithBalance = stakingInfo?.filter(pool => JSBI.greaterThan(pool.stakedAmount.raw, BIG_INT_ZERO))\n  const stakingPairs = usePairs(stakingInfosWithBalance?.map(stakingInfo => stakingInfo.tokens))\n\n  // remove any pairs that also are included in pairs with stake in mining pool\n  const v2PairsWithoutStakedAmount = allV2PairsWithLiquidity.filter(v2Pair => {\n    return (\n      stakingPairs\n        ?.map(stakingPair => stakingPair[1])\n        .filter(stakingPair => stakingPair?.liquidityToken.address === v2Pair.liquidityToken.address).length === 0\n    )\n  })\n\n  return (\n    <>\n      <PageWrapper>\n        <SwapPoolTabs active={'pool'} />\n        <VoteCard>\n          <CardBGImage />\n          <CardNoise />\n          <CardSection>\n            <AutoColumn gap=\"md\">\n              <RowBetween>\n                <TYPE.white fontWeight={600}>Liquidity provider rewards</TYPE.white>\n              </RowBetween>\n              <RowBetween>\n                <TYPE.white fontSize={14}>\n                  {`Liquidity providers earn a 0.3% fee on all trades proportional to their share of the pool. Fees are added to the pool, accrue in real time and can be claimed by withdrawing your liquidity.`}\n                </TYPE.white>\n              </RowBetween>\n              <ExternalLink\n                style={{ color: 'white', textDecoration: 'underline' }}\n                target=\"_blank\"\n                href=\"https://uniswap.org/docs/v2/core-concepts/pools/\"\n              >\n                <TYPE.white fontSize={14}>Read more about providing liquidity</TYPE.white>\n              </ExternalLink>\n            </AutoColumn>\n          </CardSection>\n          <CardBGImage />\n          <CardNoise />\n        </VoteCard>\n\n        <AutoColumn gap=\"lg\" justify=\"center\">\n          <AutoColumn gap=\"lg\" style={{ width: '100%' }}>\n            <TitleRow style={{ marginTop: '1rem' }} padding={'0'}>\n              <HideSmall>\n                <TYPE.mediumHeader style={{ marginTop: '0.5rem', justifySelf: 'flex-start' }}>\n                  Your liquidity\n                </TYPE.mediumHeader>\n              </HideSmall>\n              <ButtonRow>\n                <ResponsiveButtonSecondary as={Link} padding=\"6px 8px\" to=\"/create/ETH\">\n                  Create a pair\n                </ResponsiveButtonSecondary>\n                <ResponsiveButtonPrimary\n                  id=\"join-pool-button\"\n                  as={Link}\n                  padding=\"6px 8px\"\n                  borderRadius=\"12px\"\n                  to=\"/add/ETH\"\n                >\n                  <Text fontWeight={500} fontSize={16}>\n                    Add Liquidity\n                  </Text>\n                </ResponsiveButtonPrimary>\n              </ButtonRow>\n            </TitleRow>\n\n            {!account ? (\n              <Card padding=\"40px\">\n                <TYPE.body color={theme.text3} textAlign=\"center\">\n                  Connect to a wallet to view your liquidity.\n                </TYPE.body>\n              </Card>\n            ) : v2IsLoading ? (\n              <EmptyProposals>\n                <TYPE.body color={theme.text3} textAlign=\"center\">\n                  <Dots>Loading</Dots>\n                </TYPE.body>\n              </EmptyProposals>\n            ) : allV2PairsWithLiquidity?.length > 0 || stakingPairs?.length > 0 ? (\n              <>\n                <ButtonSecondary>\n                  <RowBetween>\n                    <ExternalLink href={'https://uniswap.info/account/' + account}>\n                      Account analytics and accrued fees\n                    </ExternalLink>\n                    <span> ↗</span>\n                  </RowBetween>\n                </ButtonSecondary>\n                {v2PairsWithoutStakedAmount.map(v2Pair => (\n                  <FullPositionCard key={v2Pair.liquidityToken.address} pair={v2Pair} />\n                ))}\n                {stakingPairs.map(\n                  (stakingPair, i) =>\n                    stakingPair[1] && ( // skip pairs that arent loaded\n                      <FullPositionCard\n                        key={stakingInfosWithBalance[i].stakingRewardAddress}\n                        pair={stakingPair[1]}\n                        stakedBalance={stakingInfosWithBalance[i].stakedAmount}\n                      />\n                    )\n                )}\n              </>\n            ) : (\n              <EmptyProposals>\n                <TYPE.body color={theme.text3} textAlign=\"center\">\n                  No liquidity found.\n                </TYPE.body>\n              </EmptyProposals>\n            )}\n\n            <AutoColumn justify={'center'} gap=\"md\">\n              <Text textAlign=\"center\" fontSize={14} style={{ padding: '.5rem 0 .5rem 0' }}>\n                {hasV1Liquidity ? 'Uniswap V1 liquidity found!' : \"Don't see a pool you joined?\"}{' '}\n                <StyledInternalLink id=\"import-pool-link\" to={hasV1Liquidity ? '/migrate/v1' : '/find'}>\n                  {hasV1Liquidity ? 'Migrate now.' : 'Import it.'}\n                </StyledInternalLink>\n              </Text>\n            </AutoColumn>\n          </AutoColumn>\n        </AutoColumn>\n      </PageWrapper>\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}