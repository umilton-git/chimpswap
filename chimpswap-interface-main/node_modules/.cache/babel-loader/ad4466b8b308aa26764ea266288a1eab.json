{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ulyss\\\\chimpswap\\\\chimpswap-interface-main\\\\src\\\\components\\\\Popups\\\\ListUpdatePopup.tsx\";\nimport { diffTokenLists } from '@uniswap/token-lists';\nimport React, { useCallback, useMemo } from 'react';\nimport ReactGA from 'react-ga';\nimport { useDispatch } from 'react-redux';\nimport { Text } from 'rebass';\nimport styled from 'styled-components';\nimport { useRemovePopup } from '../../state/application/hooks';\nimport { acceptListUpdate } from '../../state/lists/actions';\nimport { TYPE } from '../../theme';\nimport listVersionLabel from '../../utils/listVersionLabel';\nimport { ButtonSecondary } from '../Button';\nimport { AutoColumn } from '../Column';\nimport { AutoRow } from '../Row';\nexport const ChangesList = styled.ul`\n  max-height: 400px;\n  overflow: auto;\n`;\nexport default function ListUpdatePopup({\n  popKey,\n  listUrl,\n  oldList,\n  newList,\n  auto\n}) {\n  const removePopup = useRemovePopup();\n  const removeThisPopup = useCallback(() => removePopup(popKey), [popKey, removePopup]);\n  const dispatch = useDispatch();\n  const handleAcceptUpdate = useCallback(() => {\n    if (auto) return;\n    ReactGA.event({\n      category: 'Lists',\n      action: 'Update List from Popup',\n      label: listUrl\n    });\n    dispatch(acceptListUpdate(listUrl));\n    removeThisPopup();\n  }, [auto, dispatch, listUrl, removeThisPopup]);\n  const {\n    added: tokensAdded,\n    changed: tokensChanged,\n    removed: tokensRemoved\n  } = useMemo(() => {\n    return diffTokenLists(oldList.tokens, newList.tokens);\n  }, [newList.tokens, oldList.tokens]);\n  const numTokensChanged = useMemo(() => Object.keys(tokensChanged).reduce((memo, chainId) => memo + Object.keys(tokensChanged[chainId]).length, 0), [tokensChanged]);\n  return /*#__PURE__*/React.createElement(AutoRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(AutoColumn, {\n    style: {\n      flex: '1'\n    },\n    gap: \"8px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, auto ? /*#__PURE__*/React.createElement(TYPE.body, {\n    fontWeight: 500,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, \"The token list \\\"\", oldList.name, \"\\\" has been updated to\", ' ', /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, listVersionLabel(newList.version)), \".\") : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 15\n    }\n  }, \"An update is available for the token list \\\"\", oldList.name, \"\\\" (\", listVersionLabel(oldList.version), \" to \", listVersionLabel(newList.version), \").\"), /*#__PURE__*/React.createElement(ChangesList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }\n  }, tokensAdded.length > 0 ? /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 19\n    }\n  }, tokensAdded.map((token, i) => /*#__PURE__*/React.createElement(React.Fragment, {\n    key: `${token.chainId}-${token.address}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    title: token.address,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 25\n    }\n  }, token.symbol), i === tokensAdded.length - 1 ? null : ', ')), ' ', \"added\") : null, tokensRemoved.length > 0 ? /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 19\n    }\n  }, tokensRemoved.map((token, i) => /*#__PURE__*/React.createElement(React.Fragment, {\n    key: `${token.chainId}-${token.address}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    title: token.address,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 25\n    }\n  }, token.symbol), i === tokensRemoved.length - 1 ? null : ', ')), ' ', \"removed\") : null, numTokensChanged > 0 ? /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 41\n    }\n  }, numTokensChanged, \" tokens updated\") : null)), /*#__PURE__*/React.createElement(AutoRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      flexGrow: 1,\n      marginRight: 12\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ButtonSecondary, {\n    onClick: handleAcceptUpdate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }, \"Accept update\")), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      flexGrow: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ButtonSecondary, {\n    onClick: removeThisPopup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  }, \"Dismiss\"))))));\n}","map":{"version":3,"sources":["C:/Users/Ulyss/chimpswap/chimpswap-interface-main/src/components/Popups/ListUpdatePopup.tsx"],"names":["diffTokenLists","React","useCallback","useMemo","ReactGA","useDispatch","Text","styled","useRemovePopup","acceptListUpdate","TYPE","listVersionLabel","ButtonSecondary","AutoColumn","AutoRow","ChangesList","ul","ListUpdatePopup","popKey","listUrl","oldList","newList","auto","removePopup","removeThisPopup","dispatch","handleAcceptUpdate","event","category","action","label","added","tokensAdded","changed","tokensChanged","removed","tokensRemoved","tokens","numTokensChanged","Object","keys","reduce","memo","chainId","length","flex","name","version","map","token","i","address","symbol","flexGrow","marginRight"],"mappings":"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","sourcesContent":["import { diffTokenLists, TokenList } from '@uniswap/token-lists'\nimport React, { useCallback, useMemo } from 'react'\nimport ReactGA from 'react-ga'\nimport { useDispatch } from 'react-redux'\nimport { Text } from 'rebass'\nimport styled from 'styled-components'\nimport { AppDispatch } from '../../state'\nimport { useRemovePopup } from '../../state/application/hooks'\nimport { acceptListUpdate } from '../../state/lists/actions'\nimport { TYPE } from '../../theme'\nimport listVersionLabel from '../../utils/listVersionLabel'\nimport { ButtonSecondary } from '../Button'\nimport { AutoColumn } from '../Column'\nimport { AutoRow } from '../Row'\n\nexport const ChangesList = styled.ul`\n  max-height: 400px;\n  overflow: auto;\n`\n\nexport default function ListUpdatePopup({\n  popKey,\n  listUrl,\n  oldList,\n  newList,\n  auto\n}: {\n  popKey: string\n  listUrl: string\n  oldList: TokenList\n  newList: TokenList\n  auto: boolean\n}) {\n  const removePopup = useRemovePopup()\n  const removeThisPopup = useCallback(() => removePopup(popKey), [popKey, removePopup])\n  const dispatch = useDispatch<AppDispatch>()\n\n  const handleAcceptUpdate = useCallback(() => {\n    if (auto) return\n    ReactGA.event({\n      category: 'Lists',\n      action: 'Update List from Popup',\n      label: listUrl\n    })\n    dispatch(acceptListUpdate(listUrl))\n    removeThisPopup()\n  }, [auto, dispatch, listUrl, removeThisPopup])\n\n  const { added: tokensAdded, changed: tokensChanged, removed: tokensRemoved } = useMemo(() => {\n    return diffTokenLists(oldList.tokens, newList.tokens)\n  }, [newList.tokens, oldList.tokens])\n  const numTokensChanged = useMemo(\n    () =>\n      Object.keys(tokensChanged).reduce((memo, chainId: any) => memo + Object.keys(tokensChanged[chainId]).length, 0),\n    [tokensChanged]\n  )\n\n  return (\n    <AutoRow>\n      <AutoColumn style={{ flex: '1' }} gap=\"8px\">\n        {auto ? (\n          <TYPE.body fontWeight={500}>\n            The token list &quot;{oldList.name}&quot; has been updated to{' '}\n            <strong>{listVersionLabel(newList.version)}</strong>.\n          </TYPE.body>\n        ) : (\n          <>\n            <div>\n              <Text>\n                An update is available for the token list &quot;{oldList.name}&quot; (\n                {listVersionLabel(oldList.version)} to {listVersionLabel(newList.version)}).\n              </Text>\n              <ChangesList>\n                {tokensAdded.length > 0 ? (\n                  <li>\n                    {tokensAdded.map((token, i) => (\n                      <React.Fragment key={`${token.chainId}-${token.address}`}>\n                        <strong title={token.address}>{token.symbol}</strong>\n                        {i === tokensAdded.length - 1 ? null : ', '}\n                      </React.Fragment>\n                    ))}{' '}\n                    added\n                  </li>\n                ) : null}\n                {tokensRemoved.length > 0 ? (\n                  <li>\n                    {tokensRemoved.map((token, i) => (\n                      <React.Fragment key={`${token.chainId}-${token.address}`}>\n                        <strong title={token.address}>{token.symbol}</strong>\n                        {i === tokensRemoved.length - 1 ? null : ', '}\n                      </React.Fragment>\n                    ))}{' '}\n                    removed\n                  </li>\n                ) : null}\n                {numTokensChanged > 0 ? <li>{numTokensChanged} tokens updated</li> : null}\n              </ChangesList>\n            </div>\n            <AutoRow>\n              <div style={{ flexGrow: 1, marginRight: 12 }}>\n                <ButtonSecondary onClick={handleAcceptUpdate}>Accept update</ButtonSecondary>\n              </div>\n              <div style={{ flexGrow: 1 }}>\n                <ButtonSecondary onClick={removeThisPopup}>Dismiss</ButtonSecondary>\n              </div>\n            </AutoRow>\n          </>\n        )}\n      </AutoColumn>\n    </AutoRow>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}