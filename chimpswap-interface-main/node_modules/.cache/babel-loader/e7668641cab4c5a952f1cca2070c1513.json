{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ulyss\\\\chimpswap\\\\uniswap-interface-main\\\\src\\\\components\\\\SearchModal\\\\ImportRow.tsx\";\nimport React from 'react';\nimport { AutoRow, RowFixed } from 'components/Row';\nimport { AutoColumn } from 'components/Column';\nimport CurrencyLogo from 'components/CurrencyLogo';\nimport { TYPE } from 'theme';\nimport ListLogo from 'components/ListLogo';\nimport { useActiveWeb3React } from 'hooks';\nimport { useCombinedInactiveList } from 'state/lists/hooks';\nimport useTheme from 'hooks/useTheme';\nimport { ButtonPrimary } from 'components/Button';\nimport styled from 'styled-components';\nimport { useIsUserAddedToken, useIsTokenActive } from 'hooks/Tokens';\nimport { CheckCircle } from 'react-feather';\nconst TokenSection = styled.div`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-template-columns: auto minmax(auto, 1fr) auto;\n  grid-gap: 16px;\n  align-items: center;\n\n  opacity: ${({\n  dim\n}) => dim ? '0.4' : '1'};\n`;\nconst CheckIcon = styled(CheckCircle)`\n  height: 16px;\n  width: 16px;\n  margin-right: 6px;\n  stroke: ${({\n  theme\n}) => theme.green1};\n`;\nconst NameOverflow = styled.div`\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  max-width: 140px;\n  font-size: 12px;\n`;\nexport default function ImportRow({\n  token,\n  style,\n  dim,\n  showImportView,\n  setImportToken\n}) {\n  var _inactiveTokenList$ch, _inactiveTokenList$ch2;\n\n  // gloabls\n  const {\n    chainId\n  } = useActiveWeb3React();\n  const theme = useTheme(); // check if token comes from list\n\n  const inactiveTokenList = useCombinedInactiveList();\n  const list = chainId && (inactiveTokenList === null || inactiveTokenList === void 0 ? void 0 : (_inactiveTokenList$ch = inactiveTokenList[chainId]) === null || _inactiveTokenList$ch === void 0 ? void 0 : (_inactiveTokenList$ch2 = _inactiveTokenList$ch[token.address]) === null || _inactiveTokenList$ch2 === void 0 ? void 0 : _inactiveTokenList$ch2.list); // check if already active on list or local storage tokens\n\n  const isAdded = useIsUserAddedToken(token);\n  const isActive = useIsTokenActive(token);\n  return /*#__PURE__*/React.createElement(TokenSection, {\n    style: style,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CurrencyLogo, {\n    currency: token,\n    size: '24px',\n    style: {\n      opacity: dim ? '0.6' : '1'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(AutoColumn, {\n    gap: \"4px\",\n    style: {\n      opacity: dim ? '0.6' : '1'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(AutoRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.body, {\n    fontWeight: 500,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, token.symbol), /*#__PURE__*/React.createElement(TYPE.darkGray, {\n    ml: \"8px\",\n    fontWeight: 300,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(NameOverflow, {\n    title: token.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, token.name))), list && list.logoURI && /*#__PURE__*/React.createElement(RowFixed, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.small, {\n    mr: \"4px\",\n    color: theme.text3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, \"via \", list.name), /*#__PURE__*/React.createElement(ListLogo, {\n    logoURI: list.logoURI,\n    size: \"12px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }))), !isActive && !isAdded ? /*#__PURE__*/React.createElement(ButtonPrimary, {\n    width: \"fit-content\",\n    padding: \"6px 12px\",\n    fontWeight: 500,\n    fontSize: \"14px\",\n    onClick: () => {\n      setImportToken && setImportToken(token);\n      showImportView();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, \"Import\") : /*#__PURE__*/React.createElement(RowFixed, {\n    style: {\n      minWidth: 'fit-content'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CheckIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TYPE.main, {\n    color: theme.green1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, \"Active\")));\n}","map":{"version":3,"sources":["C:/Users/Ulyss/chimpswap/uniswap-interface-main/src/components/SearchModal/ImportRow.tsx"],"names":["React","AutoRow","RowFixed","AutoColumn","CurrencyLogo","TYPE","ListLogo","useActiveWeb3React","useCombinedInactiveList","useTheme","ButtonPrimary","styled","useIsUserAddedToken","useIsTokenActive","CheckCircle","TokenSection","div","dim","CheckIcon","theme","green1","NameOverflow","ImportRow","token","style","showImportView","setImportToken","chainId","inactiveTokenList","list","address","isAdded","isActive","opacity","symbol","name","logoURI","text3","minWidth"],"mappings":"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","sourcesContent":["import React, { CSSProperties } from 'react'\nimport { Token } from '@uniswap/sdk'\nimport { AutoRow, RowFixed } from 'components/Row'\nimport { AutoColumn } from 'components/Column'\nimport CurrencyLogo from 'components/CurrencyLogo'\nimport { TYPE } from 'theme'\nimport ListLogo from 'components/ListLogo'\nimport { useActiveWeb3React } from 'hooks'\nimport { useCombinedInactiveList } from 'state/lists/hooks'\nimport useTheme from 'hooks/useTheme'\nimport { ButtonPrimary } from 'components/Button'\nimport styled from 'styled-components'\nimport { useIsUserAddedToken, useIsTokenActive } from 'hooks/Tokens'\nimport { CheckCircle } from 'react-feather'\n\nconst TokenSection = styled.div<{ dim?: boolean }>`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-template-columns: auto minmax(auto, 1fr) auto;\n  grid-gap: 16px;\n  align-items: center;\n\n  opacity: ${({ dim }) => (dim ? '0.4' : '1')};\n`\n\nconst CheckIcon = styled(CheckCircle)`\n  height: 16px;\n  width: 16px;\n  margin-right: 6px;\n  stroke: ${({ theme }) => theme.green1};\n`\n\nconst NameOverflow = styled.div`\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  max-width: 140px;\n  font-size: 12px;\n`\n\nexport default function ImportRow({\n  token,\n  style,\n  dim,\n  showImportView,\n  setImportToken\n}: {\n  token: Token\n  style?: CSSProperties\n  dim?: boolean\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n}) {\n  // gloabls\n  const { chainId } = useActiveWeb3React()\n  const theme = useTheme()\n\n  // check if token comes from list\n  const inactiveTokenList = useCombinedInactiveList()\n  const list = chainId && inactiveTokenList?.[chainId]?.[token.address]?.list\n\n  // check if already active on list or local storage tokens\n  const isAdded = useIsUserAddedToken(token)\n  const isActive = useIsTokenActive(token)\n\n  return (\n    <TokenSection style={style}>\n      <CurrencyLogo currency={token} size={'24px'} style={{ opacity: dim ? '0.6' : '1' }} />\n      <AutoColumn gap=\"4px\" style={{ opacity: dim ? '0.6' : '1' }}>\n        <AutoRow>\n          <TYPE.body fontWeight={500}>{token.symbol}</TYPE.body>\n          <TYPE.darkGray ml=\"8px\" fontWeight={300}>\n            <NameOverflow title={token.name}>{token.name}</NameOverflow>\n          </TYPE.darkGray>\n        </AutoRow>\n        {list && list.logoURI && (\n          <RowFixed>\n            <TYPE.small mr=\"4px\" color={theme.text3}>\n              via {list.name}\n            </TYPE.small>\n            <ListLogo logoURI={list.logoURI} size=\"12px\" />\n          </RowFixed>\n        )}\n      </AutoColumn>\n      {!isActive && !isAdded ? (\n        <ButtonPrimary\n          width=\"fit-content\"\n          padding=\"6px 12px\"\n          fontWeight={500}\n          fontSize=\"14px\"\n          onClick={() => {\n            setImportToken && setImportToken(token)\n            showImportView()\n          }}\n        >\n          Import\n        </ButtonPrimary>\n      ) : (\n        <RowFixed style={{ minWidth: 'fit-content' }}>\n          <CheckIcon />\n          <TYPE.main color={theme.green1}>Active</TYPE.main>\n        </RowFixed>\n      )}\n    </TokenSection>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}