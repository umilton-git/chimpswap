{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ulyss\\\\chimpswap\\\\chimpswap-interface-main\\\\src\\\\components\\\\swap\\\\UnsupportedCurrencyFooter.tsx\";\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { TYPE, CloseIcon, ExternalLink } from 'theme';\nimport { ButtonEmpty } from 'components/Button';\nimport Modal from 'components/Modal';\nimport Card, { OutlineCard } from 'components/Card';\nimport { RowBetween, AutoRow } from 'components/Row';\nimport { AutoColumn } from 'components/Column';\nimport CurrencyLogo from 'components/CurrencyLogo';\nimport { useActiveWeb3React } from 'hooks';\nimport { getEtherscanLink } from 'utils';\nimport { wrappedCurrency } from 'utils/wrappedCurrency';\nimport { useUnsupportedTokens } from '../../hooks/Tokens';\nconst DetailsFooter = styled.div`\n  padding-top: calc(16px + 2rem);\n  padding-bottom: 20px;\n  margin-top: -2rem;\n  width: 100%;\n  max-width: 400px;\n  border-bottom-left-radius: 20px;\n  border-bottom-right-radius: 20px;\n  color: ${({\n  theme\n}) => theme.text2};\n  background-color: ${({\n  theme\n}) => theme.advancedBG};\n  z-index: -1;\n\n  transform: ${({\n  show\n}) => show ? 'translateY(0%)' : 'translateY(-100%)'};\n  transition: transform 300ms ease-in-out;\n  text-align: center;\n`;\nconst AddressText = styled(TYPE.blue)`\n  font-size: 12px;\n\n  ${({\n  theme\n}) => theme.mediaWidth.upToSmall`\n    font-size: 10px;\n`}\n`;\nexport default function UnsupportedCurrencyFooter({\n  show,\n  currencies\n}) {\n  const {\n    chainId\n  } = useActiveWeb3React();\n  const [showDetails, setShowDetails] = useState(false);\n  const tokens = chainId && currencies ? currencies.map(currency => {\n    return wrappedCurrency(currency, chainId);\n  }) : [];\n  const unsupportedTokens = useUnsupportedTokens();\n  return /*#__PURE__*/React.createElement(DetailsFooter, {\n    show: show,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Modal, {\n    isOpen: showDetails,\n    onDismiss: () => setShowDetails(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    padding: \"2rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AutoColumn, {\n    gap: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(RowBetween, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.mediumHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 15\n    }\n  }, \"Unsupported Assets\"), /*#__PURE__*/React.createElement(CloseIcon, {\n    onClick: () => setShowDetails(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  })), tokens.map(token => {\n    var _token$address;\n\n    return token && unsupportedTokens && Object.keys(unsupportedTokens).includes(token.address) && /*#__PURE__*/React.createElement(OutlineCard, {\n      key: (_token$address = token.address) === null || _token$address === void 0 ? void 0 : _token$address.concat('not-supported'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(AutoColumn, {\n      gap: \"10px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(AutoRow, {\n      gap: \"5px\",\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(CurrencyLogo, {\n      currency: token,\n      size: '24px',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(TYPE.body, {\n      fontWeight: 500,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 25\n      }\n    }, token.symbol)), chainId && /*#__PURE__*/React.createElement(ExternalLink, {\n      href: getEtherscanLink(chainId, token.address, 'address'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(AddressText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 27\n      }\n    }, token.address))));\n  }), /*#__PURE__*/React.createElement(AutoColumn, {\n    gap: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.body, {\n    fontWeight: 500,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }\n  }, \"Some assets are not available through this interface because they may not work well with our smart contract or we are unable to allow trading for legal reasons.\"))))), /*#__PURE__*/React.createElement(ButtonEmpty, {\n    padding: '0',\n    onClick: () => setShowDetails(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.blue, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, \"Read more about unsupported assets\")));\n}","map":{"version":3,"sources":["C:/Users/Ulyss/chimpswap/chimpswap-interface-main/src/components/swap/UnsupportedCurrencyFooter.tsx"],"names":["React","useState","styled","TYPE","CloseIcon","ExternalLink","ButtonEmpty","Modal","Card","OutlineCard","RowBetween","AutoRow","AutoColumn","CurrencyLogo","useActiveWeb3React","getEtherscanLink","wrappedCurrency","useUnsupportedTokens","DetailsFooter","div","theme","text2","advancedBG","show","AddressText","blue","mediaWidth","upToSmall","UnsupportedCurrencyFooter","currencies","chainId","showDetails","setShowDetails","tokens","map","currency","unsupportedTokens","token","Object","keys","includes","address","concat","symbol"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { TYPE, CloseIcon, ExternalLink } from 'theme'\nimport { ButtonEmpty } from 'components/Button'\nimport Modal from 'components/Modal'\nimport Card, { OutlineCard } from 'components/Card'\nimport { RowBetween, AutoRow } from 'components/Row'\nimport { AutoColumn } from 'components/Column'\nimport CurrencyLogo from 'components/CurrencyLogo'\nimport { useActiveWeb3React } from 'hooks'\nimport { getEtherscanLink } from 'utils'\nimport { Currency, Token } from '@uniswap/sdk'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport { useUnsupportedTokens } from '../../hooks/Tokens'\n\nconst DetailsFooter = styled.div<{ show: boolean }>`\n  padding-top: calc(16px + 2rem);\n  padding-bottom: 20px;\n  margin-top: -2rem;\n  width: 100%;\n  max-width: 400px;\n  border-bottom-left-radius: 20px;\n  border-bottom-right-radius: 20px;\n  color: ${({ theme }) => theme.text2};\n  background-color: ${({ theme }) => theme.advancedBG};\n  z-index: -1;\n\n  transform: ${({ show }) => (show ? 'translateY(0%)' : 'translateY(-100%)')};\n  transition: transform 300ms ease-in-out;\n  text-align: center;\n`\n\nconst AddressText = styled(TYPE.blue)`\n  font-size: 12px;\n\n  ${({ theme }) => theme.mediaWidth.upToSmall`\n    font-size: 10px;\n`}\n`\n\nexport default function UnsupportedCurrencyFooter({\n  show,\n  currencies\n}: {\n  show: boolean\n  currencies: (Currency | undefined)[]\n}) {\n  const { chainId } = useActiveWeb3React()\n  const [showDetails, setShowDetails] = useState(false)\n\n  const tokens =\n    chainId && currencies\n      ? currencies.map(currency => {\n          return wrappedCurrency(currency, chainId)\n        })\n      : []\n\n  const unsupportedTokens: { [address: string]: Token } = useUnsupportedTokens()\n\n  return (\n    <DetailsFooter show={show}>\n      <Modal isOpen={showDetails} onDismiss={() => setShowDetails(false)}>\n        <Card padding=\"2rem\">\n          <AutoColumn gap=\"lg\">\n            <RowBetween>\n              <TYPE.mediumHeader>Unsupported Assets</TYPE.mediumHeader>\n              <CloseIcon onClick={() => setShowDetails(false)} />\n            </RowBetween>\n            {tokens.map(token => {\n              return (\n                token &&\n                unsupportedTokens &&\n                Object.keys(unsupportedTokens).includes(token.address) && (\n                  <OutlineCard key={token.address?.concat('not-supported')}>\n                    <AutoColumn gap=\"10px\">\n                      <AutoRow gap=\"5px\" align=\"center\">\n                        <CurrencyLogo currency={token} size={'24px'} />\n                        <TYPE.body fontWeight={500}>{token.symbol}</TYPE.body>\n                      </AutoRow>\n                      {chainId && (\n                        <ExternalLink href={getEtherscanLink(chainId, token.address, 'address')}>\n                          <AddressText>{token.address}</AddressText>\n                        </ExternalLink>\n                      )}\n                    </AutoColumn>\n                  </OutlineCard>\n                )\n              )\n            })}\n            <AutoColumn gap=\"lg\">\n              <TYPE.body fontWeight={500}>\n                Some assets are not available through this interface because they may not work well with our smart\n                contract or we are unable to allow trading for legal reasons.\n              </TYPE.body>\n            </AutoColumn>\n          </AutoColumn>\n        </Card>\n      </Modal>\n      <ButtonEmpty padding={'0'} onClick={() => setShowDetails(true)}>\n        <TYPE.blue>Read more about unsupported assets</TYPE.blue>\n      </ButtonEmpty>\n    </DetailsFooter>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}