{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ulyss\\\\chimpswap\\\\chimpswap-interface-main\\\\src\\\\pages\\\\MigrateV1\\\\index.tsx\";\nimport { JSBI, Token } from '@uniswap/sdk';\nimport React, { useCallback, useContext, useMemo, useState, useEffect } from 'react';\nimport { ThemeContext } from 'styled-components';\nimport { AutoColumn } from '../../components/Column';\nimport { AutoRow } from '../../components/Row';\nimport { SearchInput } from '../../components/SearchModal/styleds';\nimport { useAllTokenV1Exchanges } from '../../data/V1';\nimport { useActiveWeb3React } from '../../hooks';\nimport { useAllTokens, useToken } from '../../hooks/Tokens';\nimport { useTokenBalancesWithLoadingIndicator } from '../../state/wallet/hooks';\nimport { BackArrow, TYPE } from '../../theme';\nimport { LightCard } from '../../components/Card';\nimport { BodyWrapper } from '../AppBody';\nimport { EmptyState } from './EmptyState';\nimport V1PositionCard from '../../components/PositionCard/V1';\nimport QuestionHelper from '../../components/QuestionHelper';\nimport { Dots } from '../../components/swap/styleds';\nimport { useAddUserToken } from '../../state/user/hooks';\nimport { isTokenOnList } from '../../utils';\nimport { useCombinedActiveList } from '../../state/lists/hooks';\nexport default function MigrateV1() {\n  var _Object$keys;\n\n  const theme = useContext(ThemeContext);\n  const {\n    account,\n    chainId\n  } = useActiveWeb3React();\n  const [tokenSearch, setTokenSearch] = useState('');\n  const handleTokenSearchChange = useCallback(e => setTokenSearch(e.target.value), [setTokenSearch]); // automatically add the search token\n\n  const token = useToken(tokenSearch);\n  const selectedTokenListTokens = useCombinedActiveList();\n  const isOnSelectedList = isTokenOnList(selectedTokenListTokens, token !== null && token !== void 0 ? token : undefined);\n  const allTokens = useAllTokens();\n  const addToken = useAddUserToken();\n  useEffect(() => {\n    if (token && !isOnSelectedList && !allTokens[token.address]) {\n      addToken(token);\n    }\n  }, [token, isOnSelectedList, addToken, allTokens]); // get V1 LP balances\n\n  const V1Exchanges = useAllTokenV1Exchanges();\n  const V1LiquidityTokens = useMemo(() => {\n    return chainId ? Object.keys(V1Exchanges).map(exchangeAddress => new Token(chainId, exchangeAddress, 18, 'UNI-V1', 'Uniswap V1')) : [];\n  }, [chainId, V1Exchanges]);\n  const [V1LiquidityBalances, V1LiquidityBalancesLoading] = useTokenBalancesWithLoadingIndicator(account !== null && account !== void 0 ? account : undefined, V1LiquidityTokens);\n  const allV1PairsWithLiquidity = V1LiquidityTokens.filter(V1LiquidityToken => {\n    const balance = V1LiquidityBalances === null || V1LiquidityBalances === void 0 ? void 0 : V1LiquidityBalances[V1LiquidityToken.address];\n    return balance && JSBI.greaterThan(balance.raw, JSBI.BigInt(0));\n  }).map(V1LiquidityToken => {\n    const balance = V1LiquidityBalances[V1LiquidityToken.address];\n    return balance ? /*#__PURE__*/React.createElement(V1PositionCard, {\n      key: V1LiquidityToken.address,\n      token: V1Exchanges[V1LiquidityToken.address],\n      V1LiquidityBalance: balance,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }\n    }) : null;\n  }); // should never always be false, because a V1 exhchange exists for WETH on all testnets\n\n  const isLoading = ((_Object$keys = Object.keys(V1Exchanges)) === null || _Object$keys === void 0 ? void 0 : _Object$keys.length) === 0 || V1LiquidityBalancesLoading;\n  return /*#__PURE__*/React.createElement(BodyWrapper, {\n    style: {\n      padding: 24\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(AutoColumn, {\n    gap: \"16px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(AutoRow, {\n    style: {\n      alignItems: 'center',\n      justifyContent: 'space-between'\n    },\n    gap: \"8px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(BackArrow, {\n    to: \"/pool\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TYPE.mediumHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, \"Migrate V1 Liquidity\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(QuestionHelper, {\n    text: \"Migrate your liquidity tokens from Uniswap V1 to Uniswap V2.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(TYPE.body, {\n    style: {\n      marginBottom: 8,\n      fontWeight: 400\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, \"For each pool shown below, click migrate to remove your liquidity from Uniswap V1 and deposit it into Uniswap V2.\"), !account ? /*#__PURE__*/React.createElement(LightCard, {\n    padding: \"40px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.body, {\n    color: theme.text3,\n    textAlign: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, \"Connect to a wallet to view your V1 liquidity.\")) : isLoading ? /*#__PURE__*/React.createElement(LightCard, {\n    padding: \"40px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.body, {\n    color: theme.text3,\n    textAlign: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Dots, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 15\n    }\n  }, \"Loading\"))) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AutoRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(SearchInput, {\n    value: tokenSearch,\n    onChange: handleTokenSearchChange,\n    placeholder: \"Enter a token address to find liquidity\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 15\n    }\n  })), (allV1PairsWithLiquidity === null || allV1PairsWithLiquidity === void 0 ? void 0 : allV1PairsWithLiquidity.length) > 0 ? /*#__PURE__*/React.createElement(React.Fragment, null, allV1PairsWithLiquidity) : /*#__PURE__*/React.createElement(EmptyState, {\n    message: \"No V1 Liquidity found.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 15\n    }\n  }))));\n}","map":{"version":3,"sources":["C:/Users/Ulyss/chimpswap/chimpswap-interface-main/src/pages/MigrateV1/index.tsx"],"names":["JSBI","Token","React","useCallback","useContext","useMemo","useState","useEffect","ThemeContext","AutoColumn","AutoRow","SearchInput","useAllTokenV1Exchanges","useActiveWeb3React","useAllTokens","useToken","useTokenBalancesWithLoadingIndicator","BackArrow","TYPE","LightCard","BodyWrapper","EmptyState","V1PositionCard","QuestionHelper","Dots","useAddUserToken","isTokenOnList","useCombinedActiveList","MigrateV1","theme","account","chainId","tokenSearch","setTokenSearch","handleTokenSearchChange","e","target","value","token","selectedTokenListTokens","isOnSelectedList","undefined","allTokens","addToken","address","V1Exchanges","V1LiquidityTokens","Object","keys","map","exchangeAddress","V1LiquidityBalances","V1LiquidityBalancesLoading","allV1PairsWithLiquidity","filter","V1LiquidityToken","balance","greaterThan","raw","BigInt","isLoading","length","padding","alignItems","justifyContent","marginBottom","fontWeight","text3"],"mappings":"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","sourcesContent":["import { JSBI, Token } from '@uniswap/sdk'\nimport React, { useCallback, useContext, useMemo, useState, useEffect } from 'react'\nimport { ThemeContext } from 'styled-components'\nimport { AutoColumn } from '../../components/Column'\nimport { AutoRow } from '../../components/Row'\nimport { SearchInput } from '../../components/SearchModal/styleds'\nimport { useAllTokenV1Exchanges } from '../../data/V1'\nimport { useActiveWeb3React } from '../../hooks'\nimport { useAllTokens, useToken } from '../../hooks/Tokens'\nimport { useTokenBalancesWithLoadingIndicator } from '../../state/wallet/hooks'\nimport { BackArrow, TYPE } from '../../theme'\nimport { LightCard } from '../../components/Card'\nimport { BodyWrapper } from '../AppBody'\nimport { EmptyState } from './EmptyState'\nimport V1PositionCard from '../../components/PositionCard/V1'\nimport QuestionHelper from '../../components/QuestionHelper'\nimport { Dots } from '../../components/swap/styleds'\nimport { useAddUserToken } from '../../state/user/hooks'\nimport { isTokenOnList } from '../../utils'\nimport { useCombinedActiveList } from '../../state/lists/hooks'\n\nexport default function MigrateV1() {\n  const theme = useContext(ThemeContext)\n  const { account, chainId } = useActiveWeb3React()\n\n  const [tokenSearch, setTokenSearch] = useState<string>('')\n  const handleTokenSearchChange = useCallback(e => setTokenSearch(e.target.value), [setTokenSearch])\n\n  // automatically add the search token\n  const token = useToken(tokenSearch)\n  const selectedTokenListTokens = useCombinedActiveList()\n  const isOnSelectedList = isTokenOnList(selectedTokenListTokens, token ?? undefined)\n  const allTokens = useAllTokens()\n  const addToken = useAddUserToken()\n  useEffect(() => {\n    if (token && !isOnSelectedList && !allTokens[token.address]) {\n      addToken(token)\n    }\n  }, [token, isOnSelectedList, addToken, allTokens])\n\n  // get V1 LP balances\n  const V1Exchanges = useAllTokenV1Exchanges()\n  const V1LiquidityTokens: Token[] = useMemo(() => {\n    return chainId\n      ? Object.keys(V1Exchanges).map(exchangeAddress => new Token(chainId, exchangeAddress, 18, 'UNI-V1', 'Uniswap V1'))\n      : []\n  }, [chainId, V1Exchanges])\n  const [V1LiquidityBalances, V1LiquidityBalancesLoading] = useTokenBalancesWithLoadingIndicator(\n    account ?? undefined,\n    V1LiquidityTokens\n  )\n  const allV1PairsWithLiquidity = V1LiquidityTokens.filter(V1LiquidityToken => {\n    const balance = V1LiquidityBalances?.[V1LiquidityToken.address]\n    return balance && JSBI.greaterThan(balance.raw, JSBI.BigInt(0))\n  }).map(V1LiquidityToken => {\n    const balance = V1LiquidityBalances[V1LiquidityToken.address]\n    return balance ? (\n      <V1PositionCard\n        key={V1LiquidityToken.address}\n        token={V1Exchanges[V1LiquidityToken.address]}\n        V1LiquidityBalance={balance}\n      />\n    ) : null\n  })\n\n  // should never always be false, because a V1 exhchange exists for WETH on all testnets\n  const isLoading = Object.keys(V1Exchanges)?.length === 0 || V1LiquidityBalancesLoading\n\n  return (\n    <BodyWrapper style={{ padding: 24 }}>\n      <AutoColumn gap=\"16px\">\n        <AutoRow style={{ alignItems: 'center', justifyContent: 'space-between' }} gap=\"8px\">\n          <BackArrow to=\"/pool\" />\n          <TYPE.mediumHeader>Migrate V1 Liquidity</TYPE.mediumHeader>\n          <div>\n            <QuestionHelper text=\"Migrate your liquidity tokens from Uniswap V1 to Uniswap V2.\" />\n          </div>\n        </AutoRow>\n\n        <TYPE.body style={{ marginBottom: 8, fontWeight: 400 }}>\n          For each pool shown below, click migrate to remove your liquidity from Uniswap V1 and deposit it into Uniswap\n          V2.\n        </TYPE.body>\n\n        {!account ? (\n          <LightCard padding=\"40px\">\n            <TYPE.body color={theme.text3} textAlign=\"center\">\n              Connect to a wallet to view your V1 liquidity.\n            </TYPE.body>\n          </LightCard>\n        ) : isLoading ? (\n          <LightCard padding=\"40px\">\n            <TYPE.body color={theme.text3} textAlign=\"center\">\n              <Dots>Loading</Dots>\n            </TYPE.body>\n          </LightCard>\n        ) : (\n          <>\n            <AutoRow>\n              <SearchInput\n                value={tokenSearch}\n                onChange={handleTokenSearchChange}\n                placeholder=\"Enter a token address to find liquidity\"\n              />\n            </AutoRow>\n            {allV1PairsWithLiquidity?.length > 0 ? (\n              <>{allV1PairsWithLiquidity}</>\n            ) : (\n              <EmptyState message=\"No V1 Liquidity found.\" />\n            )}\n          </>\n        )}\n      </AutoColumn>\n    </BodyWrapper>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}